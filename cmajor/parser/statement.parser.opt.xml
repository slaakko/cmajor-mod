<parserFile>
 <grammar name="StatementParser">
  <rule first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" name="Statement">
   <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
    <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
     <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
      <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
       <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
        <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
         <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
          <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
           <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
            <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CONTINUE, CPL, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
             <choice first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CONTINUE, CPL, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
              <switch first="{BREAK, CONTINUE, DO, FOR, GOTO, ID, IF, LBRACE, RETURN, SWITCH, WHILE}">
               <case first="{ID}">
                <action first="{ID}">
                 <nonterminal first="{ID}" ruleName="LabeledStatement"/>
                </action>
               </case>
               <case first="{BREAK, CONTINUE, DO, FOR, GOTO, IF, LBRACE, RETURN, SWITCH, WHILE}">
                <action first="{BREAK, CONTINUE, DO, FOR, GOTO, IF, LBRACE, RETURN, SWITCH, WHILE}">
                 <nonterminal first="{BREAK, CONTINUE, DO, FOR, GOTO, IF, LBRACE, RETURN, SWITCH, WHILE}" ruleName="ControlStatement"/>
                </action>
               </case>
              </switch>
              <action first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
               <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ExpressionStatement"/>
              </action>
             </choice>
             <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
              <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="AssignmentStatement"/>
             </action>
            </choice>
            <action first="{#, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
             <nonterminal first="{#, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ConstructionStatement"/>
            </action>
           </choice>
           <action first="{DELETE}">
            <nonterminal first="{DELETE}" ruleName="DeleteStatement"/>
           </action>
          </choice>
          <action first="{DESTROY}">
           <nonterminal first="{DESTROY}" ruleName="DestroyStatement"/>
          </action>
         </choice>
         <action first="{SEMICOLON}">
          <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
         </action>
        </choice>
        <action first="{THROW}">
         <nonterminal first="{THROW}" ruleName="ThrowStatement"/>
        </action>
       </choice>
       <action first="{TRY}">
        <nonterminal first="{TRY}" ruleName="TryStatement"/>
       </action>
      </choice>
      <action first="{HASH}">
       <nonterminal first="{HASH}" ruleName="AssertStatement"/>
      </action>
     </choice>
     <action first="{HASH}">
      <nonterminal first="{HASH}" ruleName="ConditionalCompilationStatement"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{ID}" name="Label">
   <action first="{ID}">
    <group first="{ID}">
     <sequence first="{ID}">
      <action first="{ID}">
       <token first="{ID}" name="ID"/>
      </action>
      <token first="{COLON}" name="COLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="LabeledStatement">
   <action first="{ID}">
    <group first="{ID}">
     <sequence first="{ID}">
      <action first="{ID}">
       <nonterminal first="{ID}" ruleName="Label"/>
      </action>
      <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{BREAK, CONTINUE, DO, FOR, GOTO, IF, LBRACE, RETURN, SWITCH, WHILE}" name="ControlStatement">
   <group first="{BREAK, CONTINUE, DO, FOR, GOTO, IF, LBRACE, RETURN, SWITCH, WHILE}">
    <choice first="{BREAK, CONTINUE, DO, FOR, GOTO, IF, LBRACE, RETURN, SWITCH, WHILE}">
     <choice first="{BREAK, CONTINUE, DO, FOR, GOTO, IF, LBRACE, RETURN, SWITCH, WHILE}">
      <switch first="{BREAK, CONTINUE, DO, FOR, GOTO, IF, LBRACE, RETURN, SWITCH, WHILE}">
       <case first="{DO, FOR, IF, LBRACE, RETURN, WHILE}">
        <choice first="{DO, FOR, IF, LBRACE, RETURN, WHILE}">
         <switch first="{DO, FOR, IF, LBRACE, RETURN, WHILE}">
          <case first="{LBRACE}">
           <action first="{LBRACE}">
            <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
           </action>
          </case>
          <case first="{RETURN}">
           <action first="{RETURN}">
            <nonterminal first="{RETURN}" ruleName="ReturnStatement"/>
           </action>
          </case>
          <case first="{IF}">
           <action first="{IF}">
            <nonterminal first="{IF}" ruleName="IfStatement"/>
           </action>
          </case>
          <case first="{WHILE}">
           <action first="{WHILE}">
            <nonterminal first="{WHILE}" ruleName="WhileStatement"/>
           </action>
          </case>
          <case first="{DO}">
           <action first="{DO}">
            <nonterminal first="{DO}" ruleName="DoStatement"/>
           </action>
          </case>
          <case first="{FOR}">
           <action first="{FOR}">
            <nonterminal first="{FOR}" ruleName="RangeForStatement"/>
           </action>
          </case>
         </switch>
         <action first="{FOR}">
          <nonterminal first="{FOR}" ruleName="ForStatement"/>
         </action>
        </choice>
       </case>
       <case first="{BREAK}">
        <action first="{BREAK}">
         <nonterminal first="{BREAK}" ruleName="BreakStatement"/>
        </action>
       </case>
       <case first="{CONTINUE}">
        <action first="{CONTINUE}">
         <nonterminal first="{CONTINUE}" ruleName="ContinueStatement"/>
        </action>
       </case>
       <case first="{GOTO}">
        <action first="{GOTO}">
         <nonterminal first="{GOTO}" ruleName="GotoStatement"/>
        </action>
       </case>
       <case first="{SWITCH}">
        <action first="{SWITCH}">
         <nonterminal first="{SWITCH}" ruleName="SwitchStatement"/>
        </action>
       </case>
      </switch>
      <action first="{GOTO}">
       <nonterminal first="{GOTO}" ruleName="GotoCaseStatement"/>
      </action>
     </choice>
     <action first="{GOTO}">
      <nonterminal first="{GOTO}" ruleName="GotoDefaultStatement"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{LBRACE}" name="CompoundStatement">
   <action first="{LBRACE}">
    <group first="{LBRACE}">
     <sequence first="{LBRACE}">
      <sequence first="{LBRACE}">
       <action first="{LBRACE}">
        <token first="{LBRACE}" name="LBRACE"/>
       </action>
       <kleene first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
        <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
         <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
          <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
         </action>
        </group>
       </kleene>
      </sequence>
      <action first="{RBRACE}">
       <token first="{RBRACE}" name="RBRACE"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RETURN}" name="ReturnStatement">
   <action first="{RETURN}">
    <group first="{RETURN}">
     <sequence first="{RETURN}">
      <sequence first="{RETURN}">
       <action first="{RETURN}">
        <token first="{RETURN}" name="RETURN"/>
       </action>
       <optional first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
       </optional>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{IF}" name="IfStatement">
   <action first="{IF}">
    <group first="{IF}">
     <sequence first="{IF}">
      <sequence first="{IF}">
       <sequence first="{IF}">
        <sequence first="{IF}">
         <sequence first="{IF}">
          <action first="{IF}">
           <token first="{IF}" name="IF"/>
          </action>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
        </sequence>
        <token first="{RPAREN}" name="RPAREN"/>
       </sequence>
       <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
      </sequence>
      <optional first="{#, ELSE}">
       <group first="{ELSE}">
        <sequence first="{ELSE}">
         <token first="{ELSE}" name="ELSE"/>
         <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{WHILE}" name="WhileStatement">
   <action first="{WHILE}">
    <group first="{WHILE}">
     <sequence first="{WHILE}">
      <sequence first="{WHILE}">
       <sequence first="{WHILE}">
        <sequence first="{WHILE}">
         <action first="{WHILE}">
          <token first="{WHILE}" name="WHILE"/>
         </action>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DO}" name="DoStatement">
   <action first="{DO}">
    <group first="{DO}">
     <sequence first="{DO}">
      <sequence first="{DO}">
       <sequence first="{DO}">
        <sequence first="{DO}">
         <sequence first="{DO}">
          <sequence first="{DO}">
           <action first="{DO}">
            <token first="{DO}" name="DO"/>
           </action>
           <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
          </sequence>
          <token first="{WHILE}" name="WHILE"/>
         </sequence>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="RangeForStatement">
   <action first="{FOR}">
    <group first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <sequence first="{FOR}">
           <sequence first="{FOR}">
            <action first="{FOR}">
             <token first="{FOR}" name="FOR"/>
            </action>
            <token first="{LPAREN}" name="LPAREN"/>
           </sequence>
           <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
          </sequence>
          <nonterminal first="{ID}" ruleName="Identifier"/>
         </sequence>
         <token first="{COLON}" name="COLON"/>
        </sequence>
        <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="ForStatement">
   <action first="{FOR}">
    <group first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <sequence first="{FOR}">
           <sequence first="{FOR}">
            <action first="{FOR}">
             <token first="{FOR}" name="FOR"/>
            </action>
            <token first="{LPAREN}" name="LPAREN"/>
           </sequence>
           <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ForInitStatement"/>
          </sequence>
          <optional first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
           <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
          </optional>
         </sequence>
         <token first="{SEMICOLON}" name="SEMICOLON"/>
        </sequence>
        <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ForLoopStatementExpr"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="ForInitStatement">
   <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="AssignmentStatement"/>
      </action>
      <action first="{#, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ConstructionStatement"/>
      </action>
     </choice>
     <action first="{SEMICOLON}">
      <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="ForLoopStatementExpr">
   <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="AssignmentStatementExpr"/>
      </action>
      <action first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
      </action>
     </choice>
     <action first="{#}">
      <empty first="{#}"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{BREAK}" name="BreakStatement">
   <action first="{BREAK}">
    <group first="{BREAK}">
     <sequence first="{BREAK}">
      <action first="{BREAK}">
       <token first="{BREAK}" name="BREAK"/>
      </action>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CONTINUE}" name="ContinueStatement">
   <action first="{CONTINUE}">
    <group first="{CONTINUE}">
     <sequence first="{CONTINUE}">
      <action first="{CONTINUE}">
       <token first="{CONTINUE}" name="CONTINUE"/>
      </action>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{GOTO}" name="GotoStatement">
   <action first="{GOTO}">
    <group first="{GOTO}">
     <sequence first="{GOTO}">
      <sequence first="{GOTO}">
       <action first="{GOTO}">
        <token first="{GOTO}" name="GOTO"/>
       </action>
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SWITCH}" name="SwitchStatement">
   <action first="{SWITCH}">
    <group first="{SWITCH}">
     <sequence first="{SWITCH}">
      <sequence first="{SWITCH}">
       <sequence first="{SWITCH}">
        <sequence first="{SWITCH}">
         <sequence first="{SWITCH}">
          <sequence first="{SWITCH}">
           <action first="{SWITCH}">
            <token first="{SWITCH}" name="SWITCH"/>
           </action>
           <token first="{LPAREN}" name="LPAREN"/>
          </sequence>
          <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
         </sequence>
         <action first="{RPAREN}">
          <token first="{RPAREN}" name="RPAREN"/>
         </action>
        </sequence>
        <token first="{LBRACE}" name="LBRACE"/>
       </sequence>
       <kleene first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CASE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DEFAULT, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
        <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CASE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DEFAULT, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
         <choice first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CASE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DEFAULT, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
          <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CASE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
           <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CASE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="CaseStatement"/>
          </action>
          <action first="{DEFAULT}">
           <nonterminal first="{DEFAULT}" ruleName="DefaultStatement"/>
          </action>
         </choice>
        </group>
       </kleene>
      </sequence>
      <token first="{RBRACE}" name="RBRACE"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CASE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" name="CaseStatement">
   <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CASE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
    <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CASE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
     <sequence first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CASE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
      <sequence first="{#, CASE}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <positive first="{CASE}">
        <group first="{CASE}">
         <sequence first="{CASE}">
          <sequence first="{CASE}">
           <token first="{CASE}" name="CASE"/>
           <action first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
            <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
           </action>
          </sequence>
          <token first="{COLON}" name="COLON"/>
         </sequence>
        </group>
       </positive>
      </sequence>
      <kleene first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
       <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
        <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
         <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
        </action>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DEFAULT}" name="DefaultStatement">
   <action first="{DEFAULT}">
    <group first="{DEFAULT}">
     <sequence first="{DEFAULT}">
      <sequence first="{DEFAULT}">
       <action first="{DEFAULT}">
        <token first="{DEFAULT}" name="DEFAULT"/>
       </action>
       <action first="{COLON}">
        <token first="{COLON}" name="COLON"/>
       </action>
      </sequence>
      <kleene first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
       <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
        <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
         <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
        </action>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{GOTO}" name="GotoCaseStatement">
   <action first="{GOTO}">
    <group first="{GOTO}">
     <sequence first="{GOTO}">
      <sequence first="{GOTO}">
       <sequence first="{GOTO}">
        <action first="{GOTO}">
         <token first="{GOTO}" name="GOTO"/>
        </action>
        <token first="{CASE}" name="CASE"/>
       </sequence>
       <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{GOTO}" name="GotoDefaultStatement">
   <action first="{GOTO}">
    <group first="{GOTO}">
     <sequence first="{GOTO}">
      <sequence first="{GOTO}">
       <action first="{GOTO}">
        <token first="{GOTO}" name="GOTO"/>
       </action>
       <token first="{DEFAULT}" name="DEFAULT"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="ExpressionStatement">
   <action first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <sequence first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <action first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
       </action>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="AssignmentStatement">
   <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="AssignmentStatementExpr"/>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="AssignmentStatementExpr">
   <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <sequence first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <sequence first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <action first="{#}">
         <empty first="{#}"/>
        </action>
        <action first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
         <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
        </action>
       </sequence>
       <token first="{ASSIGN}" name="ASSIGN"/>
      </sequence>
      <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="ConstructionStatement">
   <action first="{#, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <sequence first="{#, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <sequence first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
         <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
        </action>
        <action first="{ID}">
         <nonterminal first="{ID}" ruleName="Identifier"/>
        </action>
       </sequence>
       <group first="{#, ASSIGN, LPAREN}">
        <choice first="{#, ASSIGN, LPAREN}">
         <switch first="{ASSIGN, LPAREN}">
          <case first="{ASSIGN}">
           <sequence first="{ASSIGN}">
            <token first="{ASSIGN}" name="ASSIGN"/>
            <action first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
             <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
            </action>
           </sequence>
          </case>
          <case first="{LPAREN}">
           <sequence first="{LPAREN}">
            <sequence first="{LPAREN}">
             <token first="{LPAREN}" name="LPAREN"/>
             <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, COMMA, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ArgumentList"/>
            </sequence>
            <token first="{RPAREN}" name="RPAREN"/>
           </sequence>
          </case>
         </switch>
         <action first="{#}">
          <empty first="{#}"/>
         </action>
        </choice>
       </group>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DELETE}" name="DeleteStatement">
   <action first="{DELETE}">
    <group first="{DELETE}">
     <sequence first="{DELETE}">
      <sequence first="{DELETE}">
       <action first="{DELETE}">
        <token first="{DELETE}" name="DELETE"/>
       </action>
       <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DESTROY}" name="DestroyStatement">
   <action first="{DESTROY}">
    <group first="{DESTROY}">
     <sequence first="{DESTROY}">
      <sequence first="{DESTROY}">
       <action first="{DESTROY}">
        <token first="{DESTROY}" name="DESTROY"/>
       </action>
       <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SEMICOLON}" name="EmptyStatement">
   <action first="{SEMICOLON}">
    <group first="{SEMICOLON}">
     <action first="{SEMICOLON}">
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </action>
    </group>
   </action>
  </rule>
  <rule first="{THROW}" name="ThrowStatement">
   <action first="{THROW}">
    <group first="{THROW}">
     <sequence first="{THROW}">
      <sequence first="{THROW}">
       <action first="{THROW}">
        <token first="{THROW}" name="THROW"/>
       </action>
       <optional first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
       </optional>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{TRY}" name="TryStatement">
   <action first="{TRY}">
    <group first="{TRY}">
     <sequence first="{TRY}">
      <sequence first="{TRY}">
       <action first="{TRY}">
        <token first="{TRY}" name="TRY"/>
       </action>
       <action first="{LBRACE}">
        <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
       </action>
      </sequence>
      <positive first="{CATCH}">
       <group first="{CATCH}">
        <action first="{CATCH}">
         <nonterminal first="{CATCH}" ruleName="Catch"/>
        </action>
       </group>
      </positive>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CATCH}" name="Catch">
   <action first="{CATCH}">
    <group first="{CATCH}">
     <sequence first="{CATCH}">
      <sequence first="{CATCH}">
       <sequence first="{CATCH}">
        <sequence first="{CATCH}">
         <sequence first="{CATCH}">
          <action first="{CATCH}">
           <token first="{CATCH}" name="CATCH"/>
          </action>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
        </sequence>
        <optional first="{#, ID}">
         <nonterminal first="{ID}" ruleName="Identifier"/>
        </optional>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{HASH}" name="AssertStatement">
   <action first="{HASH}">
    <group first="{HASH}">
     <sequence first="{HASH}">
      <sequence first="{HASH}">
       <sequence first="{HASH}">
        <action first="{HASH}">
         <token first="{HASH}" name="HASH"/>
        </action>
        <token first="{ASSERT}" name="ASSERT"/>
       </sequence>
       <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{HASH}" name="ConditionalCompilationStatement">
   <action first="{HASH}">
    <group first="{HASH}">
     <sequence first="{HASH}">
      <sequence first="{HASH}">
       <sequence first="{HASH}">
        <sequence first="{HASH}">
         <sequence first="{HASH}">
          <sequence first="{HASH}">
           <sequence first="{HASH}">
            <sequence first="{HASH}">
             <action first="{HASH}">
              <token first="{HASH}" name="HASH"/>
             </action>
             <token first="{IF}" name="IF"/>
            </sequence>
            <token first="{LPAREN}" name="LPAREN"/>
           </sequence>
           <action first="{EXCLAMATION, ID, LPAREN}">
            <nonterminal first="{EXCLAMATION, ID, LPAREN}" ruleName="ConditionalCompilationExpression"/>
           </action>
          </sequence>
          <token first="{RPAREN}" name="RPAREN"/>
         </sequence>
         <kleene first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
          <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
           <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
            <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
           </action>
          </group>
         </kleene>
        </sequence>
        <kleene first="{#, HASH}">
         <group first="{HASH}">
          <sequence first="{HASH}">
           <sequence first="{HASH}">
            <sequence first="{HASH}">
             <sequence first="{HASH}">
              <sequence first="{HASH}">
               <action first="{HASH}">
                <token first="{HASH}" name="HASH"/>
               </action>
               <token first="{ELIF}" name="ELIF"/>
              </sequence>
              <token first="{LPAREN}" name="LPAREN"/>
             </sequence>
             <action first="{EXCLAMATION, ID, LPAREN}">
              <nonterminal first="{EXCLAMATION, ID, LPAREN}" ruleName="ConditionalCompilationExpression"/>
             </action>
            </sequence>
            <token first="{RPAREN}" name="RPAREN"/>
           </sequence>
           <kleene first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
            <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
             <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
              <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
             </action>
            </group>
           </kleene>
          </sequence>
         </group>
        </kleene>
       </sequence>
       <optional first="{#, HASH}">
        <group first="{HASH}">
         <sequence first="{HASH}">
          <sequence first="{HASH}">
           <action first="{HASH}">
            <token first="{HASH}" name="HASH"/>
           </action>
           <token first="{ELSE}" name="ELSE"/>
          </sequence>
          <kleene first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
           <group first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
            <action first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}">
             <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, ASSIGN, AUTO, BASE, BITOR, BITXOR, BOOL, BREAK, BYTE, CAST, CHAR, CHARLIT, CONST, CONSTRUCT, CONTINUE, CPL, DELETE, DESTROY, DISJUNCTION, DIV, DO, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, FOR, GEQ, GOTO, HASH, ID, IF, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, RETURN, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, SWITCH, THIS, THROW, TRUE, TRY, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHILE}" ruleName="Statement"/>
            </action>
           </group>
          </kleene>
         </sequence>
        </group>
       </optional>
      </sequence>
      <group first="{HASH}">
       <sequence first="{HASH}">
        <token first="{HASH}" name="HASH"/>
        <token first="{ENDIF}" name="ENDIF"/>
       </sequence>
      </group>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{EXCLAMATION, ID, LPAREN}" name="ConditionalCompilationExpression">
   <action first="{EXCLAMATION, ID, LPAREN}">
    <group first="{EXCLAMATION, ID, LPAREN}">
     <nonterminal first="{EXCLAMATION, ID, LPAREN}" ruleName="ConditionalCompilationDisjunction"/>
    </group>
   </action>
  </rule>
  <rule first="{EXCLAMATION, ID, LPAREN}" name="ConditionalCompilationDisjunction">
   <action first="{EXCLAMATION, ID, LPAREN}">
    <group first="{EXCLAMATION, ID, LPAREN}">
     <sequence first="{EXCLAMATION, ID, LPAREN}">
      <action first="{EXCLAMATION, ID, LPAREN}">
       <nonterminal first="{EXCLAMATION, ID, LPAREN}" ruleName="ConditionalCompilationConjunction"/>
      </action>
      <kleene first="{#, DISJUNCTION}">
       <group first="{DISJUNCTION}">
        <sequence first="{DISJUNCTION}">
         <token first="{DISJUNCTION}" name="DISJUNCTION"/>
         <action first="{EXCLAMATION, ID, LPAREN}">
          <nonterminal first="{EXCLAMATION, ID, LPAREN}" ruleName="ConditionalCompilationConjunction"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{EXCLAMATION, ID, LPAREN}" name="ConditionalCompilationConjunction">
   <action first="{EXCLAMATION, ID, LPAREN}">
    <group first="{EXCLAMATION, ID, LPAREN}">
     <sequence first="{EXCLAMATION, ID, LPAREN}">
      <action first="{EXCLAMATION, ID, LPAREN}">
       <nonterminal first="{EXCLAMATION, ID, LPAREN}" ruleName="ConditionalCompilationPrefix"/>
      </action>
      <kleene first="{#, AMPAMP}">
       <group first="{AMPAMP}">
        <sequence first="{AMPAMP}">
         <token first="{AMPAMP}" name="AMPAMP"/>
         <action first="{EXCLAMATION, ID, LPAREN}">
          <nonterminal first="{EXCLAMATION, ID, LPAREN}" ruleName="ConditionalCompilationPrefix"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{EXCLAMATION, ID, LPAREN}" name="ConditionalCompilationPrefix">
   <action first="{EXCLAMATION, ID, LPAREN}">
    <group first="{EXCLAMATION, ID, LPAREN}">
     <group first="{EXCLAMATION, ID, LPAREN}">
      <switch first="{EXCLAMATION, ID, LPAREN}">
       <case first="{EXCLAMATION}">
        <sequence first="{EXCLAMATION}">
         <action first="{EXCLAMATION}">
          <token first="{EXCLAMATION}" name="EXCLAMATION"/>
         </action>
         <action first="{EXCLAMATION, ID, LPAREN}">
          <nonterminal first="{EXCLAMATION, ID, LPAREN}" ruleName="ConditionalCompilationPrefix"/>
         </action>
        </sequence>
       </case>
       <case first="{ID, LPAREN}">
        <action first="{ID, LPAREN}">
         <nonterminal first="{ID, LPAREN}" ruleName="ConditionalCompilationPrimary"/>
        </action>
       </case>
      </switch>
     </group>
    </group>
   </action>
  </rule>
  <rule first="{ID, LPAREN}" name="ConditionalCompilationPrimary">
   <group first="{ID, LPAREN}">
    <switch first="{ID, LPAREN}">
     <case first="{ID}">
      <action first="{ID}">
       <token first="{ID}" name="ID"/>
      </action>
     </case>
     <case first="{LPAREN}">
      <sequence first="{LPAREN}">
       <sequence first="{LPAREN}">
        <action first="{LPAREN}">
         <token first="{LPAREN}" name="LPAREN"/>
        </action>
        <nonterminal first="{EXCLAMATION, ID, LPAREN}" ruleName="ConditionalCompilationExpression"/>
       </sequence>
       <action first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </action>
      </sequence>
     </case>
    </switch>
   </group>
  </rule>
 </grammar>
</parserFile>
