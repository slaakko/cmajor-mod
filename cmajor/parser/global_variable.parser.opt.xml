<parserFile>
 <grammar name="GlobalVariableParser">
  <rule first="{#, ABSTRACT, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}" name="GlobalVariable">
   <action first="{#, ABSTRACT, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
    <group first="{#, ABSTRACT, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
     <sequence first="{#, ABSTRACT, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
      <sequence first="{#, ABSTRACT, AMP, AMPAMP, ASSIGN, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
       <sequence first="{#, ABSTRACT, AMP, AMPAMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
        <sequence first="{#, ABSTRACT, AMP, AMPAMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
         <action first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
          <nonterminal first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}" ruleName="Specifiers"/>
         </action>
         <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
        </sequence>
        <nonterminal first="{ID}" ruleName="Identifier"/>
       </sequence>
       <optional first="{#, ASSIGN}">
        <group first="{ASSIGN}">
         <sequence first="{ASSIGN}">
          <token first="{ASSIGN}" name="ASSIGN"/>
          <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
         </sequence>
        </group>
       </optional>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
 </grammar>
</parserFile>
