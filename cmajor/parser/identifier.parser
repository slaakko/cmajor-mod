// =================================
// Copyright (c) 2024 Seppo Laakko
// Distributed under the MIT license
// =================================

export module cmajor.identifier.parser;

[interface]import cmajor.parser.context;
[interface]import cmajor.ast;
[interface]import soul.ast.span;
[implementation]import cmajor.token;
[implementation]import soul.lexer;
[implementation]import cmajor.lexer;

parser IdentifierParser
{
    lexer cmajor::lexer::CmajorLexer<char32_t>;

    Identifier(cmajor::parser::context::Context* context) : cmajor::ast::IdentifierNode*
        ::= ID{ return new cmajor::ast::IdentifierNode(lexer.GetSpan(pos), lexer.GetToken(pos).ToString()); }
        ;

    QualifiedId(cmajor::parser::context::Context* context, var std::u32string value) : cmajor::ast::IdentifierNode*
        ::= 
        (
            ID{ value = lexer.GetToken(pos).ToString(); }
            (DOT ID{ value.append(1, '.').append(lexer.GetToken(pos).ToString()); })*
        )
        {
            return new cmajor::ast::IdentifierNode(lexer.GetSpan(pos), value); 
        }
        ;
}
