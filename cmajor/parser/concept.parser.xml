<parserFile>
 <grammar name="ConceptParser">
  <rule first="{#, ABSTRACT, AMP, AMPAMP, AUTO, AXIOM, BOOL, BYTE, CDECL, CHAR, COLON, CONCEPT, CONST, CONSTEXPR, CPL, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}" name="Concept">
   <sequence first="{#, ABSTRACT, AMP, AMPAMP, AUTO, AXIOM, BOOL, BYTE, CDECL, CHAR, COLON, CONCEPT, CONST, CONSTEXPR, CPL, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, ABSTRACT, AMP, AMPAMP, AUTO, AXIOM, BOOL, BYTE, CDECL, CHAR, COLON, CONCEPT, CONST, CONSTEXPR, CPL, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
     <group first="{#, ABSTRACT, AMP, AMPAMP, AUTO, AXIOM, BOOL, BYTE, CDECL, CHAR, COLON, CONCEPT, CONST, CONSTEXPR, CPL, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
      <sequence first="{#, ABSTRACT, AMP, AMPAMP, AUTO, AXIOM, BOOL, BYTE, CDECL, CHAR, COLON, CONCEPT, CONST, CONSTEXPR, CPL, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
       <sequence first="{#, ABSTRACT, AMP, AMPAMP, AUTO, AXIOM, BOOL, BYTE, CDECL, CHAR, COLON, CONCEPT, CONST, CONSTEXPR, CPL, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RANGLE, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
        <sequence first="{#, ABSTRACT, CDECL, COLON, CONCEPT, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LANGLE, LBRACE, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RANGLE, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
         <sequence first="{#, ABSTRACT, CDECL, COLON, CONCEPT, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LANGLE, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RANGLE, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
          <sequence first="{#, ABSTRACT, CDECL, COLON, CONCEPT, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LANGLE, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RANGLE, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
           <sequence first="{#, ABSTRACT, CDECL, CONCEPT, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LANGLE, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RANGLE, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
            <sequence first="{#, ABSTRACT, CDECL, CONCEPT, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LANGLE, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
             <sequence first="{#, ABSTRACT, CDECL, CONCEPT, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LANGLE, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
              <sequence first="{#, ABSTRACT, CDECL, CONCEPT, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
               <sequence first="{#, ABSTRACT, CDECL, CONCEPT, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
                <action first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
                 <nonterminal first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}" ruleName="Specifiers"/>
                </action>
                <token first="{CONCEPT}" name="CONCEPT"/>
               </sequence>
               <action first="{ID}">
                <nonterminal first="{ID}" ruleName="Identifier"/>
               </action>
              </sequence>
              <action first="{LANGLE}">
               <token first="{LANGLE}" name="LANGLE"/>
              </action>
             </sequence>
             <group first="{ID}">
              <list first="{ID}">
               <sequence first="{ID}">
                <action first="{ID}">
                 <nonterminal first="{ID}" ruleName="Identifier"/>
                </action>
                <kleene first="{#, COMMA}">
                 <sequence first="{COMMA}">
                  <token first="{COMMA}" name="COMMA"/>
                  <action first="{ID}">
                   <nonterminal first="{ID}" ruleName="Identifier"/>
                  </action>
                 </sequence>
                </kleene>
               </sequence>
              </list>
             </group>
            </sequence>
            <action first="{RANGLE}">
             <token first="{RANGLE}" name="RANGLE"/>
            </action>
           </sequence>
           <optional first="{#, COLON}">
            <group first="{COLON}">
             <action first="{COLON}">
              <nonterminal first="{COLON}" ruleName="Refinement"/>
             </action>
            </group>
           </optional>
          </sequence>
          <optional first="{#, WHERE}">
           <group first="{WHERE}">
            <action first="{WHERE}">
             <nonterminal first="{WHERE}" ruleName="WhereConstraint"/>
            </action>
           </group>
          </optional>
         </sequence>
         <token first="{LBRACE}" name="LBRACE"/>
        </sequence>
        <nonterminal first="{#, AMP, AMPAMP, AUTO, AXIOM, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHERE}" ruleName="ConceptBody"/>
       </sequence>
       <token first="{RBRACE}" name="RBRACE"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{COLON}" name="Refinement">
   <action first="{COLON}">
    <group first="{COLON}">
     <sequence first="{COLON}">
      <sequence first="{COLON}">
       <sequence first="{COLON}">
        <sequence first="{COLON}">
         <token first="{COLON}" name="COLON"/>
         <action first="{ID}">
          <nonterminal first="{ID}" ruleName="QualifiedId"/>
         </action>
        </sequence>
        <token first="{LANGLE}" name="LANGLE"/>
       </sequence>
       <group first="{ID}">
        <list first="{ID}">
         <sequence first="{ID}">
          <action first="{ID}">
           <nonterminal first="{ID}" ruleName="Identifier"/>
          </action>
          <kleene first="{#, COMMA}">
           <sequence first="{COMMA}">
            <token first="{COMMA}" name="COMMA"/>
            <action first="{ID}">
             <nonterminal first="{ID}" ruleName="Identifier"/>
            </action>
           </sequence>
          </kleene>
         </sequence>
        </list>
       </group>
      </sequence>
      <token first="{RANGLE}" name="RANGLE"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, AUTO, AXIOM, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHERE}" name="ConceptBody">
   <kleene first="{#, AMP, AMPAMP, AUTO, AXIOM, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHERE}">
    <group first="{#, AMP, AMPAMP, AUTO, AXIOM, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHERE}">
     <choice first="{#, AMP, AMPAMP, AUTO, AXIOM, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHERE}">
      <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHERE}" ruleName="ConceptBodyConstraint"/>
      <nonterminal first="{AXIOM}" ruleName="Axiom"/>
     </choice>
    </group>
   </kleene>
  </rule>
  <rule first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHERE}" name="ConceptBodyConstraint">
   <choice first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR, WHERE}">
    <choice first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <action first="{TYPENAME}">
      <nonterminal first="{TYPENAME}" ruleName="TypeNameConstraint"/>
     </action>
     <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="SignatureConstraint"/>
     </action>
    </choice>
    <action first="{WHERE}">
     <nonterminal first="{WHERE}" ruleName="EmbeddedConstraint"/>
    </action>
   </choice>
  </rule>
  <rule first="{TYPENAME}" name="TypeNameConstraint">
   <action first="{TYPENAME}">
    <group first="{TYPENAME}">
     <sequence first="{TYPENAME}">
      <sequence first="{TYPENAME}">
       <action first="{TYPENAME}">
        <token first="{TYPENAME}" name="TYPENAME"/>
       </action>
       <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="SignatureConstraint">
   <choice first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <choice first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, CPL, DOT, DOUBLE, EXPLICIT, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <choice first="{#, CPL, EXPLICIT, ID, LPAREN, SEMICOLON}">
      <action first="{#, EXPLICIT, ID, LPAREN, SEMICOLON}">
       <nonterminal first="{#, EXPLICIT, ID, LPAREN, SEMICOLON}" ruleName="ConstructorConstraint"/>
      </action>
      <action first="{CPL}">
       <nonterminal first="{CPL}" ruleName="DestructorConstraint"/>
      </action>
     </choice>
     <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="MemberFunctionConstraint"/>
     </action>
    </choice>
    <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="FunctionConstraint"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, EXPLICIT, ID, LPAREN, SEMICOLON}" name="ConstructorConstraint">
   <action first="{#, EXPLICIT, ID, LPAREN, SEMICOLON}">
    <group first="{#, EXPLICIT, ID, LPAREN, SEMICOLON}">
     <sequence first="{#, EXPLICIT, ID, LPAREN, SEMICOLON}">
      <sequence first="{#, EXPLICIT, ID, LPAREN}">
       <sequence first="{#, EXPLICIT, ID}">
        <optional first="{#, EXPLICIT}">
         <token first="{EXPLICIT}" name="EXPLICIT"/>
        </optional>
        <action first="{ID}">
         <nonterminal first="{ID}" ruleName="Identifier"/>
        </action>
       </sequence>
       <nonterminal first="{LPAREN}" ruleName="ParameterList"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CPL}" name="DestructorConstraint">
   <action first="{CPL}">
    <group first="{CPL}">
     <sequence first="{CPL}">
      <sequence first="{CPL}">
       <sequence first="{CPL}">
        <sequence first="{CPL}">
         <action first="{CPL}">
          <token first="{CPL}" name="CPL"/>
         </action>
         <action first="{ID}">
          <nonterminal first="{ID}" ruleName="Identifier"/>
         </action>
        </sequence>
        <token first="{LPAREN}" name="LPAREN"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="MemberFunctionConstraint">
   <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <sequence first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <sequence first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, OPERATOR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <sequence first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
         <sequence first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
           <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
          </action>
          <nonterminal first="{ID}" ruleName="Identifier"/>
         </sequence>
         <token first="{DOT}" name="DOT"/>
        </sequence>
        <action first="{#, ID, OPERATOR}">
         <nonterminal first="{#, ID, OPERATOR}" ruleName="FunctionGroupId"/>
        </action>
       </sequence>
       <nonterminal first="{LPAREN}" ruleName="ParameterList"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="FunctionConstraint">
   <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <sequence first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, LPAREN, OPERATOR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <sequence first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, OPERATOR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
         <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
        </action>
        <action first="{#, ID, OPERATOR}">
         <nonterminal first="{#, ID, OPERATOR}" ruleName="FunctionGroupId"/>
        </action>
       </sequence>
       <nonterminal first="{LPAREN}" ruleName="ParameterList"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{WHERE}" name="EmbeddedConstraint">
   <action first="{WHERE}">
    <group first="{WHERE}">
     <sequence first="{WHERE}">
      <action first="{WHERE}">
       <nonterminal first="{WHERE}" ruleName="WhereConstraint"/>
      </action>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{WHERE}" name="WhereConstraint">
   <action first="{WHERE}">
    <group first="{WHERE}">
     <sequence first="{WHERE}">
      <action first="{WHERE}">
       <token first="{WHERE}" name="WHERE"/>
      </action>
      <nonterminal first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, OR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ConstraintExpr"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, OR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="ConstraintExpr">
   <action first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, OR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, OR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <nonterminal first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, OR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="DisjunctiveConstraintExpr"/>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, OR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="DisjunctiveConstraintExpr">
   <action first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, OR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, OR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, OR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ConjunctiveConstraintExpr"/>
      </action>
      <kleene first="{#, OR}">
       <group first="{OR}">
        <sequence first="{OR}">
         <token first="{OR}" name="OR"/>
         <action first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ConjunctiveConstraintExpr"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="ConjunctiveConstraintExpr">
   <action first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="PrimaryConstraintExpr"/>
      </action>
      <kleene first="{#, AND}">
       <group first="{AND}">
        <sequence first="{AND}">
         <token first="{AND}" name="AND"/>
         <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="PrimaryConstraintExpr"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="PrimaryConstraintExpr">
   <group first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <choice first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{LPAREN}">
      <sequence first="{LPAREN}">
       <action first="{LPAREN}">
        <token first="{LPAREN}" name="LPAREN"/>
       </action>
       <nonterminal first="{#, AMP, AMPAMP, AND, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, OR, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ConstraintExpr"/>
      </sequence>
      <action first="{RPAREN}">
       <token first="{RPAREN}" name="RPAREN"/>
      </action>
     </sequence>
     <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="AtomicConstraintExpr"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="AtomicConstraintExpr">
   <group first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <choice first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <choice first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, LPAREN, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, DOT, ID, LPAREN}">
       <nonterminal first="{#, DOT, ID, LPAREN}" ruleName="PredicateConstraint"/>
      </action>
      <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="IsConstraint"/>
      </action>
     </choice>
     <action first="{ID}">
      <nonterminal first="{ID}" ruleName="MultiParamConstraint"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, DOT, ID, LPAREN}" name="PredicateConstraint">
   <group first="{#, DOT, ID, LPAREN}">
    <action first="{#, DOT, ID, LPAREN}">
     <nonterminal first="{#, DOT, ID, LPAREN}" ruleName="InvokeExpr"/>
    </action>
   </group>
  </rule>
  <rule first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="IsConstraint">
   <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <sequence first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, IS, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
       </action>
       <token first="{IS}" name="IS"/>
      </sequence>
      <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ConceptOrTypeName"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="ConceptOrTypeName">
   <group first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
    </action>
   </group>
  </rule>
  <rule first="{ID}" name="MultiParamConstraint">
   <action first="{ID}">
    <group first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <sequence first="{ID}">
        <action first="{ID}">
         <nonterminal first="{ID}" ruleName="QualifiedId"/>
        </action>
        <token first="{LANGLE}" name="LANGLE"/>
       </sequence>
       <group first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, COMMA, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <list first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, COMMA, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
         <sequence first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, COMMA, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
           <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
          </action>
          <kleene first="{#, COMMA}">
           <sequence first="{COMMA}">
            <token first="{COMMA}" name="COMMA"/>
            <action first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
             <nonterminal first="{#, AMP, AMPAMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
            </action>
           </sequence>
          </kleene>
         </sequence>
        </list>
       </group>
      </sequence>
      <token first="{RANGLE}" name="RANGLE"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{AXIOM}" name="Axiom">
   <action first="{AXIOM}">
    <group first="{AXIOM}">
     <sequence first="{AXIOM}">
      <sequence first="{AXIOM}">
       <sequence first="{AXIOM}">
        <sequence first="{AXIOM}">
         <sequence first="{AXIOM}">
          <sequence first="{AXIOM}">
           <action first="{AXIOM}">
            <token first="{AXIOM}" name="AXIOM"/>
           </action>
           <optional first="{#, ID}">
            <nonterminal first="{ID}" ruleName="Identifier"/>
           </optional>
          </sequence>
          <action first="{#}">
           <empty first="{#}"/>
          </action>
         </sequence>
         <optional first="{#, LPAREN}">
          <nonterminal first="{LPAREN}" ruleName="ParameterList"/>
         </optional>
        </sequence>
        <action first="{LBRACE}">
         <token first="{LBRACE}" name="LBRACE"/>
        </action>
       </sequence>
       <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="AxiomBody"/>
      </sequence>
      <action first="{RBRACE}">
       <token first="{RBRACE}" name="RBRACE"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="AxiomBody">
   <kleene first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <action first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="AxiomStatement"/>
     </action>
    </group>
   </kleene>
  </rule>
  <rule first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="AxiomStatement">
   <action first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SEMICOLON, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, AMPAMP, ARROW, AS, AUTO, BASE, BITOR, BITXOR, BOOL, BYTE, CAST, CHAR, CHARLIT, CONSTRUCT, CPL, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATINGLIT, GEQ, ID, IMPLICATION, INT, INTLIT, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUSMINUS, NEQ, NEW, NULLLIT, PLUS, PLUSPLUS, RANGLE, REM, SBYTE, SHIFTLEFT, SHIFTRIGHT, SHORT, SIZEOF, STAR, STRINGLIT, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
      </action>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
 </grammar>
</parserFile>
