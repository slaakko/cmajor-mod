using System;
using System.Collections;

public List<string> MakeTwo()
{
    List<string> two;
    two.Add(ToString(1));
    two.Add(ToString(2));
    return two;
}

public List<string> MakeEight()
{
    List<string> eight;
    for (int i = 0; i < 8; ++i)
    {
        eight.Add(ToString(i));
    }
    return eight;
}

public List<string> MakeKilo()
{
    List<string> kilo;
    for (int i = 0; i < 1024; ++i)
    {
        kilo.Add(ToString(i % 10));
    }
    return kilo;
}

public List<string> Return(const List<string>& x)
{
    return x;
}

unit_test void string_list_remove_iterator_test()
{
    List<string> x0(1, "1");
    string v0 = x0.Remove(x0.Begin());
    #assert (x0.Count() == 0);
    #assert (v0 == "1");
    List<string> x1 = MakeTwo();
    string v1 = x1.Remove(x1.Begin());
    #assert (x1.Count() == 1);
    #assert (v1 == "1");
    #assert (x1[0] == "2");
    List<string> x2 = MakeTwo();
    string v2 = x2.Remove(x2.Begin() + 1);
    #assert (x2.Count() == 1);
    #assert (v2 == "2");
    #assert (x2[0] == "1");
    List<string> x3 = MakeEight();
    string v3 = x3.Remove(x3.Begin());
    #assert (x3.Count() == 7);
    #assert (v3 == "0");
    for (int i = 0; i < 7; ++i)
    {
        #assert (x3[i] == ToString(i + 1));
    }
    List<string> x4 = MakeEight();
    string v4 = x4.Remove(x4.Begin() + 1);
    #assert (x4.Count() == 7);
    #assert (v4 == "1");
    for (int i = 0; i < 7; ++i)
    {
        if (i < 1)
        {
            #assert (x4[i] == ToString(i));
        }
        else
        {
            #assert (x4[i] == ToString(i + 1));
        }
    }
    List<string> x5 = MakeEight();
    string v5 = x5.Remove(x5.Begin() + 7);
    #assert (x5.Count() == 7);
    #assert (v5 == "7");
    for (int i = 0; i < 7; ++i)
    {
        #assert (x5[i] == ToString(i));
    }
    List<string> x6 = MakeEight();
    string v6 = x6.Remove(x6.Begin() + 6);
    #assert (x6.Count() == 7);
    #assert (v6 == "6");
    for (int i = 0; i < 7; ++i)
    {
        if (i < 6)
        {
            #assert (x6[i] == ToString(i));
        }
        else
        {
            #assert (x6[i] == ToString(i + 1));
        }
    }
    List<string> x7 = MakeKilo();
    string v7 = x7.Remove(x7.Begin());
    #assert (x7.Count() == 1023);
    #assert (v7 == "0");
    for (int i = 0; i < 1023; ++i)
    {
        #assert (x7[i] == ToString((i + 1) % 10));
    }
    List<string> x8 = MakeKilo();
    string v8 = x8.Remove(x8.Begin() + 1);
    #assert (x8.Count() == 1023);
    #assert (v8 == "1");
    for (int i = 0; i < 1023; ++i)
    {
        if (i < 1)
        {
            #assert (x8[i] == ToString(i % 10));
        }
        else
        {
            #assert (x8[i] == ToString((i + 1) % 10));
        }
    }
    List<string> x9 = MakeKilo();
    string v9 = x9.Remove(x9.Begin() + 1022);
    #assert (x9.Count() == 1023);
    #assert (v9 == "2");
    for (int i = 0; i < 1023; ++i)
    {
        if (i < 1022)
        {
            #assert (x9[i] == ToString(i % 10));
        }
        else
        {
            #assert (x9[i] == ToString((i + 1) % 10));
        }
    }
    List<string> x10 = MakeKilo();
    string v10 = x10.Remove(x10.Begin() + 1023);
    #assert (x10.Count() == 1023);
    #assert (v10 == "3");
    for (int i = 0; i < 1023; ++i)
    {
        #assert (x10[i] == ToString(i % 10));
    }
}
