using System;
using System.Collections;

public List<string> MakeTwo()
{
    List<string> two;
    two.Add(ToString(1));
    two.Add(ToString(2));
    return two;
}

public List<string> MakeEight()
{
    List<string> eight;
    for (int i = 0; i < 8; ++i)
    {
        eight.Add(ToString(i));
    }
    return eight;
}

public List<string> MakeKilo()
{
    List<string> kilo;
    for (int i = 0; i < 1024; ++i)
    {
        kilo.Add(ToString(i % 10));
    }
    return kilo;
}

public List<string> Return(const List<string>& x)
{
    return x;
}

unit_test void string_list_add_test()
{
    List<string> x0;
    x0.Add("1000");
    #assert (!x0.IsEmpty());
    #assert (x0.Count() == 1);
    #assert (x0.Back() == "1000");
    List<string> x1(1, "1");
    x1.Add("1000");
    #assert (!x1.IsEmpty());
    #assert (x1.Count() == 2);
    #assert (x1.Back() == "1000");
    List<string> x2 = MakeTwo();
    x2.Add("1000");
    #assert (!x2.IsEmpty());
    #assert (x2.Count() == 3);
    #assert (x2.Back() == "1000");
    List<string> x3 = MakeEight();
    x3.Add("1000");
    #assert (!x3.IsEmpty());
    #assert (x3.Count() == 9);
    #assert (x3.Back() == "1000");
    List<string> x4 = MakeKilo();
    x4.Add("1000");
    #assert (!x4.IsEmpty());
    #assert (x4.Count() == 1025);
    #assert (x4.Back() == "1000");
    List<string> x5;
    string y0 = "1000";
    x5.Add(Rvalue(y0));
    #assert (!x5.IsEmpty());
    #assert (x5.Count() == 1);
    #assert (x5.Back() == "1000");
    List<string> x6(1, "1");
    string y1 = "1000";
    x6.Add(Rvalue(y1));
    #assert (!x6.IsEmpty());
    #assert (x6.Count() == 2);
    #assert (x6.Back() == "1000");
    List<string> x7 = MakeTwo();
    string y2 = "1000";
    x7.Add(Rvalue(y2));
    #assert (!x7.IsEmpty());
    #assert (x7.Count() == 3);
    #assert (x7.Back() == "1000");
    List<string> x8 = MakeEight();
    string y3 = "1000";
    x8.Add(Rvalue(y3));
    #assert (!x8.IsEmpty());
    #assert (x8.Count() == 9);
    #assert (x8.Back() == "1000");
    List<string> x9 = MakeKilo();
    string y4 = "1000";
    x9.Add(Rvalue(y4));
    #assert (!x9.IsEmpty());
    #assert (x9.Count() == 1025);
    #assert (x9.Back() == "1000");
}
