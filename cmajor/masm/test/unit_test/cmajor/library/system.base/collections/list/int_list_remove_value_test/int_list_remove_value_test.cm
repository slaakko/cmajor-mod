using System;
using System.Collections;

public List<int> MakeTwo()
{
    List<int> two;
    two.Add(1);
    two.Add(2);
    return two;
}

public List<int> MakeEight()
{
    List<int> eight;
    for (int i = 0; i < 8; ++i)
    {
        eight.Add(i);
    }
    return eight;
}

public List<int> MakeKilo()
{
    List<int> kilo;
    for (int i = 0; i < 1024; ++i)
    {
        kilo.Add(i % 10);
    }
    return kilo;
}

public List<int> Return(const List<int>& x)
{
    return x;
}

unit_test void int_list_remove_value_test()
{
    List<int> x0(1, 1);
    x0.Remove(1);
    #assert (x0.Count() == 0);
    List<int> x1(1, 1);
    x1.Remove(1000);
    #assert (x1.Count() == 1);
    #assert (x1[0] == 1);
    List<int> x2 = MakeTwo();
    x2.Remove(1);
    #assert (x2.Count() == 1);
    #assert (x2[0] == 2);
    List<int> x3 = MakeTwo();
    x3.Remove(2);
    #assert (x3.Count() == 1);
    #assert (x3[0] == 1);
    List<int> x4 = MakeTwo();
    x4.Remove(1000);
    #assert (x4.Count() == 2);
    #assert (x4[0] == 1);
    #assert (x4[1] == 2);
    List<int> x5 = MakeEight();
    x5.Remove(0);
    #assert (x5.Count() == 7);
    for (int i = 0; i < 7; ++i)
    {
        #assert (x5[i] == i + 1);
    }
    List<int> x6 = MakeEight();
    x6.Remove(1);
    #assert (x6.Count() == 7);
    for (int i = 0; i < 7; ++i)
    {
        if (i < 1)
        {
            #assert (x6[i] == i);
        }
        else
        {
            #assert (x6[i] == i + 1);
        }
    }
    List<int> x7 = MakeEight();
    x7.Remove(6);
    #assert (x7.Count() == 7);
    for (int i = 0; i < 7; ++i)
    {
        if (i < 6)
        {
            #assert (x7[i] == i);
        }
        else
        {
            #assert (x7[i] == i + 1);
        }
    }
    List<int> x8 = MakeEight();
    x8.Remove(7);
    #assert (x8.Count() == 7);
    for (int i = 0; i < 7; ++i)
    {
        #assert (x8[i] == i);
    }
    List<int> x9 = MakeEight();
    x9.Remove(1000);
    #assert (x9.Count() == 8);
    for (int i = 0; i < 8; ++i)
    {
        #assert (x9[i] == i);
    }
    List<int> x10 = MakeKilo();
    x10.Remove(0);
    #assert (x10.Count() == 921);
    int value = 0;
    for (int i = 0; i < 921; ++i)
    {
        if ((i % 9) == 0)
        {
            ++value;
        }
        else
        {
            #assert (x10[i] == (value % 9) + 1);
            ++value;
        }
    }
}
