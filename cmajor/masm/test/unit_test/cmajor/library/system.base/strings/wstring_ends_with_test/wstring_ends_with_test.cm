using System;

unit_test void wstring_ends_with_test()
{
    wstring a('a');
    wstring x('x');
    wstring abc(w"abc");
    wstring empty;
    #assert (empty.EndsWith(wstring()));
    #assert (empty.EndsWith(empty));
    #assert (!empty.EndsWith(a));
    #assert (!empty.EndsWith(x));
    #assert (!empty.EndsWith(abc));
    wstring one('a');
    #assert (one.EndsWith(wstring()));
    #assert (one.EndsWith(empty));
    #assert (one.EndsWith(a));
    #assert (one.EndsWith(one));
    #assert (!one.EndsWith(x));
    #assert (!one.EndsWith(abc));
    wstring two(w"ab");
    #assert (two.EndsWith(wstring()));
    #assert (two.EndsWith(empty));
    #assert (!two.EndsWith(a));
    #assert (two.EndsWith(w"b"));
    #assert (two.EndsWith(two));
    #assert (two.EndsWith(w"ab"));
    #assert (!two.EndsWith(x));
    #assert (!two.EndsWith(abc));
    #assert (!two.EndsWith(w"12345678"));
    wstring eight(w"12345678");
    #assert (eight.EndsWith(wstring()));
    #assert (eight.EndsWith(empty));
    #assert (eight.EndsWith(w"8"));
    #assert (eight.EndsWith(w"78"));
    #assert (eight.EndsWith(w"678"));
    #assert (eight.EndsWith(eight));
    #assert (!eight.EndsWith(a));
    #assert (!eight.EndsWith(w"b"));
    #assert (!eight.EndsWith(two));
    #assert (!eight.EndsWith(w"ab"));
    #assert (!eight.EndsWith(x));
    #assert (!eight.EndsWith(abc));
    #assert (!eight.EndsWith(w"123456789"));
    #assert (!eight.EndsWith(w"12"));
    wstring kilo;
    for (int i = 0; i < 1024; ++i)
    {
        kilo.Append(cast<char>(cast<int>('0') + (i % 10)));
    }
    #assert (kilo.EndsWith(wstring()));
    #assert (kilo.EndsWith(empty));
    wstring e(w"4567890123");
    #assert (kilo.EndsWith(e));
    #assert (kilo.EndsWith(e.Substring(4)));
    #assert (kilo.EndsWith(kilo));
    #assert (kilo.EndsWith(kilo.Substring(0, 4)));
    #assert (!kilo.EndsWith(a));
    #assert (!kilo.EndsWith(x));
    #assert (!kilo.EndsWith(abc));
    wstring kiloPlusOne = kilo + w"1";
    #assert (!kilo.EndsWith(kiloPlusOne));
}
