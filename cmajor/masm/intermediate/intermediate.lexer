// =================================
// Copyright (c) 2024 Seppo Laakko
// Distributed under the MIT license
// =================================

export module cmajor.masm.intermediate.lexer;

import cmajor.masm.intermediate.token;
import cmajor.masm.intermediate.keyword;
import cmajor.masm.intermediate.expr;

lexer IntermediateLexer
{
    rules
    {
        "{separators}" {}
        "{clsid}"  { return CLSID; }
        "{id}" { auto& token = lexer.CurrentToken(); int64_t kw = lexer.GetKeywordToken(token.match); if (kw == INVALID_TOKEN) return ID; else return kw; }
        "{typeidentifier}" { return TYPEID; }
        "{string}" { return STRING; }
        "{number}" { return NUMBER; }
        "{hexnum}" { return HEXNUM; }
        "\(" { return LPAREN; }
        "\)" { return RPAREN; }
        "," { return COMMA; }
        "\{" { return LBRACE; }
        "\}" { return RBRACE; }
        "\*" { return AST; }
        ":" { return COLON; }
        ";" { return SEMICOLON; }
        "\[" { return LBRACKET; }
        "\]" { return RBRACKET; }
        "=" { return ASSIGN; }
        "@" { return AT; }
        "$" { return DOLLAR; }
        "!" { return EXCLAMATION; }
    }
}
