// =================================
// Copyright (c) 2024 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;

namespace System.Xml
{
    public class Comment : CharacterData
    {
        public Comment(const System.Lex.Span& span_, int fileIndex_) : base(NodeKind.commentNode, span_, fileIndex_, "comment")
        {
        }
        public Comment(const System.Lex.Span& span_, int fileIndex_, const string& comment_) : base(NodeKind.commentNode, span_, fileIndex_, "comment", comment_)
        {
        }
        public override void Accept(Visitor& visitor)
        {
            visitor.Visit(*this);
        }
        public override Result<bool> Write(System.Text.CodeFormatter& formatter)
        {
            if (formatter.Error())
            {
                return Result<bool>(ErrorId(formatter.GetErrorId()));
            }
            formatter.Write("<!-- ");
            formatter.Write(Data());
            formatter.Write(" -->");
            return Result<bool>(true);
        }
        public override Node* Clone(bool deep) const
        {
            return new Comment(Span(), FileIndex(), Data());
        }
    }

    public Comment* MakeComment(const string& comment)
    {
        return new Comment(System.Lex.Span(), -1, comment);
    }
}

