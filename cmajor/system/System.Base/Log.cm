// =================================
// Copyright (c) 2024 Seppo Laakko
// Distributed under the MIT license
// =================================

using System.Threading;

namespace System
{
    public class Log
    {
        static Log() : instance(new Log())
        {
        }
        public static Log& Instance()
        {
            return *instance;
        }
        private Log() : mtx()
        {
        }
        public void LogMessage(int logStreamId, const string& message)
        {
            LockGuard<Mutex> lock(mtx);
            if (logStreamId == -1)
            {
                Console.Out() << message << endl();
            }
            else
            {
                Console.Out() << Format(ToString(logStreamId), 2, FormatWidth.min, FormatJustify.right, '0') << ">" << message << endl();
            }
        }
        private static UniquePtr<Log> instance;
        private Mutex mtx;
    }

    public void LogMessage(int logStreamId, const string& message)
    {
        Log.Instance().LogMessage(logStreamId, message);
    }
}

