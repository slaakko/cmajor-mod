// =================================
// Copyright (c) 2024 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;

namespace System.IO
{
    public class StringWriter : TextWriter
    {
        public StringWriter() : str()
        {
        }
        public string GetString()
        {
            return Rvalue(str);
        }
        public const string& Str() const
        {
            return str;
        }
        [nodiscard]
        public override Result<bool> Write(const string& x)
        {
            str.Append(x);
            return Result<bool>(true);
        }
        [nodiscard]
        public override Result<bool> Write(const wstring& x)
        {
            auto c = ToUtf8(x);
            if (c.Error())
            {
                return Result<bool>(ErrorId(c.GetErrorId()));
            }
            return Write(c.Value());
        }
        [nodiscard]
        public override Result<bool> Write(const ustring& x)
        {
            auto c = ToUtf8(x);
            if (c.Error())
            {
                return Result<bool>(ErrorId(c.GetErrorId()));
            }
            return Write(c.Value());
        }
        [nodiscard]
        public override Result<bool> Write(bool x)
        {
            return Write(ToString(x));
        }
        [nodiscard]
        public override Result<bool> Write(char x)
        {
            return Write(ToString(x));
        }
        [nodiscard]
        public override Result<bool> Write(wchar x)
        {
            auto r = ToString(x);
            if (r.Error())
            {
                return Result<bool>(ErrorId(r.GetErrorId()));
            }
            return Write(r.Value());
        }
        [nodiscard]
        public override Result<bool> Write(uchar x)
        {
            auto r = ToString(x);
            if (r.Error())
            {
                return Result<bool>(ErrorId(r.GetErrorId()));
            }
            return Write(r.Value());
        }
        [nodiscard]
        public override Result<bool> Write(sbyte x)
        {
            return Write(ToString(x));
        }
        [nodiscard]
        public override Result<bool> Write(byte x)
        {
            return Write(ToString(x));
        }
        [nodiscard]
        public override Result<bool> Write(short x)
        {
            return Write(ToString(x));
        }
        [nodiscard]
        public override Result<bool> Write(ushort x)
        {
            return Write(ToString(x));
        }
        [nodiscard]
        public override Result<bool> Write(int x)
        {
            return Write(ToString(x));
        }
        [nodiscard]
        public override Result<bool> Write(uint x)
        {
            return Write(ToString(x));
        }
        [nodiscard]
        public override Result<bool> Write(long x)
        {
            return Write(ToString(x));
        }
        [nodiscard]
        public override Result<bool> Write(ulong x)
        {
            return Write(ToString(x));
        }
        [nodiscard]
        public override Result<bool> Write(float x)
        {
            return Write(ToString(x));
        }
        [nodiscard]
        public override Result<bool> Write(double x)
        {
            return Write(ToString(x));
        }
        [nodiscard]
        public override Result<bool> Write(const Date& date)
        {
            return Write(date.ToString());
        }
        [nodiscard]
        public override Result<bool> Write(const DateTime& dateTime)
        {
            return Write(dateTime.ToString());
        }
        [nodiscard]
        public override Result<bool> WriteLine()
        {
            str.Append('\n');
            return Result<bool>(true);
        }
        [nodiscard]
        public override Result<bool> WriteLine(const string& x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(const wstring& x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(const ustring& x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(bool x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(char x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(wchar x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(uchar x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(sbyte x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(byte x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(short x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool>  WriteLine(ushort x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(int x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(uint x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(long x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(ulong x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(float x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(double x)
        {
            auto r = Write(x);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(const Date& date)
        {
            auto r = Write(date);
            return r.AndThen(WriteLine());
        }
        [nodiscard]
        public override Result<bool> WriteLine(const DateTime& dateTime)
        {
            auto r = Write(dateTime);
            return r.AndThen(WriteLine());
        }
        private string str;
    }
}
