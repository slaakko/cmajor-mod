// =================================
// Copyright (c) 2024 Seppo Laakko
// Distributed under the MIT license
// =================================

using System.IO;

namespace System
{
    public static class Console
    {
        static Console()
        {
            FileStream* inStream = new FileStream(stdin);
            in.SetStream(inStream);
            in.Own(inStream);
            if (in.Error())
            {
                SetErrorId(in.GetErrorId());
                return;
            }
            FileStream* outStream = new FileStream(stdout);
            out.SetStream(outStream);
            out.Own(outStream);
            if (out.Error())
            {
                SetErrorId(out.GetErrorId());
                return;
            }
            FileStream* errStream = new FileStream(stderr);
            err.SetStream(errStream);
            err.Own(errStream);
            if (err.Error())
            {
                SetErrorId(err.GetErrorId());
                return;
            }
        }
        public static void Write(const char* s)
        {
            auto result = out.Write(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(const wchar* s)
        {
            auto result = out.Write(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(const uchar* s)
        {
            auto result = out.Write(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(const string& s)
        {
            auto result = out.Write(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(const wstring& s)
        {
            auto result = out.Write(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(const ustring& s)
        {
            auto result = out.Write(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(bool b)
        {
            auto result = out.Write(b);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(sbyte s)
        {
            auto result = out.Write(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(byte b)
        {
            auto result = out.Write(b);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(short s)
        {
            auto result = out.Write(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(ushort u)
        {
            auto result = out.Write(u);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(int i)
        {
            auto result = out.Write(i);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(uint u)
        {
            auto result = out.Write(u);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(long l)
        {
            auto result = out.Write(l);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(ulong u)
        {
            auto result = out.Write(u);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(float f)
        {
            auto result = out.Write(f);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(double d)
        {
            auto result = out.Write(d);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(char c)
        {
            auto result = out.Write(c);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(wchar w)
        {
            auto result = out.Write(w);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(uchar u)
        {
            auto result = out.Write(u);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(const Date& date)
        {
            auto result = out.Write(date);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void Write(const DateTime& dateTime)
        {
            auto result = out.Write(dateTime);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine()
        {
            auto result = out.WriteLine();
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(const char* s)
        {
            auto result = out.WriteLine(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(const wchar* s)
        {
            auto result = out.WriteLine(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(const uchar* s)
        {
            auto result = out.WriteLine(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(const string& s)
        {
            auto result = out.WriteLine(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(const wstring& s)
        {
            auto result = out.WriteLine(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(const ustring& s)
        {
            auto result = out.WriteLine(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(bool b)
        {
            auto result = out.WriteLine(b);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(sbyte s)
        {
            auto result = out.WriteLine(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(byte b)
        {
            auto result = out.WriteLine(b);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(short s)
        {
            auto result = out.WriteLine(s);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(ushort u)
        {
            auto result = out.WriteLine(u);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(int i)
        {
            auto result = out.WriteLine(i);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(uint u)
        {
            auto result = out.WriteLine(u);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(long l)
        {
            auto result = out.WriteLine(l);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(ulong u)
        {
            auto result = out.WriteLine(u);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(float f)
        {
            auto result = out.WriteLine(f);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(double d)
        {
            auto result = out.WriteLine(d);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(char c)
        {
            auto result = out.WriteLine(c);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(wchar w)
        {
            auto result = out.WriteLine(w);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(uchar u)
        {
            auto result = out.WriteLine(u);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(const Date& date)
        {
            auto result = out.WriteLine(date);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        public static void WriteLine(const DateTime& dateTime)
        {
            auto result = out.WriteLine(dateTime);
            if (result.Error())
            {
                SetErrorId(result.GetErrorId());
                return;
            }
        }
        [nodiscard]
        public static Result<int> Read()
        {
            return in.Read();
        }
        [nodiscard]
        public static Result<string> ReadLine()
        {
            return in.ReadLine();
        }
        [nodiscard]
        public static Result<string> ReadToEnd()
        {
            return in.ReadToEnd();
        }
        public static StreamReader& In()
        {
            return in;
        }
        public static StreamWriter& Out()
        {
            return out;
        }
        public static StreamWriter& Error()
        {
            return err;
        }
        public static void SetIn(StreamReader&& in_)
        {
            in = in_;
        }
        public static void SetOut(StreamWriter&& out_)
        {
            out = out_;
        }
        public static void SetError(StreamWriter&& err_)
        {
            err = err_;
        }
        public static bool HasError()
        {
            return errorId != 0;
        }
        public static int ErrorId() const
        {
            return errorId;
        }
        public static void SetErrorId(int errorId_)
        {
            errorId = errorId_;
        }
        private static StreamReader in;
        private static StreamWriter out;
        private static StreamWriter err;
        private static int errorId;
    }
}
