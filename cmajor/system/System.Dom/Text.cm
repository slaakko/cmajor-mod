// =================================
// Copyright (c) 2024 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;

namespace System.Xml
{
    public class Text : CharacterData
    {
        public Text(const System.Lex.Span& span_, int fileIndex_) : this(NodeKind.textNode, span_, fileIndex_, "text")
        {
        }
        public Text(const System.Lex.Span& span_, int fileIndex_, const string& text_) : base(NodeKind.textNode, span_, -1, "text", text_)
        {
        }
        public Text(NodeKind kind_, const System.Lex.Span& span_, int fileIndex_, const string& name_) : base(kind_, span_, fileIndex_, name_)
        {
        }
        public Text(NodeKind kind_, const System.Lex.Span& span_, int fileIndex_, const string& name_, const string& text_) : base(kind_, span_, fileIndex_, name_, text_)
        {
        }
        public override void Accept(Visitor& visitor)
        {
            visitor.Visit(*this);
        }
        public override Node* Clone(bool deep) const
        {
            return new Text(Span(), FileIndex(), Data());
        }
    }

    public Text* MakeText(const string& text)
    {
        return new Text(System.Lex.Span(), -1, text);
    }
}

