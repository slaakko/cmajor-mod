// =================================
// Copyright (c) 2025 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;

namespace System.Xml
{
    public class DocumentFragment : ParentNode
    {
        public DocumentFragment(const System.Lex.Span& span_, int fileIndex_) : base(NodeKind.documentFragmentNode, span_, fileIndex_, "document_fragment")
        {
        }
        public override Node* Clone(bool deep) const
        {
            DocumentFragment* clone = new DocumentFragment(Span(), FileIndex());
            if (deep)
            {
                Node* child = FirstChild();
                while (child != null)
                {
                    clone->AppendChild(child->Clone(deep));
                    child = child->Next();
                }
            }
            return clone;
        }
    }

    public DocumentFragment* MakeDocumentFragment()
    {
        return new DocumentFragment(System.Lex.Span(), -1);
    }
}

