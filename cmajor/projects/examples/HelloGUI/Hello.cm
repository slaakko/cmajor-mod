using System;
using System.Windows;

class HelloWindow : Window
{
    public HelloWindow() : base("Hello"), numHellos(0), color(0u, 0x5au, 0xb4u), brush(color), fontFamily(FontFamily.GenericSansSerif()), font(fontFamily, 14.0f)
    {
        if (brush.Error())
        {
            SetErrorId(brush.GetErrorId());
            return;
        }
        if (fontFamily.Error())
        {
            SetErrorId(fontFamily.GetErrorId());
            return;
        }
        if (font.Error())
        {
            SetErrorId(font.GetErrorId());
            return;
        }
        Size s = GetSize();
        Size defaultButtonSize = ScreenMetrics.Get().DefaultButtonSize();
        Size defaultControlSpacing = ScreenMetrics.Get().DefaultControlSpacing();
        int x = s.w - defaultButtonSize.w - defaultControlSpacing.w;
        int y = s.h - defaultButtonSize.h - defaultControlSpacing.h;

        UniquePtr<Button> helloButton(new Button(ButtonCreateParams(ButtonControlCreateParams(
            ControlCreateParams().SetText("Hello").SetLocation(Point(x, y)).SetSize(defaultButtonSize).
            SetAnchors(cast<Anchors>(Anchors.bottom | Anchors.right))))));
        if (helloButton->Error())
        {
            SetErrorId(helloButton->GetErrorId());
            return;
        }
        helloButton->ClickEvent().AddHandler(HelloButtonClick);
        auto result = AddChild(helloButton.Release());
        if (result.Error())
        {
            SetErrorId(result.GetErrorId());
            return;
        }
        PaintEvent().AddHandler(Paint);
    }
    private void HelloButtonClick(ClickEventArgs& args)
    {
        ++numHellos;
        auto result = Invalidate();
        if (result.Error())
        {
            args.errorId = result.GetErrorId();
            return;
        }
    }
    private void Paint(PaintEventArgs& args)
    {
        PointF origin(10.0f, 10.0f);
	       float height = font.GetHeight(args.graphics);
        for (int i = 0; i < numHellos; ++i)
        {
            auto drawStringResult = args.graphics.DrawString("Hello, World!", font, origin, brush);
            if (drawStringResult.Error())
            {
                string errorMessage = drawStringResult.GetErrorMessage();
                MessageBox.Show(errorMessage, "error");
                return;
            }
            else
            {
                origin.y = origin.y + height;
            }
        }
    }
    private int numHellos;
    private Color color;
    private SolidBrush brush;
    private FontFamily fontFamily;
    private Font font;
    private Button* helloButton;
}

int main()
{
    HelloWindow helloWindow;
    if (helloWindow.Error())
    {
        string errorMessage = GetErrorMessage(helloWindow.GetErrorId());
        MessageBox.Show(errorMessage, "error");
        return 1;
    }
    return Application.Run(helloWindow);
}
