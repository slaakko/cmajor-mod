// =================================
// Copyright (c) 2024 Seppo Laakko
// Distributed under the MIT license
// =================================

export module common.parser;

import cm.token;
import cm.parser;

parser CommonParser
{
    lexer CmajorLexer;

    using ContainerFileParser.QualifiedId;
    
    TokensKeyword
        ::= ID{ pass = lexer.GetToken(pos).ToString() == u"tokens"; }
        ;

    KeywordsKeyword
        ::= ID{ pass = lexer.GetToken(pos).ToString() == u"keywords"; }
        ;

    ExpressionsKeyword
        ::= ID{ pass = lexer.GetToken(pos).ToString() == u"expressions"; }
        ;

    ParserKeyword
        ::= ID{ pass = lexer.GetToken(pos).ToString() == u"parser"; }
        ;

    LexerKeyword
        ::= ID{ pass = lexer.GetToken(pos).ToString() == u"lexer"; }
        ;

    ProjectKeyword
        ::= ID{ pass = lexer.GetToken(pos).ToString() == u"project"; }
        ;

    QualifiedUtf8Id : string
        ::=
        (
            QualifiedId:qid
        )
        {
            auto result = ToUtf8(qid);
            if (result.Error())
            {
                return ErrorId(result.GetErrorId());
            }
            else
            {
                return result.Value();
            }
        }
        ;
}
