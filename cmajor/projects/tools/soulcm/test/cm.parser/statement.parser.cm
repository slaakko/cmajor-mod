// this file has been generated from 'C:/work/cmajor-mod/cmajor/projects/tools/soulcm/test/scmpg.parser/../cm.parser/statement.parser' using SoulCm parser generator scmpg version 5.0.0

using System;
using System.Lex;
using System.Parsing;
using cm.ast;
using cm.token;

namespace cm.parser
{
    public static class StatementParser<LexerT>
    {
        public static System.Result<System.Parsing.Match> Statement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Statement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316033);
            System.UniquePtr<cm.ast.StatementNode> labeledStatement;
            System.UniquePtr<cm.ast.StatementNode> controlStatement;
            System.UniquePtr<cm.ast.StatementNode> expressionStatement;
            System.UniquePtr<cm.ast.StatementNode> assignmentStatement;
            System.UniquePtr<cm.ast.StatementNode> constructionStatement;
            System.UniquePtr<cm.ast.StatementNode> deleteStatement;
            System.UniquePtr<cm.ast.StatementNode> destroyStatement;
            System.UniquePtr<cm.ast.StatementNode> emptyStatement;
            System.UniquePtr<cm.ast.StatementNode> throwStatement;
            System.UniquePtr<cm.ast.StatementNode> tryStatement;
            System.UniquePtr<cm.ast.StatementNode> assertStatement;
            System.UniquePtr<cm.ast.StatementNode> condCompStatement;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long save = lexer.GetPos();
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long save = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long save = lexer.GetPos();
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long save = lexer.GetPos();
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long save = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long save = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            long save = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                long save = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    long save = lexer.GetPos();
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long save = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch11 = &match;
                                                        switch (*lexer)
                                                        {
                                                            case ID:
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch12 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.LabeledStatement(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    labeledStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        #if (DEBUG)
                                                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                                                                        #endif
                                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, labeledStatement.Release()));
                                                                    }
                                                                    *parentMatch12 = match;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    *parentMatch11 = match;
                                                                }
                                                                break;
                                                            }
                                                            case BREAK:
                                                            case CONTINUE:
                                                            case DO:
                                                            case FOR:
                                                            case GOTO:
                                                            case IF:
                                                            case LBRACE:
                                                            case RETURN:
                                                            case SWITCH:
                                                            case WHILE:
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch13 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ControlStatement(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    controlStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        #if (DEBUG)
                                                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                                                                        #endif
                                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, controlStatement.Release()));
                                                                    }
                                                                    *parentMatch13 = match;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    *parentMatch11 = match;
                                                                }
                                                                break;
                                                            }
                                                        }
                                                        *parentMatch10 = match;
                                                        if (!match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch14 = &match;
                                                            lexer.SetPos(save);
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch15 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ExpressionStatement(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    expressionStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        #if (DEBUG)
                                                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                                                                        #endif
                                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expressionStatement.Release()));
                                                                    }
                                                                    *parentMatch15 = match;
                                                                }
                                                                *parentMatch14 = match;
                                                            }
                                                            *parentMatch10 = match;
                                                        }
                                                    }
                                                    *parentMatch9 = match;
                                                    if (!match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch16 = &match;
                                                        lexer.SetPos(save);
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch17 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.AssignmentStatement(lexer, context);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                assignmentStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    #if (DEBUG)
                                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                                                                    #endif
                                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, assignmentStatement.Release()));
                                                                }
                                                                *parentMatch17 = match;
                                                            }
                                                            *parentMatch16 = match;
                                                        }
                                                        *parentMatch9 = match;
                                                    }
                                                }
                                                *parentMatch8 = match;
                                                if (!match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch18 = &match;
                                                    lexer.SetPos(save);
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch19 = &match;
                                                        {
                                                            long pos = lexer.GetPos();
                                                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConstructionStatement(lexer, context);
                                                            if (matchResult.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                            }
                                                            System.Parsing.Match match = matchResult.Value();
                                                            constructionStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                            if (match.hit)
                                                            {
                                                                #if (DEBUG)
                                                                    if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                                                                #endif
                                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, constructionStatement.Release()));
                                                            }
                                                            *parentMatch19 = match;
                                                        }
                                                        *parentMatch18 = match;
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                            }
                                            *parentMatch7 = match;
                                            if (!match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch20 = &match;
                                                lexer.SetPos(save);
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch21 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.DeleteStatement(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        deleteStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            #if (DEBUG)
                                                                if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                                                            #endif
                                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, deleteStatement.Release()));
                                                        }
                                                        *parentMatch21 = match;
                                                    }
                                                    *parentMatch20 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                        }
                                        *parentMatch6 = match;
                                        if (!match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch22 = &match;
                                            lexer.SetPos(save);
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch23 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.DestroyStatement(lexer, context);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    destroyStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        #if (DEBUG)
                                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                                                        #endif
                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, destroyStatement.Release()));
                                                    }
                                                    *parentMatch23 = match;
                                                }
                                                *parentMatch22 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                    }
                                    *parentMatch5 = match;
                                    if (!match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch24 = &match;
                                        lexer.SetPos(save);
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch25 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.EmptyStatement(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                emptyStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    #if (DEBUG)
                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                                                    #endif
                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, emptyStatement.Release()));
                                                }
                                                *parentMatch25 = match;
                                            }
                                            *parentMatch24 = match;
                                        }
                                        *parentMatch5 = match;
                                    }
                                }
                                *parentMatch4 = match;
                                if (!match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch26 = &match;
                                    lexer.SetPos(save);
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch27 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ThrowStatement(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            throwStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, throwStatement.Release()));
                                            }
                                            *parentMatch27 = match;
                                        }
                                        *parentMatch26 = match;
                                    }
                                    *parentMatch4 = match;
                                }
                            }
                            *parentMatch3 = match;
                            if (!match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch28 = &match;
                                lexer.SetPos(save);
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch29 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.TryStatement(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        tryStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                        if (match.hit)
                                        {
                                            #if (DEBUG)
                                                if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                                            #endif
                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, tryStatement.Release()));
                                        }
                                        *parentMatch29 = match;
                                    }
                                    *parentMatch28 = match;
                                }
                                *parentMatch3 = match;
                            }
                        }
                        *parentMatch2 = match;
                        if (!match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch30 = &match;
                            lexer.SetPos(save);
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch31 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.AssertStatement(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    assertStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, assertStatement.Release()));
                                    }
                                    *parentMatch31 = match;
                                }
                                *parentMatch30 = match;
                            }
                            *parentMatch2 = match;
                        }
                    }
                    *parentMatch1 = match;
                    if (!match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch32 = &match;
                        lexer.SetPos(save);
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch33 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConditionalCompilationStatement(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                condCompStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, condCompStatement.Release()));
                                }
                                *parentMatch33 = match;
                            }
                            *parentMatch32 = match;
                        }
                        *parentMatch1 = match;
                    }
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Statement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Statement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Label(LexerT& lexer)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Label");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316034);
            System.Lex.Span span = System.Lex.Span();
            ustring label = ustring();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == ID)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                label = lexer.GetToken(pos).ToString();
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == COLON)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Label");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.LabelNode(span, lexer.FileIndex(), label)));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Label");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Label");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> LabeledStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"LabeledStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316035);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.LabelNode> lbl;
            System.UniquePtr<cm.ast.StatementNode> stmt;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Label(lexer);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            lbl.Reset(cast<cm.ast.LabelNode*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            stmt.Reset(cast<cm.ast.StatementNode*>(match.value));
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LabeledStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.LabeledStatementNode(span, lexer.FileIndex(), lbl.Release(), stmt.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LabeledStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"LabeledStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ControlStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ControlStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316036);
            System.UniquePtr<cm.ast.CompoundStatementNode> compoundStatement;
            System.UniquePtr<cm.ast.StatementNode> returnStatement;
            System.UniquePtr<cm.ast.StatementNode> ifStatement;
            System.UniquePtr<cm.ast.StatementNode> whileStatement;
            System.UniquePtr<cm.ast.StatementNode> doStatement;
            System.UniquePtr<cm.ast.StatementNode> rangeForStatement;
            System.UniquePtr<cm.ast.StatementNode> forStatement;
            System.UniquePtr<cm.ast.StatementNode> breakStatement;
            System.UniquePtr<cm.ast.StatementNode> continueStatement;
            System.UniquePtr<cm.ast.StatementNode> gotoStatement;
            System.UniquePtr<cm.ast.StatementNode> switchStatement;
            System.UniquePtr<cm.ast.StatementNode> gotoCaseStatement;
            System.UniquePtr<cm.ast.StatementNode> gotoDefaultStatement;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long save = lexer.GetPos();
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long save = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        switch (*lexer)
                        {
                            case DO:
                            case FOR:
                            case IF:
                            case LBRACE:
                            case RETURN:
                            case WHILE:
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch4 = &match;
                                {
                                    long save = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch5 = &match;
                                    switch (*lexer)
                                    {
                                        case LBRACE:
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch6 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.CompoundStatement(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                compoundStatement.Reset(cast<cm.ast.CompoundStatementNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    #if (DEBUG)
                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                                    #endif
                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, compoundStatement.Release()));
                                                }
                                                *parentMatch6 = match;
                                            }
                                            if (match.hit)
                                            {
                                                *parentMatch5 = match;
                                            }
                                            break;
                                        }
                                        case RETURN:
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ReturnStatement(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                returnStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    #if (DEBUG)
                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                                    #endif
                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, returnStatement.Release()));
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                *parentMatch5 = match;
                                            }
                                            break;
                                        }
                                        case IF:
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.IfStatement(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                ifStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    #if (DEBUG)
                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                                    #endif
                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, ifStatement.Release()));
                                                }
                                                *parentMatch8 = match;
                                            }
                                            if (match.hit)
                                            {
                                                *parentMatch5 = match;
                                            }
                                            break;
                                        }
                                        case WHILE:
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch9 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.WhileStatement(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                whileStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    #if (DEBUG)
                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                                    #endif
                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, whileStatement.Release()));
                                                }
                                                *parentMatch9 = match;
                                            }
                                            if (match.hit)
                                            {
                                                *parentMatch5 = match;
                                            }
                                            break;
                                        }
                                        case DO:
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch10 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.DoStatement(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                doStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    #if (DEBUG)
                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                                    #endif
                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, doStatement.Release()));
                                                }
                                                *parentMatch10 = match;
                                            }
                                            if (match.hit)
                                            {
                                                *parentMatch5 = match;
                                            }
                                            break;
                                        }
                                        case FOR:
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch11 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.RangeForStatement(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                rangeForStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    #if (DEBUG)
                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                                    #endif
                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, rangeForStatement.Release()));
                                                }
                                                *parentMatch11 = match;
                                            }
                                            if (match.hit)
                                            {
                                                *parentMatch5 = match;
                                            }
                                            break;
                                        }
                                    }
                                    *parentMatch4 = match;
                                    if (!match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch12 = &match;
                                        lexer.SetPos(save);
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch13 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ForStatement(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                forStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    #if (DEBUG)
                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                                    #endif
                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, forStatement.Release()));
                                                }
                                                *parentMatch13 = match;
                                            }
                                            *parentMatch12 = match;
                                        }
                                        *parentMatch4 = match;
                                    }
                                }
                                if (match.hit)
                                {
                                    *parentMatch3 = match;
                                }
                                break;
                            }
                            case BREAK:
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch14 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.BreakStatement(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    breakStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, breakStatement.Release()));
                                    }
                                    *parentMatch14 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch3 = match;
                                }
                                break;
                            }
                            case CONTINUE:
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch15 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ContinueStatement(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    continueStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, continueStatement.Release()));
                                    }
                                    *parentMatch15 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch3 = match;
                                }
                                break;
                            }
                            case GOTO:
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch16 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.GotoStatement(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    gotoStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, gotoStatement.Release()));
                                    }
                                    *parentMatch16 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch3 = match;
                                }
                                break;
                            }
                            case SWITCH:
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch17 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.SwitchStatement(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    switchStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, switchStatement.Release()));
                                    }
                                    *parentMatch17 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch3 = match;
                                }
                                break;
                            }
                        }
                        *parentMatch2 = match;
                        if (!match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch18 = &match;
                            lexer.SetPos(save);
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch19 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.GotoCaseStatement(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    gotoCaseStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, gotoCaseStatement.Release()));
                                    }
                                    *parentMatch19 = match;
                                }
                                *parentMatch18 = match;
                            }
                            *parentMatch2 = match;
                        }
                    }
                    *parentMatch1 = match;
                    if (!match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch20 = &match;
                        lexer.SetPos(save);
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch21 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.GotoDefaultStatement(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                gotoDefaultStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, gotoDefaultStatement.Release()));
                                }
                                *parentMatch21 = match;
                            }
                            *parentMatch20 = match;
                        }
                        *parentMatch1 = match;
                    }
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ControlStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ControlStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> CompoundStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"CompoundStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316037);
            UniquePtr<cm.ast.CompoundStatementNode> compoundStatementNode = UniquePtr<cm.ast.CompoundStatementNode>();
            System.UniquePtr<cm.ast.StatementNode> stmt;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == LBRACE)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    compoundStatementNode.Reset(new cm.ast.CompoundStatementNode(lexer.GetSpan(pos), lexer.FileIndex()));
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(true);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    while (true)
                                    {
                                        long save = lexer.GetPos();
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    stmt.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        compoundStatementNode->AddStatement(stmt.Release());
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                *parentMatch6 = match;
                                            }
                                            else
                                            {
                                                lexer.SetPos(save);
                                                break;
                                            }
                                        }
                                    }
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch9 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch10 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == RBRACE)
                                {
                                    auto incResult1 = ++lexer;
                                    if (incResult1.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    compoundStatementNode->SetEndSpan(lexer.GetSpan(pos));
                                }
                                *parentMatch10 = match;
                            }
                            *parentMatch9 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"CompoundStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, compoundStatementNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"CompoundStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"CompoundStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ReturnStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ReturnStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316038);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> expr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == RETURN)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    span = lexer.GetSpan(pos);
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(true);
                                long save = lexer.GetPos();
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    expr.Reset(cast<cm.ast.Node*>(match.value));
                                    if (match.hit)
                                    {
                                        *parentMatch6 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                    }
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ReturnStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.ReturnStatementNode(span, lexer.FileIndex(), expr.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ReturnStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ReturnStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> IfStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"IfStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316039);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> cond;
            System.UniquePtr<cm.ast.StatementNode> thenS;
            System.UniquePtr<cm.ast.StatementNode> elseS;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == IF)
                                            {
                                                auto incResult0 = ++lexer;
                                                if (incResult0.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            if (*lexer == LPAREN)
                                            {
                                                auto incResult1 = ++lexer;
                                                if (incResult1.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch9 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        cond.Reset(cast<cm.ast.Node*>(match.value));
                                        *parentMatch9 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch10 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == RPAREN)
                                    {
                                        auto incResult2 = ++lexer;
                                        if (incResult2.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch10 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch11 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                thenS.Reset(cast<cm.ast.StatementNode*>(match.value));
                                *parentMatch11 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch12 = &match;
                        {
                            System.Parsing.Match match(true);
                            long save = lexer.GetPos();
                            System.Parsing.Match* parentMatch13 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch14 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch15 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == ELSE)
                                        {
                                            auto incResult3 = ++lexer;
                                            if (incResult3.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch15 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch16 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            elseS.Reset(cast<cm.ast.StatementNode*>(match.value));
                                            *parentMatch16 = match;
                                        }
                                        *parentMatch15 = match;
                                    }
                                    *parentMatch14 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch13 = match;
                                }
                                else
                                {
                                    lexer.SetPos(save);
                                }
                            }
                            *parentMatch12 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"IfStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.IfStatementNode(span, lexer.FileIndex(), cond.Release(), thenS.Release(), elseS.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"IfStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"IfStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> WhileStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"WhileStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316040);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> cond;
            System.UniquePtr<cm.ast.StatementNode> stmt;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        if (*lexer == WHILE)
                                        {
                                            auto incResult0 = ++lexer;
                                            if (incResult0.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            span = lexer.GetSpan(pos);
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == LPAREN)
                                        {
                                            auto incResult1 = ++lexer;
                                            if (incResult1.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch8 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    cond.Reset(cast<cm.ast.Node*>(match.value));
                                    *parentMatch8 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch9 = &match;
                            {
                                System.Parsing.Match match(false);
                                if (*lexer == RPAREN)
                                {
                                    auto incResult2 = ++lexer;
                                    if (incResult2.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                *parentMatch9 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch10 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            stmt.Reset(cast<cm.ast.StatementNode*>(match.value));
                            *parentMatch10 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"WhileStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.WhileStatementNode(span, lexer.FileIndex(), cond.Release(), stmt.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"WhileStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"WhileStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> DoStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"DoStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316041);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.StatementNode> stmt;
            System.UniquePtr<cm.ast.Node> cond;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                if (*lexer == DO)
                                                {
                                                    auto incResult0 = ++lexer;
                                                    if (incResult0.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                if (match.hit)
                                                {
                                                    span = lexer.GetSpan(pos);
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch9 = &match;
                                            {
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                stmt.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                *parentMatch9 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch10 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            if (*lexer == WHILE)
                                            {
                                                auto incResult1 = ++lexer;
                                                if (incResult1.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            *parentMatch10 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch11 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == LPAREN)
                                        {
                                            auto incResult2 = ++lexer;
                                            if (incResult2.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch11 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch12 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    cond.Reset(cast<cm.ast.Node*>(match.value));
                                    *parentMatch12 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch13 = &match;
                            {
                                System.Parsing.Match match(false);
                                if (*lexer == RPAREN)
                                {
                                    auto incResult3 = ++lexer;
                                    if (incResult3.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                *parentMatch13 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch14 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult4 = ++lexer;
                                if (incResult4.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch14 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DoStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.DoStatementNode(span, lexer.FileIndex(), stmt.Release(), cond.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DoStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"DoStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> RangeForStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"RangeForStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316042);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> type;
            System.UniquePtr<cm.ast.IdentifierNode> id;
            System.UniquePtr<cm.ast.Node> container;
            System.UniquePtr<cm.ast.StatementNode> stmt;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == FOR)
                                                    {
                                                        auto incResult0 = ++lexer;
                                                        if (incResult0.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        span = lexer.GetSpan(pos);
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch10 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == LPAREN)
                                                    {
                                                        auto incResult1 = ++lexer;
                                                        if (incResult1.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    *parentMatch10 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch11 = &match;
                                            {
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                type.Reset(cast<cm.ast.Node*>(match.value));
                                                *parentMatch11 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch12 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                            *parentMatch12 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch13 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COLON)
                                        {
                                            auto incResult2 = ++lexer;
                                            if (incResult2.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch13 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch14 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    container.Reset(cast<cm.ast.Node*>(match.value));
                                    *parentMatch14 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch15 = &match;
                            {
                                System.Parsing.Match match(false);
                                if (*lexer == RPAREN)
                                {
                                    auto incResult3 = ++lexer;
                                    if (incResult3.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                *parentMatch15 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch16 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            stmt.Reset(cast<cm.ast.StatementNode*>(match.value));
                            *parentMatch16 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"RangeForStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.RangeForStatementNode(span, lexer.FileIndex(), type.Release(), id.Release(), container.Release(), stmt.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"RangeForStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"RangeForStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ForStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ForStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316043);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.StatementNode> init;
            System.UniquePtr<cm.ast.Node> cond;
            System.UniquePtr<cm.ast.StatementNode> loop;
            System.UniquePtr<cm.ast.StatementNode> stmt;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == FOR)
                                                    {
                                                        auto incResult0 = ++lexer;
                                                        if (incResult0.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        span = lexer.GetSpan(pos);
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch10 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == LPAREN)
                                                    {
                                                        auto incResult1 = ++lexer;
                                                        if (incResult1.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    *parentMatch10 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch11 = &match;
                                            {
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ForInitStatement(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                init.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                *parentMatch11 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch12 = &match;
                                        {
                                            System.Parsing.Match match(true);
                                            long save = lexer.GetPos();
                                            System.Parsing.Match* parentMatch13 = &match;
                                            {
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                cond.Reset(cast<cm.ast.Node*>(match.value));
                                                if (match.hit)
                                                {
                                                    *parentMatch13 = match;
                                                }
                                                else
                                                {
                                                    lexer.SetPos(save);
                                                }
                                            }
                                            *parentMatch12 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch14 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == SEMICOLON)
                                        {
                                            auto incResult2 = ++lexer;
                                            if (incResult2.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch14 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch15 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ForLoopStatementExpr(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    loop.Reset(cast<cm.ast.StatementNode*>(match.value));
                                    *parentMatch15 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch16 = &match;
                            {
                                System.Parsing.Match match(false);
                                if (*lexer == RPAREN)
                                {
                                    auto incResult3 = ++lexer;
                                    if (incResult3.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                *parentMatch16 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch17 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            stmt.Reset(cast<cm.ast.StatementNode*>(match.value));
                            *parentMatch17 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ForStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.ForStatementNode(span, lexer.FileIndex(), init.Release(), cond.Release(), loop.Release(), stmt.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ForStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ForStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ForInitStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ForInitStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316044);
            System.UniquePtr<cm.ast.StatementNode> assignmentStatement;
            System.UniquePtr<cm.ast.StatementNode> constructionStatement;
            System.UniquePtr<cm.ast.StatementNode> emptyStatement;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long save = lexer.GetPos();
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long save = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.AssignmentStatement(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            assignmentStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                            if (match.hit)
                            {
                                #if (DEBUG)
                                    if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ForInitStatement");
                                #endif
                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, assignmentStatement.Release()));
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                        if (!match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            lexer.SetPos(save);
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConstructionStatement(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    constructionStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ForInitStatement");
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, constructionStatement.Release()));
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch2 = match;
                        }
                    }
                    *parentMatch1 = match;
                    if (!match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        lexer.SetPos(save);
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.EmptyStatement(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                emptyStatement.Reset(cast<cm.ast.StatementNode*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ForInitStatement");
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, emptyStatement.Release()));
                                }
                                *parentMatch7 = match;
                            }
                            *parentMatch6 = match;
                        }
                        *parentMatch1 = match;
                    }
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ForInitStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ForInitStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ForLoopStatementExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ForLoopStatementExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316045);
            System.UniquePtr<cm.ast.StatementNode> assignmentStatementExpr;
            System.UniquePtr<cm.ast.Node> expr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long save = lexer.GetPos();
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long save = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.AssignmentStatementExpr(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            assignmentStatementExpr.Reset(cast<cm.ast.StatementNode*>(match.value));
                            if (match.hit)
                            {
                                #if (DEBUG)
                                    if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ForLoopStatementExpr");
                                #endif
                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, assignmentStatementExpr.Release()));
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                        if (!match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            lexer.SetPos(save);
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    expr.Reset(cast<cm.ast.Node*>(match.value));
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ForLoopStatementExpr");
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.ExpressionStatementNode(lexer.GetSpan(pos), lexer.FileIndex(), expr.Release())));
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch2 = match;
                        }
                    }
                    *parentMatch1 = match;
                    if (!match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        lexer.SetPos(save);
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(true);
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ForLoopStatementExpr");
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.EmptyStatementNode(lexer.GetSpan(pos), lexer.FileIndex())));
                                }
                                *parentMatch7 = match;
                            }
                            *parentMatch6 = match;
                        }
                        *parentMatch1 = match;
                    }
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ForLoopStatementExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ForLoopStatementExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> BreakStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"BreakStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316046);
            System.Lex.Span span = System.Lex.Span();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == BREAK)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BreakStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.BreakStatementNode(span, lexer.FileIndex())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BreakStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"BreakStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ContinueStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ContinueStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316047);
            System.Lex.Span span = System.Lex.Span();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == CONTINUE)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ContinueStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.ContinueStatementNode(span, lexer.FileIndex())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ContinueStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ContinueStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> GotoStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"GotoStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316048);
            System.Lex.Span span = System.Lex.Span();
            ustring target = ustring();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == GOTO)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    span = lexer.GetSpan(pos);
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == ID)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        target = lexer.GetToken(pos).ToString();
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"GotoStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.GotoStatementNode(span, lexer.FileIndex(), target)));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"GotoStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"GotoStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> SwitchStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"SwitchStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316049);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.SwitchStatementNode> switchStatementNode = UniquePtr<cm.ast.SwitchStatementNode>();
            System.UniquePtr<cm.ast.Node> cond;
            System.UniquePtr<cm.ast.CaseStatementNode> caseStatement;
            System.UniquePtr<cm.ast.DefaultStatementNode> defaultStatement;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                if (*lexer == SWITCH)
                                                {
                                                    auto incResult0 = ++lexer;
                                                    if (incResult0.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                if (match.hit)
                                                {
                                                    span = lexer.GetSpan(pos);
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch9 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                if (*lexer == LPAREN)
                                                {
                                                    auto incResult1 = ++lexer;
                                                    if (incResult1.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                *parentMatch9 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch10 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            cond.Reset(cast<cm.ast.Node*>(match.value));
                                            *parentMatch10 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch11 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch12 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == RPAREN)
                                            {
                                                auto incResult2 = ++lexer;
                                                if (incResult2.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                switchStatementNode.Reset(new cm.ast.SwitchStatementNode(span, lexer.FileIndex(), cond.Release()));
                                            }
                                            *parentMatch12 = match;
                                        }
                                        *parentMatch11 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch13 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == LBRACE)
                                    {
                                        auto incResult3 = ++lexer;
                                        if (incResult3.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch13 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch14 = &match;
                            {
                                System.Parsing.Match match(true);
                                System.Parsing.Match* parentMatch15 = &match;
                                {
                                    while (true)
                                    {
                                        long save = lexer.GetPos();
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch16 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch17 = &match;
                                                {
                                                    long save = lexer.GetPos();
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch18 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.CaseStatement(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        caseStatement.Reset(cast<cm.ast.CaseStatementNode*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            switchStatementNode->AddCase(caseStatement.Release());
                                                        }
                                                        *parentMatch18 = match;
                                                    }
                                                    *parentMatch17 = match;
                                                    if (!match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch19 = &match;
                                                        lexer.SetPos(save);
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch20 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.DefaultStatement(lexer, context);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                defaultStatement.Reset(cast<cm.ast.DefaultStatementNode*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    switchStatementNode->SetDefault(defaultStatement.Release());
                                                                }
                                                                *parentMatch20 = match;
                                                            }
                                                            *parentMatch19 = match;
                                                        }
                                                        *parentMatch17 = match;
                                                    }
                                                }
                                                *parentMatch16 = match;
                                            }
                                            if (match.hit)
                                            {
                                                *parentMatch15 = match;
                                            }
                                            else
                                            {
                                                lexer.SetPos(save);
                                                break;
                                            }
                                        }
                                    }
                                }
                                *parentMatch14 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch21 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RBRACE)
                            {
                                auto incResult4 = ++lexer;
                                if (incResult4.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch21 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SwitchStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, switchStatementNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SwitchStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"SwitchStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> CaseStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"CaseStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316050);
            UniquePtr<cm.ast.CaseStatementNode> caseStatementNode = UniquePtr<cm.ast.CaseStatementNode>();
            System.UniquePtr<cm.ast.Node> caseExpr;
            System.UniquePtr<cm.ast.StatementNode> stmt;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(true);
                                if (match.hit)
                                {
                                    caseStatementNode.Reset(new cm.ast.CaseStatementNode(lexer.GetSpan(pos), lexer.FileIndex()));
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch9 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                if (*lexer == CASE)
                                                {
                                                    auto incResult0 = ++lexer;
                                                    if (incResult0.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                *parentMatch9 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch10 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch11 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        caseExpr.Reset(cast<cm.ast.Node*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            caseStatementNode->AddCaseExpr(caseExpr.Release());
                                                        }
                                                        *parentMatch11 = match;
                                                    }
                                                    *parentMatch10 = match;
                                                }
                                                *parentMatch9 = match;
                                            }
                                            *parentMatch8 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch12 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                if (*lexer == COLON)
                                                {
                                                    auto incResult1 = ++lexer;
                                                    if (incResult1.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                *parentMatch12 = match;
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(true);
                                    System.Parsing.Match* parentMatch13 = &match;
                                    while (true)
                                    {
                                        long save = lexer.GetPos();
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch14 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch15 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch16 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == CASE)
                                                        {
                                                            auto incResult2 = ++lexer;
                                                            if (incResult2.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch16 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch17 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch18 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                caseExpr.Reset(cast<cm.ast.Node*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    caseStatementNode->AddCaseExpr(caseExpr.Release());
                                                                }
                                                                *parentMatch18 = match;
                                                            }
                                                            *parentMatch17 = match;
                                                        }
                                                        *parentMatch16 = match;
                                                    }
                                                    *parentMatch15 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch19 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == COLON)
                                                        {
                                                            auto incResult3 = ++lexer;
                                                            if (incResult3.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch19 = match;
                                                    }
                                                    *parentMatch15 = match;
                                                }
                                                *parentMatch14 = match;
                                            }
                                            if (match.hit)
                                            {
                                                *parentMatch13 = match;
                                            }
                                            else
                                            {
                                                lexer.SetPos(save);
                                                break;
                                            }
                                        }
                                    }
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch20 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch21 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch22 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch23 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                stmt.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    caseStatementNode->AddStatement(stmt.Release());
                                                }
                                                *parentMatch23 = match;
                                            }
                                            *parentMatch22 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch21 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch20 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"CaseStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, caseStatementNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"CaseStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"CaseStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> DefaultStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"DefaultStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316051);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.DefaultStatementNode> defaultStatementNode = UniquePtr<cm.ast.DefaultStatementNode>();
            System.UniquePtr<cm.ast.StatementNode> stmt;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == DEFAULT)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    span = lexer.GetSpan(pos);
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == COLON)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        defaultStatementNode.Reset(new cm.ast.DefaultStatementNode(span, lexer.FileIndex()));
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch8 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch9 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch10 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                stmt.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    defaultStatementNode->AddStatement(stmt.Release());
                                                }
                                                *parentMatch10 = match;
                                            }
                                            *parentMatch9 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch8 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DefaultStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, defaultStatementNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DefaultStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"DefaultStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> GotoCaseStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"GotoCaseStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316052);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> caseExpr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == GOTO)
                                    {
                                        auto incResult0 = ++lexer;
                                        if (incResult0.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        span = lexer.GetSpan(pos);
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == CASE)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                caseExpr.Reset(cast<cm.ast.Node*>(match.value));
                                *parentMatch7 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch8 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch8 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"GotoCaseStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.GotoCaseStatementNode(span, lexer.FileIndex(), caseExpr.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"GotoCaseStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"GotoCaseStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> GotoDefaultStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"GotoDefaultStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316053);
            System.Lex.Span span = System.Lex.Span();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == GOTO)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    span = lexer.GetSpan(pos);
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                if (*lexer == DEFAULT)
                                {
                                    auto incResult1 = ++lexer;
                                    if (incResult1.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch6 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"GotoDefaultStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.GotoDefaultStatementNode(span, lexer.FileIndex())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"GotoDefaultStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"GotoDefaultStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ExpressionStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ExpressionStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316054);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> expr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(true);
                                if (match.hit)
                                {
                                    context->PushParsingExpressionStatement(true);
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    expr.Reset(cast<cm.ast.Node*>(match.value));
                                    if (match.hit)
                                    {
                                        span = lexer.GetSpan(pos);
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ExpressionStatement");
                    #endif
                    context->PopParsingExpressionStatement();
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.ExpressionStatementNode(span, lexer.FileIndex(), expr.Release())));
                }
                else
                {
                    context->PopParsingExpressionStatement();
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ExpressionStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ExpressionStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> AssignmentStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"AssignmentStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316055);
            System.UniquePtr<cm.ast.StatementNode> stmt;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.AssignmentStatementExpr(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        stmt.Reset(cast<cm.ast.StatementNode*>(match.value));
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"AssignmentStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, stmt.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"AssignmentStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"AssignmentStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> AssignmentStatementExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"AssignmentStatementExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316056);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> target;
            System.UniquePtr<cm.ast.Node> source;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(true);
                                    if (match.hit)
                                    {
                                        context->PushParsingLValue(true);
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        target.Reset(cast<cm.ast.Node*>(match.value));
                                        if (match.hit)
                                        {
                                            span = lexer.GetSpan(pos);
                                            context->PopParsingLValue();
                                        }
                                        else
                                        {
                                            context->PopParsingLValue();
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch8 = &match;
                            {
                                System.Parsing.Match match(false);
                                if (*lexer == ASSIGN)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                *parentMatch8 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch9 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            source.Reset(cast<cm.ast.Node*>(match.value));
                            *parentMatch9 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"AssignmentStatementExpr");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.AssignmentStatementNode(span, lexer.FileIndex(), target.Release(), source.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"AssignmentStatementExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"AssignmentStatementExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ConstructionStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ConstructionStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316057);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.ConstructionStatementNode> constructionStatementNode = UniquePtr<cm.ast.ConstructionStatementNode>();
            System.UniquePtr<cm.ast.Node> type;
            System.UniquePtr<cm.ast.IdentifierNode> id;
            System.UniquePtr<cm.ast.Node> value;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    type.Reset(cast<cm.ast.Node*>(match.value));
                                    if (match.hit)
                                    {
                                        span = lexer.GetSpan(pos);
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                        if (match.hit)
                                        {
                                            constructionStatementNode.Reset(new cm.ast.ConstructionStatementNode(span, lexer.FileIndex(), type.Release(), id.Release()));
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch8 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch9 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch10 = &match;
                                    {
                                        long save = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch11 = &match;
                                        switch (*lexer)
                                        {
                                            case ASSIGN:
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch12 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == ASSIGN)
                                                    {
                                                        auto incResult0 = ++lexer;
                                                        if (incResult0.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    *parentMatch12 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch13 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch14 = &match;
                                                        {
                                                            long pos = lexer.GetPos();
                                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                                            if (matchResult.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                            }
                                                            System.Parsing.Match match = matchResult.Value();
                                                            value.Reset(cast<cm.ast.Node*>(match.value));
                                                            if (match.hit)
                                                            {
                                                                constructionStatementNode->AddArgument(value.Release());
                                                                constructionStatementNode->SetAssignment();
                                                            }
                                                            *parentMatch14 = match;
                                                        }
                                                        *parentMatch13 = match;
                                                    }
                                                    *parentMatch12 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    *parentMatch11 = match;
                                                }
                                                break;
                                            }
                                            case LPAREN:
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch15 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch16 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == LPAREN)
                                                        {
                                                            auto incResult1 = ++lexer;
                                                            if (incResult1.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch16 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch17 = &match;
                                                        {
                                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.ArgumentList(lexer, context, constructionStatementNode.Get());
                                                            if (matchResult.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                            }
                                                            System.Parsing.Match match = matchResult.Value();
                                                            *parentMatch17 = match;
                                                        }
                                                        *parentMatch16 = match;
                                                    }
                                                    *parentMatch15 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch18 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == RPAREN)
                                                        {
                                                            auto incResult2 = ++lexer;
                                                            if (incResult2.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch18 = match;
                                                    }
                                                    *parentMatch15 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    *parentMatch11 = match;
                                                }
                                                break;
                                            }
                                        }
                                        *parentMatch10 = match;
                                        if (!match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch19 = &match;
                                            lexer.SetPos(save);
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch20 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Parsing.Match match(true);
                                                    if (match.hit)
                                                    {
                                                        constructionStatementNode->SetEmpty();
                                                    }
                                                    *parentMatch20 = match;
                                                }
                                                *parentMatch19 = match;
                                            }
                                            *parentMatch10 = match;
                                        }
                                    }
                                    *parentMatch9 = match;
                                }
                                *parentMatch8 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch21 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult3 = ++lexer;
                                if (incResult3.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch21 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConstructionStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, constructionStatementNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConstructionStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ConstructionStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> DeleteStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"DeleteStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316058);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> ptr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == DELETE)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    span = lexer.GetSpan(pos);
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                ptr.Reset(cast<cm.ast.Node*>(match.value));
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch6 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DeleteStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.DeleteStatementNode(span, lexer.FileIndex(), ptr.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DeleteStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"DeleteStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> DestroyStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"DestroyStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316059);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> ptr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == DESTROY)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    span = lexer.GetSpan(pos);
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                ptr.Reset(cast<cm.ast.Node*>(match.value));
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch6 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DestroyStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.DestroyStatementNode(span, lexer.FileIndex(), ptr.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DestroyStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"DestroyStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> EmptyStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"EmptyStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316060);
            System.Lex.Span span = System.Lex.Span();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == SEMICOLON)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            span = lexer.GetSpan(pos);
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"EmptyStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.EmptyStatementNode(span, lexer.FileIndex())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"EmptyStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"EmptyStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ThrowStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ThrowStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316061);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> exception;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == THROW)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    span = lexer.GetSpan(pos);
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(true);
                                long save = lexer.GetPos();
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    exception.Reset(cast<cm.ast.Node*>(match.value));
                                    if (match.hit)
                                    {
                                        *parentMatch6 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                    }
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ThrowStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.ThrowStatementNode(span, lexer.FileIndex(), exception.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ThrowStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ThrowStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> TryStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"TryStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316062);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<TryStatementNode> tryStatementNode = UniquePtr<TryStatementNode>();
            System.UniquePtr<cm.ast.CompoundStatementNode> tryBlock;
            System.UniquePtr<cm.ast.CatchNode> handler;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == TRY)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    span = lexer.GetSpan(pos);
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.CompoundStatement(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    tryBlock.Reset(cast<cm.ast.CompoundStatementNode*>(match.value));
                                    if (match.hit)
                                    {
                                        tryStatementNode.Reset(new cm.ast.TryStatementNode(span, lexer.FileIndex(), tryBlock.Release()));
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch8 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch9 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch10 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Catch(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        handler.Reset(cast<cm.ast.CatchNode*>(match.value));
                                        if (match.hit)
                                        {
                                            tryStatementNode->AddCatch(handler.Release());
                                        }
                                        *parentMatch10 = match;
                                    }
                                    *parentMatch9 = match;
                                }
                                *parentMatch8 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(true);
                                System.Parsing.Match* parentMatch11 = &match;
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch12 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch13 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Catch(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                handler.Reset(cast<cm.ast.CatchNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    tryStatementNode->AddCatch(handler.Release());
                                                }
                                                *parentMatch13 = match;
                                            }
                                            *parentMatch12 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch11 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TryStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, tryStatementNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TryStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"TryStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Catch(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Catch");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316063);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> catchType;
            System.UniquePtr<cm.ast.IdentifierNode> catchId;
            System.UniquePtr<cm.ast.CompoundStatementNode> catchBlock;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == CATCH)
                                            {
                                                auto incResult0 = ++lexer;
                                                if (incResult0.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            if (*lexer == LPAREN)
                                            {
                                                auto incResult1 = ++lexer;
                                                if (incResult1.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch9 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        catchType.Reset(cast<cm.ast.Node*>(match.value));
                                        *parentMatch9 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch10 = &match;
                                {
                                    System.Parsing.Match match(true);
                                    long save = lexer.GetPos();
                                    System.Parsing.Match* parentMatch11 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        catchId.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                        if (match.hit)
                                        {
                                            *parentMatch11 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                        }
                                    }
                                    *parentMatch10 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch12 = &match;
                            {
                                System.Parsing.Match match(false);
                                if (*lexer == RPAREN)
                                {
                                    auto incResult2 = ++lexer;
                                    if (incResult2.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                *parentMatch12 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch13 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.CompoundStatement(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            catchBlock.Reset(cast<cm.ast.CompoundStatementNode*>(match.value));
                            *parentMatch13 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Catch");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.CatchNode(span, lexer.FileIndex(), catchType.Release(), catchId.Release(), catchBlock.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Catch");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Catch");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> AssertStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"AssertStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316064);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> expr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == HASH)
                                    {
                                        auto incResult0 = ++lexer;
                                        if (incResult0.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        span = lexer.GetSpan(pos);
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == ASSERT)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                expr.Reset(cast<cm.ast.Node*>(match.value));
                                *parentMatch7 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch8 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch8 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"AssertStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.AssertStatementNode(span, lexer.FileIndex(), expr.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"AssertStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"AssertStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ConditionalCompilationStatement(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ConditionalCompilationStatement");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316065);
            System.Lex.Span span = System.Lex.Span();
            System.Lex.Span elifSpan = System.Lex.Span();
            System.Lex.Span elseSpan = System.Lex.Span();
            UniquePtr<ConditionalCompilationStatementNode> condCompStmt = UniquePtr<ConditionalCompilationStatementNode>();
            System.UniquePtr<cm.ast.ConditionalCompilationExpressionNode> ifExpr;
            System.UniquePtr<cm.ast.StatementNode> ifs;
            System.UniquePtr<cm.ast.ConditionalCompilationExpressionNode> elifExpr;
            System.UniquePtr<cm.ast.StatementNode> elifs;
            System.UniquePtr<cm.ast.StatementNode> elses;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == HASH)
                                                        {
                                                            auto incResult0 = ++lexer;
                                                            if (incResult0.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            span = lexer.GetSpan(pos);
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch11 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == IF)
                                                        {
                                                            auto incResult1 = ++lexer;
                                                            if (incResult1.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch11 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch12 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == LPAREN)
                                                    {
                                                        auto incResult2 = ++lexer;
                                                        if (incResult2.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    *parentMatch12 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch13 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch14 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConditionalCompilationExpression(lexer, context);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    ifExpr.Reset(cast<cm.ast.ConditionalCompilationExpressionNode*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        condCompStmt.Reset(new cm.ast.ConditionalCompilationStatementNode(span, lexer.FileIndex(), ifExpr.Release()));
                                                    }
                                                    *parentMatch14 = match;
                                                }
                                                *parentMatch13 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch15 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            if (*lexer == RPAREN)
                                            {
                                                auto incResult3 = ++lexer;
                                                if (incResult3.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            *parentMatch15 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch16 = &match;
                                    {
                                        System.Parsing.Match match(true);
                                        System.Parsing.Match* parentMatch17 = &match;
                                        {
                                            while (true)
                                            {
                                                long save = lexer.GetPos();
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch18 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch19 = &match;
                                                        {
                                                            long pos = lexer.GetPos();
                                                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                                                            if (matchResult.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                            }
                                                            System.Parsing.Match match = matchResult.Value();
                                                            ifs.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                            if (match.hit)
                                                            {
                                                                condCompStmt->AddIfStatement(ifs.Release());
                                                            }
                                                            *parentMatch19 = match;
                                                        }
                                                        *parentMatch18 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch17 = match;
                                                    }
                                                    else
                                                    {
                                                        lexer.SetPos(save);
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        *parentMatch16 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch20 = &match;
                                {
                                    System.Parsing.Match match(true);
                                    System.Parsing.Match* parentMatch21 = &match;
                                    {
                                        while (true)
                                        {
                                            long save = lexer.GetPos();
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch22 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch23 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch24 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch25 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch26 = &match;
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch27 = &match;
                                                                    {
                                                                        System.Parsing.Match match(false);
                                                                        System.Parsing.Match* parentMatch28 = &match;
                                                                        {
                                                                            long pos = lexer.GetPos();
                                                                            System.Parsing.Match match(false);
                                                                            if (*lexer == HASH)
                                                                            {
                                                                                auto incResult4 = ++lexer;
                                                                                if (incResult4.Error())
                                                                                {
                                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                                                                }
                                                                                match.hit = true;
                                                                            }
                                                                            if (match.hit)
                                                                            {
                                                                                elifSpan = lexer.GetSpan(pos);
                                                                            }
                                                                            *parentMatch28 = match;
                                                                        }
                                                                        *parentMatch27 = match;
                                                                    }
                                                                    if (match.hit)
                                                                    {
                                                                        System.Parsing.Match match(false);
                                                                        System.Parsing.Match* parentMatch29 = &match;
                                                                        {
                                                                            System.Parsing.Match match(false);
                                                                            if (*lexer == ELIF)
                                                                            {
                                                                                auto incResult5 = ++lexer;
                                                                                if (incResult5.Error())
                                                                                {
                                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult5.GetErrorId()));
                                                                                }
                                                                                match.hit = true;
                                                                            }
                                                                            *parentMatch29 = match;
                                                                        }
                                                                        *parentMatch27 = match;
                                                                    }
                                                                    *parentMatch26 = match;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch30 = &match;
                                                                    {
                                                                        System.Parsing.Match match(false);
                                                                        if (*lexer == LPAREN)
                                                                        {
                                                                            auto incResult6 = ++lexer;
                                                                            if (incResult6.Error())
                                                                            {
                                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult6.GetErrorId()));
                                                                            }
                                                                            match.hit = true;
                                                                        }
                                                                        *parentMatch30 = match;
                                                                    }
                                                                    *parentMatch26 = match;
                                                                }
                                                                *parentMatch25 = match;
                                                            }
                                                            if (match.hit)
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch31 = &match;
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch32 = &match;
                                                                    {
                                                                        long pos = lexer.GetPos();
                                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConditionalCompilationExpression(lexer, context);
                                                                        if (matchResult.Error())
                                                                        {
                                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                        }
                                                                        System.Parsing.Match match = matchResult.Value();
                                                                        elifExpr.Reset(cast<cm.ast.ConditionalCompilationExpressionNode*>(match.value));
                                                                        if (match.hit)
                                                                        {
                                                                            condCompStmt->AddElifExpr(elifSpan, lexer.FileIndex(), elifExpr.Release());
                                                                        }
                                                                        *parentMatch32 = match;
                                                                    }
                                                                    *parentMatch31 = match;
                                                                }
                                                                *parentMatch25 = match;
                                                            }
                                                            *parentMatch24 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch33 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                if (*lexer == RPAREN)
                                                                {
                                                                    auto incResult7 = ++lexer;
                                                                    if (incResult7.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult7.GetErrorId()));
                                                                    }
                                                                    match.hit = true;
                                                                }
                                                                *parentMatch33 = match;
                                                            }
                                                            *parentMatch24 = match;
                                                        }
                                                        *parentMatch23 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch34 = &match;
                                                        {
                                                            System.Parsing.Match match(true);
                                                            System.Parsing.Match* parentMatch35 = &match;
                                                            {
                                                                while (true)
                                                                {
                                                                    long save = lexer.GetPos();
                                                                    {
                                                                        System.Parsing.Match match(false);
                                                                        System.Parsing.Match* parentMatch36 = &match;
                                                                        {
                                                                            System.Parsing.Match match(false);
                                                                            System.Parsing.Match* parentMatch37 = &match;
                                                                            {
                                                                                long pos = lexer.GetPos();
                                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                                                                                if (matchResult.Error())
                                                                                {
                                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                                }
                                                                                System.Parsing.Match match = matchResult.Value();
                                                                                elifs.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                                                if (match.hit)
                                                                                {
                                                                                    condCompStmt->AddElifStatement(elifs.Release());
                                                                                }
                                                                                *parentMatch37 = match;
                                                                            }
                                                                            *parentMatch36 = match;
                                                                        }
                                                                        if (match.hit)
                                                                        {
                                                                            *parentMatch35 = match;
                                                                        }
                                                                        else
                                                                        {
                                                                            lexer.SetPos(save);
                                                                            break;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            *parentMatch34 = match;
                                                        }
                                                        *parentMatch23 = match;
                                                    }
                                                    *parentMatch22 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    *parentMatch21 = match;
                                                }
                                                else
                                                {
                                                    lexer.SetPos(save);
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    *parentMatch20 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch38 = &match;
                            {
                                System.Parsing.Match match(true);
                                long save = lexer.GetPos();
                                System.Parsing.Match* parentMatch39 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch40 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch41 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch42 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch43 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == HASH)
                                                    {
                                                        auto incResult8 = ++lexer;
                                                        if (incResult8.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult8.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        elseSpan = lexer.GetSpan(pos);
                                                    }
                                                    *parentMatch43 = match;
                                                }
                                                *parentMatch42 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch44 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == ELSE)
                                                    {
                                                        auto incResult9 = ++lexer;
                                                        if (incResult9.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult9.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    *parentMatch44 = match;
                                                }
                                                *parentMatch42 = match;
                                            }
                                            *parentMatch41 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch45 = &match;
                                            {
                                                System.Parsing.Match match(true);
                                                System.Parsing.Match* parentMatch46 = &match;
                                                {
                                                    while (true)
                                                    {
                                                        long save = lexer.GetPos();
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch47 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch48 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.Statement(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    elses.Reset(cast<cm.ast.StatementNode*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        condCompStmt->AddElseStatement(elseSpan, lexer.FileIndex(), elses.Release());
                                                                    }
                                                                    *parentMatch48 = match;
                                                                }
                                                                *parentMatch47 = match;
                                                            }
                                                            if (match.hit)
                                                            {
                                                                *parentMatch46 = match;
                                                            }
                                                            else
                                                            {
                                                                lexer.SetPos(save);
                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                                *parentMatch45 = match;
                                            }
                                            *parentMatch41 = match;
                                        }
                                        *parentMatch40 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch39 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                    }
                                }
                                *parentMatch38 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch49 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch50 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch51 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == HASH)
                                    {
                                        auto incResult10 = ++lexer;
                                        if (incResult10.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult10.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch51 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch52 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == ENDIF)
                                        {
                                            auto incResult11 = ++lexer;
                                            if (incResult11.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult11.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch52 = match;
                                    }
                                    *parentMatch51 = match;
                                }
                                *parentMatch50 = match;
                            }
                            *parentMatch49 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationStatement");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, condCompStmt.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ConditionalCompilationStatement");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ConditionalCompilationExpression(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ConditionalCompilationExpression");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316066);
            System.UniquePtr<cm.ast.ConditionalCompilationExpressionNode> disjunction;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConditionalCompilationDisjunction(lexer, context);
                    if (matchResult.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                    }
                    System.Parsing.Match match = matchResult.Value();
                    disjunction.Reset(cast<cm.ast.ConditionalCompilationExpressionNode*>(match.value));
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationExpression");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, disjunction.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationExpression");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ConditionalCompilationExpression");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ConditionalCompilationDisjunction(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ConditionalCompilationDisjunction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316067);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.ConditionalCompilationExpressionNode> expr = UniquePtr<cm.ast.ConditionalCompilationExpressionNode>();
            System.UniquePtr<cm.ast.ConditionalCompilationExpressionNode> left;
            System.UniquePtr<cm.ast.ConditionalCompilationExpressionNode> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConditionalCompilationConjunction(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.ConditionalCompilationExpressionNode*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                if (*lexer == DISJUNCTION)
                                                {
                                                    auto incResult0 = ++lexer;
                                                    if (incResult0.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch9 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConditionalCompilationConjunction(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        right.Reset(cast<cm.ast.ConditionalCompilationExpressionNode*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            expr.Reset(new cm.ast.ConditionalCompilationDisjunctionNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                        }
                                                        *parentMatch9 = match;
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationDisjunction");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationDisjunction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ConditionalCompilationDisjunction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ConditionalCompilationConjunction(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ConditionalCompilationConjunction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316068);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.ConditionalCompilationExpressionNode> expr = UniquePtr<cm.ast.ConditionalCompilationExpressionNode>();
            System.UniquePtr<cm.ast.ConditionalCompilationExpressionNode> left;
            System.UniquePtr<cm.ast.ConditionalCompilationExpressionNode> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConditionalCompilationPrefix(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.ConditionalCompilationExpressionNode*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                if (*lexer == AMP_AMP)
                                                {
                                                    auto incResult0 = ++lexer;
                                                    if (incResult0.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch9 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConditionalCompilationPrefix(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        right.Reset(cast<cm.ast.ConditionalCompilationExpressionNode*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            expr.Reset(new cm.ast.ConditionalCompilationConjunctionNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                        }
                                                        *parentMatch9 = match;
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationConjunction");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationConjunction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ConditionalCompilationConjunction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ConditionalCompilationPrefix(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ConditionalCompilationPrefix");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316069);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.ConditionalCompilationExpressionNode> expr = UniquePtr<cm.ast.ConditionalCompilationExpressionNode>();
            System.UniquePtr<cm.ast.ConditionalCompilationExpressionNode> prefix;
            System.UniquePtr<cm.ast.ConditionalCompilationExpressionNode> primary;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        switch (*lexer)
                        {
                            case EXCLAMATION:
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch4 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch5 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        if (*lexer == EXCLAMATION)
                                        {
                                            auto incResult0 = ++lexer;
                                            if (incResult0.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            span = lexer.GetSpan(pos);
                                        }
                                        *parentMatch5 = match;
                                    }
                                    *parentMatch4 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConditionalCompilationPrefix(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            prefix.Reset(cast<cm.ast.ConditionalCompilationExpressionNode*>(match.value));
                                            if (match.hit)
                                            {
                                                expr.Reset(new cm.ast.ConditionalCompilationNotNode(span, lexer.FileIndex(), prefix.Release()));
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch4 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch3 = match;
                                }
                                break;
                            }
                            case ID:
                            case LPAREN:
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch8 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConditionalCompilationPrimary(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    primary.Reset(cast<cm.ast.ConditionalCompilationExpressionNode*>(match.value));
                                    if (match.hit)
                                    {
                                        expr.Reset(primary.Release());
                                    }
                                    *parentMatch8 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch3 = match;
                                }
                                break;
                            }
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationPrefix");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationPrefix");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ConditionalCompilationPrefix");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ConditionalCompilationPrimary(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ConditionalCompilationPrimary");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8886062459526316070);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.ConditionalCompilationExpressionNode> expr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                switch (*lexer)
                {
                    case ID:
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch2 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == ID)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                #if (DEBUG)
                                    if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationPrimary");
                                #endif
                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.ConditionalCompilationPrimaryNode(lexer.GetSpan(pos), lexer.FileIndex(), lexer.GetToken(pos).ToString())));
                            }
                            *parentMatch2 = match;
                        }
                        if (match.hit)
                        {
                            *parentMatch1 = match;
                        }
                        break;
                    }
                    case LPAREN:
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == LPAREN)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        span = lexer.GetSpan(pos);
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.ConditionalCompilationExpression(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    expr.Reset(cast<cm.ast.ConditionalCompilationExpressionNode*>(match.value));
                                    *parentMatch6 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch8 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == RPAREN)
                                    {
                                        auto incResult2 = ++lexer;
                                        if (incResult2.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationPrimary");
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.ParenthesizedConditionalCompilationExpressionNode(span, lexer.FileIndex(), expr.Release())));
                                    }
                                    *parentMatch8 = match;
                                }
                                *parentMatch7 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            *parentMatch1 = match;
                        }
                        break;
                    }
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConditionalCompilationPrimary");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ConditionalCompilationPrimary");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
    }
}

new class cm.parser.StatementParser<cm.lexer.CmajorLexer>;

