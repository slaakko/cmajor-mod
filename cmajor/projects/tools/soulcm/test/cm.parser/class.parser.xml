<parserFile>
 <grammar name="cm.parser.ClassParser">
  <rule first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}" name="Class">
   <action first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
    <group first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
     <sequence first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
      <sequence first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
       <sequence first="{#, ABSTRACT, CDECL, CLASS, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LANGLE, LBRACE, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
        <sequence first="{#, ABSTRACT, CDECL, CLASS, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LANGLE, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
         <sequence first="{#, ABSTRACT, CDECL, CLASS, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LANGLE, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
          <sequence first="{#, ABSTRACT, CDECL, CLASS, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LANGLE, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
           <sequence first="{#, ABSTRACT, CDECL, CLASS, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
            <sequence first="{#, ABSTRACT, CDECL, CLASS, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
             <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
              <optional first="{#, LBRACKET}">
               <nonterminal first="{LBRACKET}" ruleName="Attributes"/>
              </optional>
              <group first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
               <difference first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
                <nonterminal first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}" ruleName="Specifiers"/>
                <token first="{}" name="NEW"/>
               </difference>
              </group>
             </sequence>
             <token first="{CLASS}" name="CLASS"/>
            </sequence>
            <action first="{ID}">
             <nonterminal first="{ID}" ruleName="Identifier"/>
            </action>
           </sequence>
           <optional first="{#, LANGLE}">
            <nonterminal first="{LANGLE}" ruleName="TemplateParameterList"/>
           </optional>
          </sequence>
          <optional first="{#, COLON}">
           <nonterminal first="{COLON}" ruleName="InheritanceAndInterfaces"/>
          </optional>
         </sequence>
         <optional first="{#, WHERE}">
          <group first="{WHERE}">
           <action first="{WHERE}">
            <nonterminal first="{WHERE}" ruleName="WhereConstraint"/>
           </action>
          </group>
         </optional>
        </sequence>
        <token first="{LBRACE}" name="LBRACE"/>
       </sequence>
       <nonterminal first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}" ruleName="ClassContent"/>
      </sequence>
      <token first="{RBRACE}" name="RBRACE"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{COLON}" name="InheritanceAndInterfaces">
   <group first="{COLON}">
    <sequence first="{COLON}">
     <token first="{COLON}" name="COLON"/>
     <list first="{#, COMMA, ID}">
      <sequence first="{#, COMMA, ID}">
       <group first="{#, ID}">
        <sequence first="{#, ID}">
         <action first="{#}">
          <empty first="{#}"/>
         </action>
         <action first="{#, ID}">
          <nonterminal first="{#, ID}" ruleName="BaseClassOrInterface"/>
         </action>
        </sequence>
       </group>
       <kleene first="{#, COMMA}">
        <sequence first="{COMMA}">
         <token first="{COMMA}" name="COMMA"/>
         <group first="{#, ID}">
          <sequence first="{#, ID}">
           <action first="{#}">
            <empty first="{#}"/>
           </action>
           <action first="{#, ID}">
            <nonterminal first="{#, ID}" ruleName="BaseClassOrInterface"/>
           </action>
          </sequence>
         </group>
        </sequence>
       </kleene>
      </sequence>
     </list>
    </sequence>
   </group>
  </rule>
  <rule first="{#, ID}" name="BaseClassOrInterface">
   <group first="{#, ID}">
    <choice first="{#, ID}">
     <action first="{#, ID}">
      <nonterminal first="{#, ID}" ruleName="TemplateId"/>
     </action>
     <action first="{ID}">
      <nonterminal first="{ID}" ruleName="QualifiedId"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}" name="ClassContent">
   <kleene first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
    <group first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
     <action first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
      <nonterminal first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}" ruleName="ClassMember"/>
     </action>
    </group>
   </kleene>
  </rule>
  <rule first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}" name="ClassMember">
   <group first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
    <choice first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
     <choice first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
      <choice first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
       <choice first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
        <choice first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
         <choice first="{#, ABSTRACT, AMP, AMP_AMP, ASSIGN, AUTO, BOOL, BYTE, CDECL, CHAR, COLON, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TILDE, TYPEDEF, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
          <choice first="{#, ABSTRACT, AMP, AMP_AMP, ASSIGN, AUTO, BOOL, BYTE, CDECL, CHAR, COLON, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TILDE, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
           <choice first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, COLON, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TILDE, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
            <choice first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, COLON, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TILDE, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
             <choice first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, COLON, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TILDE, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
              <choice first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, TILDE, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
               <choice first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
                <action first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
                 <nonterminal first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}" ruleName="StaticConstructor"/>
                </action>
                <action first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
                 <nonterminal first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}" ruleName="Constructor"/>
                </action>
               </choice>
               <action first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, TILDE, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
                <nonterminal first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, TILDE, UNIT_TEST, VIRTUAL, WHERE, WINAPI}" ruleName="Destructor"/>
               </action>
              </choice>
              <action first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
               <nonterminal first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}" ruleName="MemberFunction"/>
              </action>
             </choice>
             <action first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
              <nonterminal first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}" ruleName="ConversionFunction"/>
             </action>
            </choice>
            <action first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
             <nonterminal first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}" ruleName="MemberVariable"/>
            </action>
           </choice>
           <action first="{#, ABSTRACT, AMP, AMP_AMP, ASSIGN, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WINAPI}">
            <nonterminal first="{#, ABSTRACT, AMP, AMP_AMP, ASSIGN, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WINAPI}" ruleName="UsingAlias"/>
           </action>
          </choice>
          <action first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TYPEDEF, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
           <nonterminal first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, TYPEDEF, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}" ruleName="Typedef"/>
          </action>
         </choice>
         <action first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
          <nonterminal first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CLASS, COLON, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DELEGATE, DISJUNCTION, DIV, DOT, DOUBLE, ENUM, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OPERATOR, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, RBRACE, REM, RPAREN, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, USING, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}" ruleName="Class"/>
         </action>
        </choice>
        <action first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, ENUM, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RBRACE, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
         <nonterminal first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, ENUM, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RBRACE, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}" ruleName="EnumType"/>
        </action>
       </choice>
       <action first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, REM, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
        <nonterminal first="{#, ABSTRACT, AMP, AMP_AMP, ARROW, AS, ASSIGN, AUTO, BASE, BOOL, BYTE, CARET, CAST, CDECL, CHAR, CHAR_LITERAL, CONST, CONSTEXPR, CONSTRUCT, DEFAULT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INLINE, INT, INTEGER_LITERAL, INTERNAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NOTHROW, NULL_LITERAL, OVERRIDE, PIPE, PLUS, PLUS_PLUS, PRIVATE, PROTECTED, PUBLIC, RANGLE, REM, SBYTE, SEMICOLON, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STATIC, STRING_LITERAL, SUPPRESS, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}" ruleName="Constant"/>
       </action>
      </choice>
      <action first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DELEGATE, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
       <nonterminal first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DELEGATE, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}" ruleName="Delegate"/>
      </action>
     </choice>
     <action first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CLASS, CONST, CONSTEXPR, DEFAULT, DELEGATE, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
      <nonterminal first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CLASS, CONST, CONSTEXPR, DEFAULT, DELEGATE, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}" ruleName="ClassDelegate"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}" name="StaticConstructor">
   <action first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
    <group first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
     <sequence first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
      <sequence first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
       <sequence first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
        <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
         <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
          <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
           <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
            <optional first="{#, LBRACKET}">
             <nonterminal first="{LBRACKET}" ruleName="Attributes"/>
            </optional>
            <action first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
             <nonterminal first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}" ruleName="Specifiers"/>
            </action>
           </sequence>
           <action first="{ID}">
            <nonterminal first="{ID}" ruleName="Identifier"/>
           </action>
          </sequence>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <action first="{RPAREN}">
          <token first="{RPAREN}" name="RPAREN"/>
         </action>
        </sequence>
        <optional first="{#, COLON}">
         <group first="{COLON}">
          <sequence first="{COLON}">
           <token first="{COLON}" name="COLON"/>
           <group first="{BASE, ID, THIS}">
            <list first="{BASE, ID, THIS}">
             <sequence first="{BASE, ID, THIS}">
              <action first="{BASE, ID, THIS}">
               <nonterminal first="{BASE, ID, THIS}" ruleName="Initializer"/>
              </action>
              <kleene first="{#, COMMA}">
               <sequence first="{COMMA}">
                <token first="{COMMA}" name="COMMA"/>
                <action first="{BASE, ID, THIS}">
                 <nonterminal first="{BASE, ID, THIS}" ruleName="Initializer"/>
                </action>
               </sequence>
              </kleene>
             </sequence>
            </list>
           </group>
          </sequence>
         </group>
        </optional>
       </sequence>
       <optional first="{#, WHERE}">
        <group first="{WHERE}">
         <action first="{WHERE}">
          <nonterminal first="{WHERE}" ruleName="WhereConstraint"/>
         </action>
        </group>
       </optional>
      </sequence>
      <group first="{LBRACE, SEMICOLON}">
       <choice first="{LBRACE, SEMICOLON}">
        <action first="{LBRACE}">
         <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
        </action>
        <token first="{SEMICOLON}" name="SEMICOLON"/>
       </choice>
      </group>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}" name="Constructor">
   <action first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
    <group first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
     <sequence first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEMICOLON, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
      <sequence first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
       <sequence first="{#, ABSTRACT, CDECL, COLON, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
        <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
         <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
          <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
           <optional first="{#, LBRACKET}">
            <nonterminal first="{LBRACKET}" ruleName="Attributes"/>
           </optional>
           <action first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
            <nonterminal first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}" ruleName="Specifiers"/>
           </action>
          </sequence>
          <action first="{ID}">
           <nonterminal first="{ID}" ruleName="Identifier"/>
          </action>
         </sequence>
         <nonterminal first="{LPAREN}" ruleName="ParameterList"/>
        </sequence>
        <optional first="{#, COLON}">
         <group first="{COLON}">
          <sequence first="{COLON}">
           <token first="{COLON}" name="COLON"/>
           <group first="{BASE, ID, THIS}">
            <list first="{BASE, ID, THIS}">
             <sequence first="{BASE, ID, THIS}">
              <action first="{BASE, ID, THIS}">
               <nonterminal first="{BASE, ID, THIS}" ruleName="Initializer"/>
              </action>
              <kleene first="{#, COMMA}">
               <sequence first="{COMMA}">
                <token first="{COMMA}" name="COMMA"/>
                <action first="{BASE, ID, THIS}">
                 <nonterminal first="{BASE, ID, THIS}" ruleName="Initializer"/>
                </action>
               </sequence>
              </kleene>
             </sequence>
            </list>
           </group>
          </sequence>
         </group>
        </optional>
       </sequence>
       <optional first="{#, WHERE}">
        <group first="{WHERE}">
         <action first="{WHERE}">
          <nonterminal first="{WHERE}" ruleName="WhereConstraint"/>
         </action>
        </group>
       </optional>
      </sequence>
      <group first="{LBRACE, SEMICOLON}">
       <choice first="{LBRACE, SEMICOLON}">
        <action first="{LBRACE}">
         <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
        </action>
        <token first="{SEMICOLON}" name="SEMICOLON"/>
       </choice>
      </group>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, TILDE, UNIT_TEST, VIRTUAL, WHERE, WINAPI}" name="Destructor">
   <action first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, TILDE, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
    <group first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, TILDE, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
     <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACE, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SEMICOLON, STATIC, SUPPRESS, THROW, TILDE, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
      <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, STATIC, SUPPRESS, THROW, TILDE, UNIT_TEST, VIRTUAL, WHERE, WINAPI}">
       <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, STATIC, SUPPRESS, THROW, TILDE, UNIT_TEST, VIRTUAL, WINAPI}">
        <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, LPAREN, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, TILDE, UNIT_TEST, VIRTUAL, WINAPI}">
         <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, ID, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, TILDE, UNIT_TEST, VIRTUAL, WINAPI}">
          <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, TILDE, UNIT_TEST, VIRTUAL, WINAPI}">
           <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
            <optional first="{#, LBRACKET}">
             <nonterminal first="{LBRACKET}" ruleName="Attributes"/>
            </optional>
            <action first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
             <nonterminal first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}" ruleName="Specifiers"/>
            </action>
           </sequence>
           <token first="{TILDE}" name="TILDE"/>
          </sequence>
          <action first="{ID}">
           <nonterminal first="{ID}" ruleName="Identifier"/>
          </action>
         </sequence>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <action first="{RPAREN}">
         <token first="{RPAREN}" name="RPAREN"/>
        </action>
       </sequence>
       <optional first="{#, WHERE}">
        <group first="{WHERE}">
         <action first="{WHERE}">
          <nonterminal first="{WHERE}" ruleName="WhereConstraint"/>
         </action>
        </group>
       </optional>
      </sequence>
      <group first="{LBRACE, SEMICOLON}">
       <choice first="{LBRACE, SEMICOLON}">
        <action first="{LBRACE}">
         <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
        </action>
        <token first="{SEMICOLON}" name="SEMICOLON"/>
       </choice>
      </group>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{BASE, ID, THIS}" name="Initializer">
   <action first="{BASE, ID, THIS}">
    <group first="{BASE, ID, THIS}">
     <choice first="{BASE, ID, THIS}">
      <choice first="{BASE, THIS}">
       <sequence first="{THIS}">
        <sequence first="{THIS}">
         <sequence first="{THIS}">
          <action first="{THIS}">
           <token first="{THIS}" name="THIS"/>
          </action>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ArgumentList"/>
        </sequence>
        <token first="{RPAREN}" name="RPAREN"/>
       </sequence>
       <sequence first="{BASE}">
        <sequence first="{BASE}">
         <sequence first="{BASE}">
          <action first="{BASE}">
           <token first="{BASE}" name="BASE"/>
          </action>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ArgumentList"/>
        </sequence>
        <token first="{RPAREN}" name="RPAREN"/>
       </sequence>
      </choice>
      <sequence first="{ID}">
       <sequence first="{ID}">
        <sequence first="{ID}">
         <action first="{ID}">
          <nonterminal first="{ID}" ruleName="Identifier"/>
         </action>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ArgumentList"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}" name="MemberFunction">
   <action first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
    <group first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
     <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
      <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
       <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
        <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
         <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
          <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
           <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
            <optional first="{#, LBRACKET}">
             <nonterminal first="{LBRACKET}" ruleName="Attributes"/>
            </optional>
            <action first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
             <nonterminal first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}" ruleName="Specifiers"/>
            </action>
           </sequence>
           <nonterminal first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
          </sequence>
          <action first="{#, ID, OPERATOR}">
           <nonterminal first="{#, ID, OPERATOR}" ruleName="FunctionGroupId"/>
          </action>
         </sequence>
         <nonterminal first="{LPAREN}" ruleName="ParameterList"/>
        </sequence>
        <optional first="{#, CONST}">
         <group first="{CONST}">
          <action first="{CONST}">
           <token first="{CONST}" name="CONST"/>
          </action>
         </group>
        </optional>
       </sequence>
       <optional first="{#, WHERE}">
        <group first="{WHERE}">
         <action first="{WHERE}">
          <nonterminal first="{WHERE}" ruleName="WhereConstraint"/>
         </action>
        </group>
       </optional>
      </sequence>
      <group first="{LBRACE, SEMICOLON}">
       <choice first="{LBRACE, SEMICOLON}">
        <action first="{LBRACE}">
         <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
        </action>
        <token first="{SEMICOLON}" name="SEMICOLON"/>
       </choice>
      </group>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}" name="ConversionFunction">
   <action first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
    <group first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
     <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
      <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WHERE, WINAPI}">
       <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
        <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, RPAREN, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
         <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, LPAREN, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
          <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
           <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OPERATOR, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
            <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
             <optional first="{#, LBRACKET}">
              <nonterminal first="{LBRACKET}" ruleName="Attributes"/>
             </optional>
             <action first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
              <nonterminal first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}" ruleName="Specifiers"/>
             </action>
            </sequence>
            <token first="{OPERATOR}" name="OPERATOR"/>
           </sequence>
           <nonterminal first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
          </sequence>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <action first="{RPAREN}">
          <token first="{RPAREN}" name="RPAREN"/>
         </action>
        </sequence>
        <optional first="{#, CONST}">
         <group first="{CONST}">
          <action first="{CONST}">
           <token first="{CONST}" name="CONST"/>
          </action>
         </group>
        </optional>
       </sequence>
       <optional first="{#, WHERE}">
        <group first="{WHERE}">
         <action first="{WHERE}">
          <nonterminal first="{WHERE}" ruleName="WhereConstraint"/>
         </action>
        </group>
       </optional>
      </sequence>
      <group first="{LBRACE, SEMICOLON}">
       <choice first="{LBRACE, SEMICOLON}">
        <action first="{LBRACE}">
         <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
        </action>
        <token first="{SEMICOLON}" name="SEMICOLON"/>
       </choice>
      </group>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}" name="MemberVariable">
   <action first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
    <group first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
     <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEMICOLON, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
      <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
       <sequence first="{#, ABSTRACT, AMP, AMP_AMP, AUTO, BOOL, BYTE, CDECL, CHAR, CONST, CONSTEXPR, DEFAULT, DOT, DOUBLE, EXPLICIT, EXTERN, FLOAT, ID, INLINE, INT, INTERNAL, LBRACKET, LONG, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SHORT, STAR, STATIC, SUPPRESS, THROW, UCHAR, UINT, ULONG, UNIT_TEST, USHORT, VIRTUAL, VOID, WCHAR, WINAPI}">
        <sequence first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, LBRACKET, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
         <optional first="{#, LBRACKET}">
          <nonterminal first="{LBRACKET}" ruleName="Attributes"/>
         </optional>
         <action first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}">
          <nonterminal first="{#, ABSTRACT, CDECL, CONSTEXPR, DEFAULT, EXPLICIT, EXTERN, INLINE, INTERNAL, NEW, NOTHROW, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, STATIC, SUPPRESS, THROW, UNIT_TEST, VIRTUAL, WINAPI}" ruleName="Specifiers"/>
         </action>
        </sequence>
        <nonterminal first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
       </sequence>
       <nonterminal first="{ID}" ruleName="Identifier"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
 </grammar>
</parserFile>
