// this file has been generated from 'C:/work/cmajor-mod/cmajor/projects/tools/soulcm/test/scmlg.parser/token_file.parser' using SoulCm parser generator scmpg version 5.0.0

using System;
using System.Lex;
using System.Parsing;
using cm.ast;
using cm.token;
using cm.parser;
using scm.parser;
using scmlg.ast;

namespace scmlg.parser
{
    public static class TokenFileParser<LexerT>
    {
        public static System.Result<System.UniquePtr<scmlg.ast.TokenFile>> Parse(LexerT& lexer)
        {
            System.UniquePtr<scmlg.ast.TokenFile> value;
            auto incResult1 = ++lexer; 
            if (incResult1.Error())
            {
                return System.Result<System.UniquePtr<scmlg.ast.TokenFile>>(System.ErrorId(incResult1.GetErrorId())); 
            }
            System.Result<System.Parsing.Match> matchResult = scmlg.parser.TokenFileParser<LexerT>.TokenFile(lexer);
            if (matchResult.Error())
            {
                return System.Result<System.UniquePtr<scmlg.ast.TokenFile>>(System.ErrorId(matchResult.GetErrorId()));
            }
            System.Parsing.Match match = matchResult.Value();
            value.Reset(cast<scmlg.ast.TokenFile*>(match.value));
            if (match.hit)
            {
                if (*lexer == System.Lex.END_TOKEN)
                {
                    return System.Result<System.UniquePtr<scmlg.ast.TokenFile>>(System.Rvalue(value)); 
                }
                else
                {
                    return System.Result<System.UniquePtr<scmlg.ast.TokenFile>>(lexer.GetFarthestError()); 
                }
            }
            else
            {
                return System.Result<System.UniquePtr<scmlg.ast.TokenFile>>(lexer.GetFarthestError()); 
            }
        }
        public static System.Result<System.Parsing.Match> TokenFile(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1158510743117627393);
            UniquePtr<scmlg.ast.TokenFile> tokenFile = UniquePtr<scmlg.ast.TokenFile>();
            UniquePtr<scmlg.ast.TokenCollection> tokenCollection = UniquePtr<scmlg.ast.TokenCollection>();
            System.UniquePtr<System.Parsing.Value<string>> tokenCollectionName;
            System.UniquePtr<scmlg.ast.Token> token;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = scm.parser.CommonParser<LexerT>.TokensKeyword(lexer);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        if (match.hit)
                                        {
                                            tokenFile.Reset(new scmlg.ast.TokenFile(lexer.FileName()));
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = scm.parser.CommonParser<LexerT>.QualifiedUtf8Id(lexer);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            tokenCollectionName.Reset(cast<System.Parsing.Value<string>*>(match.value));
                                            if (match.hit)
                                            {
                                                tokenCollection.Reset(new scmlg.ast.TokenCollection(tokenCollectionName->value));
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch9 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == LBRACE)
                                    {
                                        auto incResult0 = ++lexer;
                                        if (incResult0.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch9 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch10 = &match;
                            {
                                System.Parsing.Match match(true);
                                long save = lexer.GetPos();
                                System.Parsing.Match* parentMatch11 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch12 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch13 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch14 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = scmlg.parser.TokenFileParser<LexerT>.Token(lexer);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                token.Reset(cast<scmlg.ast.Token*>(match.value));
                                                if (match.hit)
                                                {
                                                    tokenCollection->AddToken(token.Release());
                                                }
                                                *parentMatch14 = match;
                                            }
                                            *parentMatch13 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch15 = &match;
                                            {
                                                System.Parsing.Match match(true);
                                                System.Parsing.Match* parentMatch16 = &match;
                                                {
                                                    while (true)
                                                    {
                                                        long save = lexer.GetPos();
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch17 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                if (*lexer == COMMA)
                                                                {
                                                                    auto incResult1 = ++lexer;
                                                                    if (incResult1.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                                    }
                                                                    match.hit = true;
                                                                }
                                                                *parentMatch17 = match;
                                                            }
                                                            if (match.hit)
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch18 = &match;
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch19 = &match;
                                                                    {
                                                                        long pos = lexer.GetPos();
                                                                        System.Result<System.Parsing.Match> matchResult = scmlg.parser.TokenFileParser<LexerT>.Token(lexer);
                                                                        if (matchResult.Error())
                                                                        {
                                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                        }
                                                                        System.Parsing.Match match = matchResult.Value();
                                                                        token.Reset(cast<scmlg.ast.Token*>(match.value));
                                                                        if (match.hit)
                                                                        {
                                                                            tokenCollection->AddToken(token.Release());
                                                                        }
                                                                        *parentMatch19 = match;
                                                                    }
                                                                    *parentMatch18 = match;
                                                                }
                                                                *parentMatch17 = match;
                                                            }
                                                            if (match.hit)
                                                            {
                                                                *parentMatch16 = match;
                                                            }
                                                            else
                                                            {
                                                                lexer.SetPos(save);
                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                                *parentMatch15 = match;
                                            }
                                            *parentMatch13 = match;
                                        }
                                        *parentMatch12 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch11 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                    }
                                }
                                *parentMatch10 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch20 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RBRACE)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch20 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    tokenFile->SetTokenCollection(tokenCollection.Release());
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, tokenFile.Release()));
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Token(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1158510743117627394);
            ustring name = ustring();
            ustring info = ustring();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == LPAREN)
                                    {
                                        auto incResult0 = ++lexer;
                                        if (incResult0.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == ID)
                                            {
                                                auto incResult1 = ++lexer;
                                                if (incResult1.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                name = lexer.GetToken(pos).ToString();
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch8 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == COMMA)
                                    {
                                        auto incResult2 = ++lexer;
                                        if (incResult2.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch8 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch9 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch10 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == STRING_LITERAL)
                                    {
                                        auto incResult3 = ++lexer;
                                        if (incResult3.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        cm.ast.StringLiteralPrefix prefix;
                                        auto infoResult = ParseStringLiteral(lexer.FileName(), lexer.GetToken(pos), prefix);
                                        if (infoResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(ErrorId(infoResult.GetErrorId()));
                                        }
                                        info = infoResult.Value();
                                    }
                                    *parentMatch10 = match;
                                }
                                *parentMatch9 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch11 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RPAREN)
                            {
                                auto incResult4 = ++lexer;
                                if (incResult4.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch11 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    auto nameResult = ToUtf8(name);
                    if (nameResult.Error())
                    {
                        return System.Result<System.Parsing.Match>(ErrorId(nameResult.GetErrorId()));
                    }
                    auto infoResult = ToUtf8(info);
                    if (infoResult.Error())
                    {
                        return System.Result<System.Parsing.Match>(ErrorId(infoResult.GetErrorId()));
                    }
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new scmlg.ast.Token(nameResult.Value(), infoResult.Value())));
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
    }
}

new class scmlg.parser.TokenFileParser<cm.lexer.CmajorLexer>;

