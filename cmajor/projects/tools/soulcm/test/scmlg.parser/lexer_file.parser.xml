<parserFile>
 <grammar name="scmlg.parser.LexerFileParser">
  <rule first="{#, ID, SEMICOLON, USING}" name="LexerFile">
   <action first="{#, ID, SEMICOLON, USING}">
    <group first="{#, ID, SEMICOLON, USING}">
     <sequence first="{#, ID, SEMICOLON, USING}">
      <sequence first="{#, ID, SEMICOLON, USING}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <nonterminal first="{#, ID, SEMICOLON, USING}" ruleName="Usings"/>
      </sequence>
      <action first="{ID}">
       <nonterminal first="{ID}" ruleName="LexerDefinition"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ID, SEMICOLON, USING}" name="Usings">
   <kleene first="{#, ID, SEMICOLON, USING}">
    <group first="{#, ID, SEMICOLON, USING}">
     <sequence first="{#, ID, SEMICOLON, USING}">
      <sequence first="{#, ID, USING}">
       <sequence first="{#, ID, USING}">
        <optional first="{#, ID}">
         <group first="{ID}">
          <action first="{ID}">
           <nonterminal first="{ID}" ruleName="OpaqueKeyword"/>
          </action>
         </group>
        </optional>
        <token first="{USING}" name="USING"/>
       </sequence>
       <nonterminal first="{ID}" ruleName="QualifiedUtf8Id"/>
      </sequence>
      <action first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </action>
     </sequence>
    </group>
   </kleene>
  </rule>
  <rule first="{ID}" name="LexerDefinition">
   <action first="{ID}">
    <group first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <sequence first="{ID}">
        <sequence first="{ID}">
         <nonterminal first="{ID}" ruleName="LexerKeyword"/>
         <action first="{ID}">
          <nonterminal first="{ID}" ruleName="QualifiedUtf8Id"/>
         </action>
        </sequence>
        <token first="{LBRACE}" name="LBRACE"/>
       </sequence>
       <kleene first="{#, ID}">
        <group first="{ID}">
         <nonterminal first="{ID}" ruleName="LexerContent"/>
        </group>
       </kleene>
      </sequence>
      <token first="{RBRACE}" name="RBRACE"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="LexerContent">
   <group first="{ID}">
    <choice first="{ID}">
     <choice first="{ID}">
      <nonterminal first="{ID}" ruleName="Rules"/>
      <nonterminal first="{ID}" ruleName="Variables"/>
     </choice>
     <nonterminal first="{ID}" ruleName="Actions"/>
    </choice>
   </group>
  </rule>
  <rule first="{ID}" name="Rules">
   <group first="{ID}">
    <sequence first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <nonterminal first="{ID}" ruleName="RulesKeyword"/>
       <token first="{LBRACE}" name="LBRACE"/>
      </sequence>
      <kleene first="{#, STRING_LITERAL}">
       <group first="{STRING_LITERAL}">
        <action first="{STRING_LITERAL}">
         <nonterminal first="{STRING_LITERAL}" ruleName="Rule"/>
        </action>
       </group>
      </kleene>
     </sequence>
     <token first="{RBRACE}" name="RBRACE"/>
    </sequence>
   </group>
  </rule>
  <rule first="{STRING_LITERAL}" name="Rule">
   <action first="{STRING_LITERAL}">
    <group first="{STRING_LITERAL}">
     <sequence first="{STRING_LITERAL}">
      <sequence first="{STRING_LITERAL}">
       <action first="{STRING_LITERAL}">
        <nonterminal first="{STRING_LITERAL}" ruleName="ExprString"/>
       </action>
       <nonterminal first="{#, DOLLAR}" ruleName="Action"/>
      </sequence>
      <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="Variables">
   <group first="{ID}">
    <sequence first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <nonterminal first="{ID}" ruleName="VariablesKeyword"/>
       <token first="{LBRACE}" name="LBRACE"/>
      </sequence>
      <kleene first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <group first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <action first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
         <nonterminal first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Variable"/>
        </action>
       </group>
      </kleene>
     </sequence>
     <token first="{RBRACE}" name="RBRACE"/>
    </sequence>
   </group>
  </rule>
  <rule first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Variable">
   <action first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SEMICOLON, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <sequence first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="Actions">
   <group first="{ID}">
    <sequence first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <nonterminal first="{ID}" ruleName="ActionsKeyword"/>
       <token first="{LBRACE}" name="LBRACE"/>
      </sequence>
      <kleene first="{#, ASSIGN, DOLLAR, LBRACE}">
       <group first="{#, ASSIGN, DOLLAR, LBRACE}">
        <sequence first="{#, ASSIGN, DOLLAR, LBRACE}">
         <sequence first="{#, ASSIGN, DOLLAR}">
          <action first="{#, DOLLAR}">
           <nonterminal first="{#, DOLLAR}" ruleName="Action"/>
          </action>
          <token first="{ASSIGN}" name="ASSIGN"/>
         </sequence>
         <action first="{LBRACE}">
          <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
     <token first="{RBRACE}" name="RBRACE"/>
    </sequence>
   </group>
  </rule>
  <rule first="{#, DOLLAR}" name="Action">
   <action first="{#, DOLLAR}">
    <group first="{#, DOLLAR}">
     <choice first="{#, DOLLAR}">
      <sequence first="{DOLLAR}">
       <sequence first="{DOLLAR}">
        <sequence first="{DOLLAR}">
         <token first="{DOLLAR}" name="DOLLAR"/>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <action first="{INTEGER_LITERAL}">
         <token first="{INTEGER_LITERAL}" name="INTEGER_LITERAL"/>
        </action>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <action first="{#}">
       <empty first="{#}"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="RulesKeyword">
   <action first="{ID}">
    <token first="{ID}" name="ID"/>
   </action>
  </rule>
  <rule first="{ID}" name="VariablesKeyword">
   <action first="{ID}">
    <token first="{ID}" name="ID"/>
   </action>
  </rule>
  <rule first="{ID}" name="ActionsKeyword">
   <action first="{ID}">
    <token first="{ID}" name="ID"/>
   </action>
  </rule>
  <rule first="{ID}" name="OpaqueKeyword">
   <action first="{ID}">
    <token first="{ID}" name="ID"/>
   </action>
  </rule>
 </grammar>
</parserFile>
