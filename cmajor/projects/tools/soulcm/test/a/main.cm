using System;

int main()
{
    string a = "a";
    auto utf32Result = ToUtf32(a);
    if (utf32Result.Error())
    {
        Console.Error() << utf32Result.GetErrorMessage() << endl();
        return 1;
    }
    const ustring& content = utf32Result.Value();
    uchar* begin = content.Chars();
    uchar* end = content.Chars() + content.Length();
    ALexer lexer(begin, end, "a");
    auto incResult = ++lexer;
    if (incResult.Error())
    {
        Console.Error() << incResult.GetErrorMessage() << endl();
        return 1;
    }
    while (*lexer != System.Lex.END_TOKEN)
    {
        if (*lexer == System.Lex.INVALID_TOKEN)
        {
            Console.Error() << "invalid token" << endl();
            return 1;
        }
        long pos = lexer.GetPos();
        System.Lex.Token token = lexer.GetToken(pos);
        incResult = ++lexer;
        if (incResult.Error())
        {
            Console.Error() << incResult.GetErrorMessage() << endl();
            return 1;
        }
        Console.Out() << token.ToString() << endl();
    }
    return 0;
}
