<parserFile>
 <grammar name="cm.parser.ExpressionParser">
  <rule first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Expression">
   <group first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Equivalence"/>
    </action>
   </group>
  </rule>
  <rule first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Equivalence">
   <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Implication"/>
      </action>
      <kleene first="{#, EQUIVALENCE}">
       <group first="{EQUIVALENCE}">
        <sequence first="{EQUIVALENCE}">
         <action first="{EQUIVALENCE}">
          <token first="{EQUIVALENCE}" name="EQUIVALENCE"/>
         </action>
         <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Implication"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Implication">
   <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Disjunction"/>
      </action>
      <optional first="{#, IMPLICATION}">
       <group first="{IMPLICATION}">
        <sequence first="{IMPLICATION}">
         <action first="{IMPLICATION}">
          <token first="{IMPLICATION}" name="IMPLICATION"/>
         </action>
         <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Implication"/>
         </action>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Disjunction">
   <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Conjunction"/>
      </action>
      <kleene first="{#, DISJUNCTION}">
       <group first="{DISJUNCTION}">
        <sequence first="{DISJUNCTION}">
         <action first="{DISJUNCTION}">
          <token first="{DISJUNCTION}" name="DISJUNCTION"/>
         </action>
         <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Conjunction"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Conjunction">
   <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="BitOr"/>
      </action>
      <kleene first="{#, AMP_AMP}">
       <group first="{AMP_AMP}">
        <sequence first="{AMP_AMP}">
         <action first="{AMP_AMP}">
          <token first="{AMP_AMP}" name="AMP_AMP"/>
         </action>
         <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="BitOr"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="BitOr">
   <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="BitXor"/>
      </action>
      <kleene first="{#, PIPE}">
       <group first="{PIPE}">
        <sequence first="{PIPE}">
         <action first="{PIPE}">
          <token first="{PIPE}" name="PIPE"/>
         </action>
         <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="BitXor"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="BitXor">
   <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="BitAnd"/>
      </action>
      <kleene first="{#, CARET}">
       <group first="{CARET}">
        <sequence first="{CARET}">
         <action first="{CARET}">
          <token first="{CARET}" name="CARET"/>
         </action>
         <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="BitAnd"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="BitAnd">
   <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Equality"/>
      </action>
      <kleene first="{#, AMP}">
       <group first="{AMP}">
        <sequence first="{AMP}">
         <action first="{AMP}">
          <token first="{AMP}" name="AMP"/>
         </action>
         <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Equality"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Equality">
   <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Relational"/>
      </action>
      <kleene first="{#, EQ, NEQ}">
       <group first="{EQ, NEQ}">
        <sequence first="{EQ, NEQ}">
         <action first="{EQ, NEQ}">
          <nonterminal first="{EQ, NEQ}" ruleName="EqualityOp"/>
         </action>
         <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Relational"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{EQ, NEQ}" name="EqualityOp">
   <switch first="{EQ, NEQ}">
    <case first="{EQ}">
     <action first="{EQ}">
      <token first="{EQ}" name="EQ"/>
     </action>
    </case>
    <case first="{NEQ}">
     <action first="{NEQ}">
      <token first="{NEQ}" name="NEQ"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Relational">
   <action first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Shift"/>
      </action>
      <kleene first="{#, AS, GEQ, IS, LANGLE, LEQ, RANGLE}">
       <group first="{AS, GEQ, IS, LANGLE, LEQ, RANGLE}">
        <sequence first="{AS, GEQ, IS, LANGLE, LEQ, RANGLE}">
         <group first="{AS, GEQ, IS, LANGLE, LEQ, RANGLE}">
          <switch first="{AS, GEQ, IS, LANGLE, LEQ, RANGLE}">
           <case first="{GEQ, LANGLE, LEQ, RANGLE}">
            <action first="{GEQ, LANGLE, LEQ, RANGLE}">
             <nonterminal first="{GEQ, LANGLE, LEQ, RANGLE}" ruleName="RelationalOp"/>
            </action>
           </case>
           <case first="{IS}">
            <sequence first="{IS}">
             <action first="{IS}">
              <token first="{IS}" name="IS"/>
             </action>
             <nonterminal first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
            </sequence>
           </case>
           <case first="{AS}">
            <sequence first="{AS}">
             <action first="{AS}">
              <token first="{AS}" name="AS"/>
             </action>
             <nonterminal first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
            </sequence>
           </case>
          </switch>
         </group>
         <action first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <group first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
           <choice first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
            <nonterminal first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Shift"/>
            <action first="{#}">
             <empty first="{#}"/>
            </action>
           </choice>
          </group>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{GEQ, LANGLE, LEQ, RANGLE}" name="RelationalOp">
   <switch first="{GEQ, LANGLE, LEQ, RANGLE}">
    <case first="{LEQ}">
     <action first="{LEQ}">
      <token first="{LEQ}" name="LEQ"/>
     </action>
    </case>
    <case first="{GEQ}">
     <action first="{GEQ}">
      <token first="{GEQ}" name="GEQ"/>
     </action>
    </case>
    <case first="{LANGLE}">
     <action first="{LANGLE}">
      <token first="{LANGLE}" name="LANGLE"/>
     </action>
    </case>
    <case first="{RANGLE}">
     <action first="{RANGLE}">
      <token first="{RANGLE}" name="RANGLE"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Shift">
   <action first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Additive"/>
      </action>
      <kleene first="{#, SHIFT_LEFT, SHIFT_RIGHT}">
       <group first="{SHIFT_LEFT, SHIFT_RIGHT}">
        <sequence first="{SHIFT_LEFT, SHIFT_RIGHT}">
         <sequence first="{SHIFT_LEFT, SHIFT_RIGHT}">
          <action first="{SHIFT_LEFT, SHIFT_RIGHT}">
           <nonterminal first="{SHIFT_LEFT, SHIFT_RIGHT}" ruleName="ShiftOp"/>
          </action>
          <action first="{#}">
           <empty first="{#}"/>
          </action>
         </sequence>
         <action first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Additive"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SHIFT_LEFT, SHIFT_RIGHT}" name="ShiftOp">
   <switch first="{SHIFT_LEFT, SHIFT_RIGHT}">
    <case first="{SHIFT_LEFT}">
     <action first="{SHIFT_LEFT}">
      <token first="{SHIFT_LEFT}" name="SHIFT_LEFT"/>
     </action>
    </case>
    <case first="{SHIFT_RIGHT}">
     <action first="{SHIFT_RIGHT}">
      <token first="{SHIFT_RIGHT}" name="SHIFT_RIGHT"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Additive">
   <action first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Multiplicative"/>
      </action>
      <kleene first="{#, MINUS, PLUS}">
       <group first="{MINUS, PLUS}">
        <sequence first="{MINUS, PLUS}">
         <action first="{MINUS, PLUS}">
          <nonterminal first="{MINUS, PLUS}" ruleName="AdditiveOp"/>
         </action>
         <action first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Multiplicative"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{MINUS, PLUS}" name="AdditiveOp">
   <switch first="{MINUS, PLUS}">
    <case first="{PLUS}">
     <action first="{PLUS}">
      <token first="{PLUS}" name="PLUS"/>
     </action>
    </case>
    <case first="{MINUS}">
     <action first="{MINUS}">
      <token first="{MINUS}" name="MINUS"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Multiplicative">
   <action first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DIV, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, REM, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Prefix"/>
      </action>
      <kleene first="{#, DIV, REM, STAR}">
       <group first="{DIV, REM, STAR}">
        <sequence first="{DIV, REM, STAR}">
         <action first="{DIV, REM, STAR}">
          <nonterminal first="{DIV, REM, STAR}" ruleName="MultiplicativeOp"/>
         </action>
         <action first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Prefix"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DIV, REM, STAR}" name="MultiplicativeOp">
   <switch first="{DIV, REM, STAR}">
    <case first="{STAR}">
     <action first="{STAR}">
      <token first="{STAR}" name="STAR"/>
     </action>
    </case>
    <case first="{DIV}">
     <action first="{DIV}">
      <token first="{DIV}" name="DIV"/>
     </action>
    </case>
    <case first="{REM}">
     <action first="{REM}">
      <token first="{REM}" name="REM"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Prefix">
   <choice first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{AMP, EXCLAMATION, MINUS, MINUS_MINUS, PLUS, PLUS_PLUS, STAR, TILDE}">
     <sequence first="{AMP, EXCLAMATION, MINUS, MINUS_MINUS, PLUS, PLUS_PLUS, STAR, TILDE}">
      <action first="{AMP, EXCLAMATION, MINUS, MINUS_MINUS, PLUS, PLUS_PLUS, STAR, TILDE}">
       <nonterminal first="{AMP, EXCLAMATION, MINUS, MINUS_MINUS, PLUS, PLUS_PLUS, STAR, TILDE}" ruleName="PrefixOp"/>
      </action>
      <action first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AMP, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULL_LITERAL, PLUS, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Prefix"/>
      </action>
     </sequence>
    </group>
    <action first="{#, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS_MINUS, NEW, NULL_LITERAL, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <nonterminal first="{#, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS_MINUS, NEW, NULL_LITERAL, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Postfix"/>
    </action>
   </choice>
  </rule>
  <rule first="{AMP, EXCLAMATION, MINUS, MINUS_MINUS, PLUS, PLUS_PLUS, STAR, TILDE}" name="PrefixOp">
   <switch first="{AMP, EXCLAMATION, MINUS, MINUS_MINUS, PLUS, PLUS_PLUS, STAR, TILDE}">
    <case first="{PLUS_PLUS}">
     <action first="{PLUS_PLUS}">
      <token first="{PLUS_PLUS}" name="PLUS_PLUS"/>
     </action>
    </case>
    <case first="{MINUS_MINUS}">
     <action first="{MINUS_MINUS}">
      <token first="{MINUS_MINUS}" name="MINUS_MINUS"/>
     </action>
    </case>
    <case first="{PLUS}">
     <action first="{PLUS}">
      <token first="{PLUS}" name="PLUS"/>
     </action>
    </case>
    <case first="{MINUS}">
     <action first="{MINUS}">
      <token first="{MINUS}" name="MINUS"/>
     </action>
    </case>
    <case first="{EXCLAMATION}">
     <action first="{EXCLAMATION}">
      <token first="{EXCLAMATION}" name="EXCLAMATION"/>
     </action>
    </case>
    <case first="{TILDE}">
     <action first="{TILDE}">
      <token first="{TILDE}" name="TILDE"/>
     </action>
    </case>
    <case first="{STAR}">
     <action first="{STAR}">
      <token first="{STAR}" name="STAR"/>
     </action>
    </case>
    <case first="{AMP}">
     <action first="{AMP}">
      <token first="{AMP}" name="AMP"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS_MINUS, NEW, NULL_LITERAL, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Postfix">
   <action first="{#, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS_MINUS, NEW, NULL_LITERAL, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <group first="{#, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS_MINUS, NEW, NULL_LITERAL, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <sequence first="{#, ARROW, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOT, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, MINUS_MINUS, NEW, NULL_LITERAL, PLUS_PLUS, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <action first="{#, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NULL_LITERAL, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <nonterminal first="{#, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NULL_LITERAL, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Primary"/>
      </action>
      <kleene first="{#, ARROW, DOT, LBRACKET, LPAREN, MINUS_MINUS, PLUS_PLUS}">
       <group first="{ARROW, DOT, LBRACKET, LPAREN, MINUS_MINUS, PLUS_PLUS}">
        <switch first="{ARROW, DOT, LBRACKET, LPAREN, MINUS_MINUS, PLUS_PLUS}">
         <case first="{PLUS_PLUS}">
          <action first="{PLUS_PLUS}">
           <token first="{PLUS_PLUS}" name="PLUS_PLUS"/>
          </action>
         </case>
         <case first="{MINUS_MINUS}">
          <action first="{MINUS_MINUS}">
           <token first="{MINUS_MINUS}" name="MINUS_MINUS"/>
          </action>
         </case>
         <case first="{DOT}">
          <sequence first="{DOT}">
           <token first="{DOT}" name="DOT"/>
           <action first="{ID}">
            <nonterminal first="{ID}" ruleName="Identifier"/>
           </action>
          </sequence>
         </case>
         <case first="{ARROW}">
          <sequence first="{ARROW}">
           <token first="{ARROW}" name="ARROW"/>
           <action first="{ID}">
            <nonterminal first="{ID}" ruleName="Identifier"/>
           </action>
          </sequence>
         </case>
         <case first="{LBRACKET}">
          <sequence first="{LBRACKET}">
           <sequence first="{LBRACKET}">
            <action first="{LBRACKET}">
             <token first="{LBRACKET}" name="LBRACKET"/>
            </action>
            <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
             <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
            </action>
           </sequence>
           <action first="{RBRACKET}">
            <token first="{RBRACKET}" name="RBRACKET"/>
           </action>
          </sequence>
         </case>
         <case first="{LPAREN}">
          <sequence first="{LPAREN}">
           <sequence first="{LPAREN}">
            <action first="{LPAREN}">
             <token first="{LPAREN}" name="LPAREN"/>
            </action>
            <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ArgumentList"/>
           </sequence>
           <token first="{RPAREN}" name="RPAREN"/>
          </sequence>
         </case>
        </switch>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NULL_LITERAL, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="Primary">
   <group first="{#, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NULL_LITERAL, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <choice first="{#, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NEW, NULL_LITERAL, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <choice first="{#, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NULL_LITERAL, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <choice first="{#, AUTO, BASE, BOOL, BYTE, CAST, CHAR, CHAR_LITERAL, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NULL_LITERAL, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <choice first="{#, AUTO, BASE, BOOL, BYTE, CHAR, CHAR_LITERAL, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NULL_LITERAL, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <choice first="{#, AUTO, BASE, BOOL, BYTE, CHAR, CHAR_LITERAL, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NULL_LITERAL, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
         <choice first="{#, AUTO, BASE, BOOL, BYTE, CHAR, CHAR_LITERAL, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NULL_LITERAL, SBYTE, SHORT, SIZEOF, STRING_LITERAL, THIS, TRUE, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <choice first="{#, AUTO, BASE, BOOL, BYTE, CHAR, CHAR_LITERAL, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NULL_LITERAL, SBYTE, SHORT, STRING_LITERAL, THIS, TRUE, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
           <choice first="{#, AUTO, BOOL, BYTE, CHAR, CHAR_LITERAL, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NULL_LITERAL, SBYTE, SHORT, STRING_LITERAL, THIS, TRUE, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
            <choice first="{#, AUTO, BOOL, BYTE, CHAR, CHAR_LITERAL, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NULL_LITERAL, SBYTE, SHORT, STRING_LITERAL, TRUE, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
             <choice first="{#, AUTO, BOOL, BYTE, CHAR, CHAR_LITERAL, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NULL_LITERAL, SBYTE, SHORT, STRING_LITERAL, TRUE, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
              <switch first="{AUTO, BOOL, BYTE, CHAR, CHAR_LITERAL, DOUBLE, FALSE, FLOAT, FLOATING_LITERAL, INT, INTEGER_LITERAL, LBRACE, LBRACKET, LONG, LPAREN, NULL_LITERAL, SBYTE, SHORT, STRING_LITERAL, TRUE, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
               <case first="{LPAREN}">
                <sequence first="{LPAREN}">
                 <sequence first="{LPAREN}">
                  <action first="{LPAREN}">
                   <token first="{LPAREN}" name="LPAREN"/>
                  </action>
                  <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
                 </sequence>
                 <action first="{RPAREN}">
                  <token first="{RPAREN}" name="RPAREN"/>
                 </action>
                </sequence>
               </case>
               <case first="{CHAR_LITERAL, FALSE, FLOATING_LITERAL, INTEGER_LITERAL, LBRACE, LBRACKET, NULL_LITERAL, STRING_LITERAL, TRUE}">
                <action first="{CHAR_LITERAL, FALSE, FLOATING_LITERAL, INTEGER_LITERAL, LBRACE, LBRACKET, NULL_LITERAL, STRING_LITERAL, TRUE}">
                 <nonterminal first="{CHAR_LITERAL, FALSE, FLOATING_LITERAL, INTEGER_LITERAL, LBRACE, LBRACKET, NULL_LITERAL, STRING_LITERAL, TRUE}" ruleName="Literal"/>
                </action>
               </case>
               <case first="{AUTO, BOOL, BYTE, CHAR, DOUBLE, FLOAT, INT, LONG, SBYTE, SHORT, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
                <action first="{AUTO, BOOL, BYTE, CHAR, DOUBLE, FLOAT, INT, LONG, SBYTE, SHORT, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
                 <nonterminal first="{AUTO, BOOL, BYTE, CHAR, DOUBLE, FLOAT, INT, LONG, SBYTE, SHORT, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="FundamentalType"/>
                </action>
               </case>
              </switch>
              <action first="{#, ID}">
               <nonterminal first="{#, ID}" ruleName="TemplateId"/>
              </action>
             </choice>
             <action first="{ID}">
              <nonterminal first="{ID}" ruleName="Identifier"/>
             </action>
            </choice>
            <action first="{THIS}">
             <token first="{THIS}" name="THIS"/>
            </action>
           </choice>
           <action first="{BASE}">
            <token first="{BASE}" name="BASE"/>
           </action>
          </choice>
          <action first="{SIZEOF}">
           <nonterminal first="{SIZEOF}" ruleName="SizeOfExpr"/>
          </action>
         </choice>
         <action first="{TYPENAME}">
          <nonterminal first="{TYPENAME}" ruleName="TypeNameExpr"/>
         </action>
        </choice>
        <action first="{TYPEID}">
         <nonterminal first="{TYPEID}" ruleName="TypeIdExpr"/>
        </action>
       </choice>
       <action first="{CAST}">
        <nonterminal first="{CAST}" ruleName="CastExpr"/>
       </action>
      </choice>
      <action first="{CONSTRUCT}">
       <nonterminal first="{CONSTRUCT}" ruleName="ConstructExpr"/>
      </action>
     </choice>
     <action first="{NEW}">
      <nonterminal first="{NEW}" ruleName="NewExpr"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="ArgumentList">
   <optional first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ExpressionList"/>
   </optional>
  </rule>
  <rule first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" name="ExpressionList">
   <group first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
    <sequence first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
     <action first="{#}">
      <empty first="{#}"/>
     </action>
     <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
      <group first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
       <list first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <sequence first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
         <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
          <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
         </action>
         <kleene first="{#, COMMA}">
          <sequence first="{COMMA}">
           <token first="{COMMA}" name="COMMA"/>
           <action first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
            <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
           </action>
          </sequence>
         </kleene>
        </sequence>
       </list>
      </group>
     </action>
    </sequence>
   </group>
  </rule>
  <rule first="{SIZEOF}" name="SizeOfExpr">
   <action first="{SIZEOF}">
    <group first="{SIZEOF}">
     <sequence first="{SIZEOF}">
      <sequence first="{SIZEOF}">
       <sequence first="{SIZEOF}">
        <action first="{SIZEOF}">
         <token first="{SIZEOF}" name="SIZEOF"/>
        </action>
        <token first="{LPAREN}" name="LPAREN"/>
       </sequence>
       <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
      </sequence>
      <token first="{RPAREN}" name="RPAREN"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{TYPENAME}" name="TypeNameExpr">
   <action first="{TYPENAME}">
    <group first="{TYPENAME}">
     <sequence first="{TYPENAME}">
      <sequence first="{TYPENAME}">
       <sequence first="{TYPENAME}">
        <action first="{TYPENAME}">
         <token first="{TYPENAME}" name="TYPENAME"/>
        </action>
        <token first="{LPAREN}" name="LPAREN"/>
       </sequence>
       <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
      </sequence>
      <token first="{RPAREN}" name="RPAREN"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{TYPEID}" name="TypeIdExpr">
   <action first="{TYPEID}">
    <group first="{TYPEID}">
     <sequence first="{TYPEID}">
      <sequence first="{TYPEID}">
       <sequence first="{TYPEID}">
        <action first="{TYPEID}">
         <token first="{TYPEID}" name="TYPEID"/>
        </action>
        <token first="{LPAREN}" name="LPAREN"/>
       </sequence>
       <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
      </sequence>
      <token first="{RPAREN}" name="RPAREN"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CAST}" name="CastExpr">
   <action first="{CAST}">
    <group first="{CAST}">
     <sequence first="{CAST}">
      <sequence first="{CAST}">
       <sequence first="{CAST}">
        <sequence first="{CAST}">
         <sequence first="{CAST}">
          <sequence first="{CAST}">
           <action first="{CAST}">
            <token first="{CAST}" name="CAST"/>
           </action>
           <token first="{LANGLE}" name="LANGLE"/>
          </sequence>
          <nonterminal first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
         </sequence>
         <token first="{RANGLE}" name="RANGLE"/>
        </sequence>
        <token first="{LPAREN}" name="LPAREN"/>
       </sequence>
       <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="Expression"/>
      </sequence>
      <token first="{RPAREN}" name="RPAREN"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CONSTRUCT}" name="ConstructExpr">
   <action first="{CONSTRUCT}">
    <group first="{CONSTRUCT}">
     <sequence first="{CONSTRUCT}">
      <sequence first="{CONSTRUCT}">
       <sequence first="{CONSTRUCT}">
        <sequence first="{CONSTRUCT}">
         <action first="{CONSTRUCT}">
          <token first="{CONSTRUCT}" name="CONSTRUCT"/>
         </action>
         <action first="{LANGLE}">
          <group first="{LANGLE}">
           <sequence first="{LANGLE}">
            <sequence first="{LANGLE}">
             <token first="{LANGLE}" name="LANGLE"/>
             <nonterminal first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
            </sequence>
            <token first="{RANGLE}" name="RANGLE"/>
           </sequence>
          </group>
         </action>
        </sequence>
        <token first="{LPAREN}" name="LPAREN"/>
       </sequence>
       <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ExpressionList"/>
      </sequence>
      <token first="{RPAREN}" name="RPAREN"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{NEW}" name="NewExpr">
   <action first="{NEW}">
    <group first="{NEW}">
     <sequence first="{NEW}">
      <sequence first="{NEW}">
       <action first="{NEW}">
        <token first="{NEW}" name="NEW"/>
       </action>
       <action first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}">
        <nonterminal first="{#, AMP, AMP_AMP, AUTO, BOOL, BYTE, CHAR, CONST, DOT, DOUBLE, FLOAT, ID, INT, LBRACKET, LONG, SBYTE, SHORT, STAR, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="TypeExpr"/>
       </action>
      </sequence>
      <optional first="{#, LPAREN}">
       <group first="{LPAREN}">
        <sequence first="{LPAREN}">
         <sequence first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
          <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ArgumentList"/>
         </sequence>
         <token first="{RPAREN}" name="RPAREN"/>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, DOT, ID, LPAREN}" name="InvokeExpr">
   <sequence first="{#, DOT, ID, LPAREN}">
    <sequence first="{#, DOT, ID}">
     <group first="{#, ID}">
      <choice first="{#, ID}">
       <action first="{#, ID}">
        <nonterminal first="{#, ID}" ruleName="TemplateId"/>
       </action>
       <action first="{ID}">
        <nonterminal first="{ID}" ruleName="Identifier"/>
       </action>
      </choice>
     </group>
     <kleene first="{#, DOT}">
      <group first="{DOT}">
       <sequence first="{DOT}">
        <token first="{DOT}" name="DOT"/>
        <action first="{ID}">
         <nonterminal first="{ID}" ruleName="Identifier"/>
        </action>
       </sequence>
      </group>
     </kleene>
    </sequence>
    <action first="{LPAREN}">
     <group first="{LPAREN}">
      <sequence first="{LPAREN}">
       <sequence first="{LPAREN}">
        <action first="{LPAREN}">
         <token first="{LPAREN}" name="LPAREN"/>
        </action>
        <nonterminal first="{#, AMP, AMP_AMP, ARROW, AS, AUTO, BASE, BOOL, BYTE, CARET, CAST, CHAR, CHAR_LITERAL, COMMA, CONSTRUCT, DISJUNCTION, DIV, DOT, DOUBLE, EQ, EQUIVALENCE, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, IMPLICATION, INT, INTEGER_LITERAL, IS, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULL_LITERAL, PIPE, PLUS, PLUS_PLUS, RANGLE, REM, SBYTE, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIZEOF, STAR, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, TYPENAME, UCHAR, UINT, ULONG, USHORT, VOID, WCHAR}" ruleName="ArgumentList"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
 </grammar>
</parserFile>
