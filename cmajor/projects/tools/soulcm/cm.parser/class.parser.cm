// this file has been generated from 'C:/work/cmajor-mod/cmajor/projects/tools/soulcm/cm.parser/class.parser' using SoulCm parser generator scmpg version 5.0.0

using System;
using System.Lex;
using System.Parsing;
using cm.ast;
using cm.token;

namespace cm.parser
{
    public static class ClassParser<LexerT>
    {
        public static System.Result<System.Parsing.Match> Class(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Class");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6062887121931206657);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.ClassNode> classNode = UniquePtr<cm.ast.ClassNode>();
            System.UniquePtr<cm.ast.AttributesNode> attrs;
            System.UniquePtr<System.Parsing.Value<cm.ast.Specifiers>> specifiers;
            System.UniquePtr<cm.ast.IdentifierNode> id;
            System.UniquePtr<cm.ast.WhereConstraintNode> constraint;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        System.Parsing.Match match(true);
                                                        long save = lexer.GetPos();
                                                        System.Parsing.Match* parentMatch11 = &match;
                                                        {
                                                            System.Result<System.Parsing.Match> matchResult = cm.parser.AttributeParser<LexerT>.Attributes(lexer, context);
                                                            if (matchResult.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                            }
                                                            System.Parsing.Match match = matchResult.Value();
                                                            attrs.Reset(cast<cm.ast.AttributesNode*>(match.value));
                                                            if (match.hit)
                                                            {
                                                                *parentMatch11 = match;
                                                            }
                                                            else
                                                            {
                                                                lexer.SetPos(save);
                                                            }
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch12 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch13 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch14 = &match;
                                                                long save = lexer.GetPos();
                                                                {
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.SpecifierParser<LexerT>.Specifiers(lexer);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    specifiers.Reset(cast<System.Parsing.Value<cm.ast.Specifiers>*>(match.value));
                                                                    *parentMatch14 = match;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch15 = &match;
                                                                    {
                                                                        long tmp = lexer.GetPos();
                                                                        lexer.SetPos(save);
                                                                        save = tmp;
                                                                        System.Parsing.Match match(false);
                                                                        if (*lexer == NEW)
                                                                        {
                                                                            auto incResult0 = ++lexer;
                                                                            if (incResult0.Error())
                                                                            {
                                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                                            }
                                                                            match.hit = true;
                                                                        }
                                                                        *parentMatch15 = match;
                                                                    }
                                                                    if (!match.hit)
                                                                    {
                                                                        lexer.SetPos(save);
                                                                    }
                                                                    *parentMatch14 = System.Parsing.Match(!match.hit, match.value);
                                                                }
                                                                *parentMatch13 = match;
                                                            }
                                                            *parentMatch12 = match;
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch16 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == CLASS)
                                                        {
                                                            auto incResult1 = ++lexer;
                                                            if (incResult1.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch16 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch17 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch18 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            span = lexer.GetSpan(pos);
                                                            classNode.Reset(new cm.ast.ClassNode(span, lexer.FileIndex(), specifiers->value, id.Release(), attrs.Release()));
                                                        }
                                                        *parentMatch18 = match;
                                                    }
                                                    *parentMatch17 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch19 = &match;
                                            {
                                                System.Parsing.Match match(true);
                                                long save = lexer.GetPos();
                                                System.Parsing.Match* parentMatch20 = &match;
                                                {
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.TemplateParser<LexerT>.TemplateParameterList(lexer, context, classNode.Get());
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    if (match.hit)
                                                    {
                                                        *parentMatch20 = match;
                                                    }
                                                    else
                                                    {
                                                        lexer.SetPos(save);
                                                    }
                                                }
                                                *parentMatch19 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch21 = &match;
                                        {
                                            System.Parsing.Match match(true);
                                            long save = lexer.GetPos();
                                            System.Parsing.Match* parentMatch22 = &match;
                                            {
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.InheritanceAndInterfaces(lexer, context, classNode.Get());
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                if (match.hit)
                                                {
                                                    *parentMatch22 = match;
                                                }
                                                else
                                                {
                                                    lexer.SetPos(save);
                                                }
                                            }
                                            *parentMatch21 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch23 = &match;
                                    {
                                        System.Parsing.Match match(true);
                                        long save = lexer.GetPos();
                                        System.Parsing.Match* parentMatch24 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch25 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch26 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ConceptParser<LexerT>.WhereConstraint(lexer, context);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    constraint.Reset(cast<cm.ast.WhereConstraintNode*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        classNode->SetConstraint(constraint.Release());
                                                    }
                                                    *parentMatch26 = match;
                                                }
                                                *parentMatch25 = match;
                                            }
                                            if (match.hit)
                                            {
                                                *parentMatch24 = match;
                                            }
                                            else
                                            {
                                                lexer.SetPos(save);
                                            }
                                        }
                                        *parentMatch23 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch27 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == LBRACE)
                                    {
                                        auto incResult2 = ++lexer;
                                        if (incResult2.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch27 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch28 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.ClassContent(lexer, context, classNode.Get());
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                *parentMatch28 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch29 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RBRACE)
                            {
                                auto incResult3 = ++lexer;
                                if (incResult3.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch29 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Class");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, classNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Class");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Class");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> InheritanceAndInterfaces(LexerT& lexer, cm.parser.Context* context, cm.ast.ClassNode* classNode)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"InheritanceAndInterfaces");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6062887121931206658);
            System.UniquePtr<cm.ast.Node> baseOrInterface;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    if (*lexer == COLON)
                    {
                        auto incResult0 = ++lexer;
                        if (incResult0.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                        }
                        match.hit = true;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Parsing.Match match(true);
                                        if (match.hit)
                                        {
                                            context->BeginParsingTypeExpr();
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.BaseClassOrInterface(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            baseOrInterface.Reset(cast<cm.ast.Node*>(match.value));
                                            if (match.hit)
                                            {
                                                classNode->AddBaseClassOrInterface(baseOrInterface.Release());
                                                context->EndParsingTypeExpr();
                                            }
                                            else
                                            {
                                                context->EndParsingTypeExpr();
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch9 = &match;
                            {
                                System.Parsing.Match match(true);
                                System.Parsing.Match* parentMatch10 = &match;
                                {
                                    while (true)
                                    {
                                        long save = lexer.GetPos();
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch11 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                if (*lexer == COMMA)
                                                {
                                                    auto incResult1 = ++lexer;
                                                    if (incResult1.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                *parentMatch11 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch12 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch13 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch14 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch15 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Parsing.Match match(true);
                                                                if (match.hit)
                                                                {
                                                                    context->BeginParsingTypeExpr();
                                                                }
                                                                *parentMatch15 = match;
                                                            }
                                                            *parentMatch14 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch16 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch17 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.BaseClassOrInterface(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    baseOrInterface.Reset(cast<cm.ast.Node*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        classNode->AddBaseClassOrInterface(baseOrInterface.Release());
                                                                        context->EndParsingTypeExpr();
                                                                    }
                                                                    else
                                                                    {
                                                                        context->EndParsingTypeExpr();
                                                                    }
                                                                    *parentMatch17 = match;
                                                                }
                                                                *parentMatch16 = match;
                                                            }
                                                            *parentMatch14 = match;
                                                        }
                                                        *parentMatch13 = match;
                                                    }
                                                    *parentMatch12 = match;
                                                }
                                                *parentMatch11 = match;
                                            }
                                            if (match.hit)
                                            {
                                                *parentMatch10 = match;
                                            }
                                            else
                                            {
                                                lexer.SetPos(save);
                                                break;
                                            }
                                        }
                                    }
                                }
                                *parentMatch9 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"InheritanceAndInterfaces");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"InheritanceAndInterfaces");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> BaseClassOrInterface(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"BaseClassOrInterface");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6062887121931206659);
            System.UniquePtr<cm.ast.TemplateIdNode> templateId;
            System.UniquePtr<cm.ast.IdentifierNode> qualifiedId;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long save = lexer.GetPos();
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = cm.parser.TemplateParser<LexerT>.TemplateId(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        templateId.Reset(cast<cm.ast.TemplateIdNode*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BaseClassOrInterface");
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, templateId.Release()));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                    if (!match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        lexer.SetPos(save);
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.QualifiedId(lexer);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                qualifiedId.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BaseClassOrInterface");
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, qualifiedId.Release()));
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch1 = match;
                    }
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BaseClassOrInterface");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"BaseClassOrInterface");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ClassContent(LexerT& lexer, cm.parser.Context* context, cm.ast.ClassNode* classNode)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ClassContent");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6062887121931206660);
            System.UniquePtr<cm.ast.Node> classMember;
            System.Parsing.Match match(true);
            System.Parsing.Match* parentMatch0 = &match;
            {
                while (true)
                {
                    long save = lexer.GetPos();
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch1 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch2 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.ClassMember(lexer, context, classNode);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                classMember.Reset(cast<cm.ast.Node*>(match.value));
                                if (match.hit)
                                {
                                    classNode->AddMember(classMember.Release());
                                }
                                *parentMatch2 = match;
                            }
                            *parentMatch1 = match;
                        }
                        if (match.hit)
                        {
                            *parentMatch0 = match;
                        }
                        else
                        {
                            lexer.SetPos(save);
                            break;
                        }
                    }
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassContent");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ClassContent");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ClassMember(LexerT& lexer, cm.parser.Context* context, cm.ast.ClassNode* classNode)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ClassMember");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6062887121931206661);
            System.UniquePtr<cm.ast.StaticConstructorNode> staticConstructor;
            System.UniquePtr<cm.ast.ConstructorNode> constructor;
            System.UniquePtr<cm.ast.DestructorNode> destructor;
            System.UniquePtr<cm.ast.MemberFunctionNode> memberFunction;
            System.UniquePtr<cm.ast.ConversionFunctionNode> conversionFunction;
            System.UniquePtr<cm.ast.MemberVariableNode> memberVariable;
            System.UniquePtr<cm.ast.Node> usingAlias;
            System.UniquePtr<cm.ast.Node> typedefinition;
            System.UniquePtr<cm.ast.ClassNode> cls;
            System.UniquePtr<cm.ast.EnumTypeNode> enumType;
            System.UniquePtr<cm.ast.ConstantNode> constant;
            System.UniquePtr<cm.ast.DelegateNode> dlg;
            System.UniquePtr<cm.ast.ClassDelegateNode> classDelegate;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long save = lexer.GetPos();
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long save = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long save = lexer.GetPos();
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long save = lexer.GetPos();
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long save = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long save = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            long save = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                long save = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    long save = lexer.GetPos();
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long save = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch11 = &match;
                                                        {
                                                            long save = lexer.GetPos();
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch12 = &match;
                                                            {
                                                                long save = lexer.GetPos();
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch13 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.StaticConstructor(lexer, context, classNode);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    staticConstructor.Reset(cast<cm.ast.StaticConstructorNode*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        #if (DEBUG)
                                                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                                                        #endif
                                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, staticConstructor.Release()));
                                                                    }
                                                                    *parentMatch13 = match;
                                                                }
                                                                *parentMatch12 = match;
                                                                if (!match.hit)
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch14 = &match;
                                                                    lexer.SetPos(save);
                                                                    {
                                                                        System.Parsing.Match match(false);
                                                                        System.Parsing.Match* parentMatch15 = &match;
                                                                        {
                                                                            long pos = lexer.GetPos();
                                                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.Constructor(lexer, context, classNode);
                                                                            if (matchResult.Error())
                                                                            {
                                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                            }
                                                                            System.Parsing.Match match = matchResult.Value();
                                                                            constructor.Reset(cast<cm.ast.ConstructorNode*>(match.value));
                                                                            if (match.hit)
                                                                            {
                                                                                #if (DEBUG)
                                                                                    if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                                                                #endif
                                                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, constructor.Release()));
                                                                            }
                                                                            *parentMatch15 = match;
                                                                        }
                                                                        *parentMatch14 = match;
                                                                    }
                                                                    *parentMatch12 = match;
                                                                }
                                                            }
                                                            *parentMatch11 = match;
                                                            if (!match.hit)
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch16 = &match;
                                                                lexer.SetPos(save);
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch17 = &match;
                                                                    {
                                                                        long pos = lexer.GetPos();
                                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.Destructor(lexer, context, classNode);
                                                                        if (matchResult.Error())
                                                                        {
                                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                        }
                                                                        System.Parsing.Match match = matchResult.Value();
                                                                        destructor.Reset(cast<cm.ast.DestructorNode*>(match.value));
                                                                        if (match.hit)
                                                                        {
                                                                            #if (DEBUG)
                                                                                if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                                                            #endif
                                                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, destructor.Release()));
                                                                        }
                                                                        *parentMatch17 = match;
                                                                    }
                                                                    *parentMatch16 = match;
                                                                }
                                                                *parentMatch11 = match;
                                                            }
                                                        }
                                                        *parentMatch10 = match;
                                                        if (!match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch18 = &match;
                                                            lexer.SetPos(save);
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch19 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.MemberFunction(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    memberFunction.Reset(cast<cm.ast.MemberFunctionNode*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        #if (DEBUG)
                                                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                                                        #endif
                                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, memberFunction.Release()));
                                                                    }
                                                                    *parentMatch19 = match;
                                                                }
                                                                *parentMatch18 = match;
                                                            }
                                                            *parentMatch10 = match;
                                                        }
                                                    }
                                                    *parentMatch9 = match;
                                                    if (!match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch20 = &match;
                                                        lexer.SetPos(save);
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch21 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.ConversionFunction(lexer, context);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                conversionFunction.Reset(cast<cm.ast.ConversionFunctionNode*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    #if (DEBUG)
                                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                                                    #endif
                                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, conversionFunction.Release()));
                                                                }
                                                                *parentMatch21 = match;
                                                            }
                                                            *parentMatch20 = match;
                                                        }
                                                        *parentMatch9 = match;
                                                    }
                                                }
                                                *parentMatch8 = match;
                                                if (!match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch22 = &match;
                                                    lexer.SetPos(save);
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch23 = &match;
                                                        {
                                                            long pos = lexer.GetPos();
                                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.MemberVariable(lexer, context);
                                                            if (matchResult.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                            }
                                                            System.Parsing.Match match = matchResult.Value();
                                                            memberVariable.Reset(cast<cm.ast.MemberVariableNode*>(match.value));
                                                            if (match.hit)
                                                            {
                                                                #if (DEBUG)
                                                                    if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                                                #endif
                                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, memberVariable.Release()));
                                                            }
                                                            *parentMatch23 = match;
                                                        }
                                                        *parentMatch22 = match;
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                            }
                                            *parentMatch7 = match;
                                            if (!match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch24 = &match;
                                                lexer.SetPos(save);
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch25 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.AliasParser<LexerT>.UsingAlias(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        usingAlias.Reset(cast<cm.ast.Node*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            #if (DEBUG)
                                                                if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                                            #endif
                                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, usingAlias.Release()));
                                                        }
                                                        *parentMatch25 = match;
                                                    }
                                                    *parentMatch24 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                        }
                                        *parentMatch6 = match;
                                        if (!match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch26 = &match;
                                            lexer.SetPos(save);
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch27 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.AliasParser<LexerT>.Typedef(lexer, context);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    typedefinition.Reset(cast<cm.ast.Node*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        #if (DEBUG)
                                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                                        #endif
                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, typedefinition.Release()));
                                                    }
                                                    *parentMatch27 = match;
                                                }
                                                *parentMatch26 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                    }
                                    *parentMatch5 = match;
                                    if (!match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch28 = &match;
                                        lexer.SetPos(save);
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch29 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.Class(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                cls.Reset(cast<cm.ast.ClassNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    #if (DEBUG)
                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                                    #endif
                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, cls.Release()));
                                                }
                                                *parentMatch29 = match;
                                            }
                                            *parentMatch28 = match;
                                        }
                                        *parentMatch5 = match;
                                    }
                                }
                                *parentMatch4 = match;
                                if (!match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch30 = &match;
                                    lexer.SetPos(save);
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch31 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.EnumerationParser<LexerT>.EnumType(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            enumType.Reset(cast<cm.ast.EnumTypeNode*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, enumType.Release()));
                                            }
                                            *parentMatch31 = match;
                                        }
                                        *parentMatch30 = match;
                                    }
                                    *parentMatch4 = match;
                                }
                            }
                            *parentMatch3 = match;
                            if (!match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch32 = &match;
                                lexer.SetPos(save);
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch33 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ConstantParser<LexerT>.Constant(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        constant.Reset(cast<cm.ast.ConstantNode*>(match.value));
                                        if (match.hit)
                                        {
                                            #if (DEBUG)
                                                if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                            #endif
                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, constant.Release()));
                                        }
                                        *parentMatch33 = match;
                                    }
                                    *parentMatch32 = match;
                                }
                                *parentMatch3 = match;
                            }
                        }
                        *parentMatch2 = match;
                        if (!match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch34 = &match;
                            lexer.SetPos(save);
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch35 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.DelegateParser<LexerT>.Delegate(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    dlg.Reset(cast<cm.ast.DelegateNode*>(match.value));
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, dlg.Release()));
                                    }
                                    *parentMatch35 = match;
                                }
                                *parentMatch34 = match;
                            }
                            *parentMatch2 = match;
                        }
                    }
                    *parentMatch1 = match;
                    if (!match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch36 = &match;
                        lexer.SetPos(save);
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch37 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.DelegateParser<LexerT>.ClassDelegate(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                classDelegate.Reset(cast<cm.ast.ClassDelegateNode*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, classDelegate.Release()));
                                }
                                *parentMatch37 = match;
                            }
                            *parentMatch36 = match;
                        }
                        *parentMatch1 = match;
                    }
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ClassMember");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ClassMember");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> StaticConstructor(LexerT& lexer, cm.parser.Context* context, cm.ast.ClassNode* classNode)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"StaticConstructor");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6062887121931206662);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.StaticConstructorNode> staticConstructorNode = UniquePtr<cm.ast.StaticConstructorNode>();
            ustring className = ustring();
            System.UniquePtr<cm.ast.AttributesNode> attrs;
            System.UniquePtr<System.Parsing.Value<cm.ast.Specifiers>> specifiers;
            System.UniquePtr<cm.ast.IdentifierNode> id;
            System.UniquePtr<cm.ast.InitializerNode> initializer;
            System.UniquePtr<cm.ast.WhereConstraintNode> constraint;
            System.UniquePtr<cm.ast.CompoundStatementNode> body;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                System.Parsing.Match match(true);
                                                long save = lexer.GetPos();
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.AttributeParser<LexerT>.Attributes(lexer, context);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    attrs.Reset(cast<cm.ast.AttributesNode*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        *parentMatch9 = match;
                                                    }
                                                    else
                                                    {
                                                        lexer.SetPos(save);
                                                    }
                                                }
                                                *parentMatch8 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch10 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch11 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.SpecifierParser<LexerT>.Specifiers(lexer);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        specifiers.Reset(cast<System.Parsing.Value<cm.ast.Specifiers>*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            span = lexer.GetSpan(pos);
                                                        }
                                                        *parentMatch11 = match;
                                                    }
                                                    *parentMatch10 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch12 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch13 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        className = lexer.GetToken(pos).ToString();
                                                    }
                                                    *parentMatch13 = match;
                                                }
                                                *parentMatch12 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch14 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            if (*lexer == LPAREN)
                                            {
                                                auto incResult0 = ++lexer;
                                                if (incResult0.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            *parentMatch14 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch15 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch16 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            bool pass = true;
                                            System.Parsing.Match match(false);
                                            if (*lexer == RPAREN)
                                            {
                                                auto incResult1 = ++lexer;
                                                if (incResult1.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                if (className != classNode->Id()->Str() || !cm.ast.StaticConstructorSpecifiers(specifiers->value))
                                                {
                                                    pass = false;
                                                }
                                                else
                                                {
                                                    staticConstructorNode.Reset(new cm.ast.StaticConstructorNode(span, lexer.FileIndex(), specifiers->value, attrs.Release()));
                                                    staticConstructorNode->SetClassId(id.Release());
                                                }
                                            }
                                            if (match.hit && !pass)
                                            {
                                                match = System.Parsing.Match(false);
                                            }
                                            *parentMatch16 = match;
                                        }
                                        *parentMatch15 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch17 = &match;
                                {
                                    System.Parsing.Match match(true);
                                    long save = lexer.GetPos();
                                    System.Parsing.Match* parentMatch18 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch19 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch20 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                if (*lexer == COLON)
                                                {
                                                    auto incResult2 = ++lexer;
                                                    if (incResult2.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                *parentMatch20 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch21 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch22 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch23 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch24 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.Initializer(lexer, context);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                initializer.Reset(cast<cm.ast.InitializerNode*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    staticConstructorNode->AddInitializer(initializer.Release());
                                                                }
                                                                *parentMatch24 = match;
                                                            }
                                                            *parentMatch23 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch25 = &match;
                                                            {
                                                                System.Parsing.Match match(true);
                                                                System.Parsing.Match* parentMatch26 = &match;
                                                                {
                                                                    while (true)
                                                                    {
                                                                        long save = lexer.GetPos();
                                                                        {
                                                                            System.Parsing.Match match(false);
                                                                            System.Parsing.Match* parentMatch27 = &match;
                                                                            {
                                                                                System.Parsing.Match match(false);
                                                                                if (*lexer == COMMA)
                                                                                {
                                                                                    auto incResult3 = ++lexer;
                                                                                    if (incResult3.Error())
                                                                                    {
                                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                                                                    }
                                                                                    match.hit = true;
                                                                                }
                                                                                *parentMatch27 = match;
                                                                            }
                                                                            if (match.hit)
                                                                            {
                                                                                System.Parsing.Match match(false);
                                                                                System.Parsing.Match* parentMatch28 = &match;
                                                                                {
                                                                                    System.Parsing.Match match(false);
                                                                                    System.Parsing.Match* parentMatch29 = &match;
                                                                                    {
                                                                                        long pos = lexer.GetPos();
                                                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.Initializer(lexer, context);
                                                                                        if (matchResult.Error())
                                                                                        {
                                                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                                        }
                                                                                        System.Parsing.Match match = matchResult.Value();
                                                                                        initializer.Reset(cast<cm.ast.InitializerNode*>(match.value));
                                                                                        if (match.hit)
                                                                                        {
                                                                                            staticConstructorNode->AddInitializer(initializer.Release());
                                                                                        }
                                                                                        *parentMatch29 = match;
                                                                                    }
                                                                                    *parentMatch28 = match;
                                                                                }
                                                                                *parentMatch27 = match;
                                                                            }
                                                                            if (match.hit)
                                                                            {
                                                                                *parentMatch26 = match;
                                                                            }
                                                                            else
                                                                            {
                                                                                lexer.SetPos(save);
                                                                                break;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                *parentMatch25 = match;
                                                            }
                                                            *parentMatch23 = match;
                                                        }
                                                        *parentMatch22 = match;
                                                    }
                                                    *parentMatch21 = match;
                                                }
                                                *parentMatch20 = match;
                                            }
                                            *parentMatch19 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch18 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                        }
                                    }
                                    *parentMatch17 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch30 = &match;
                            {
                                System.Parsing.Match match(true);
                                long save = lexer.GetPos();
                                System.Parsing.Match* parentMatch31 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch32 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch33 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ConceptParser<LexerT>.WhereConstraint(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            constraint.Reset(cast<cm.ast.WhereConstraintNode*>(match.value));
                                            if (match.hit)
                                            {
                                                staticConstructorNode->SetConstraint(constraint.Release());
                                            }
                                            *parentMatch33 = match;
                                        }
                                        *parentMatch32 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch31 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                    }
                                }
                                *parentMatch30 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch34 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch35 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch36 = &match;
                                switch (*lexer)
                                {
                                    case LBRACE:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch37 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.CompoundStatement(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            body.Reset(cast<cm.ast.CompoundStatementNode*>(match.value));
                                            if (match.hit)
                                            {
                                                staticConstructorNode->SetBody(body.Release());
                                            }
                                            *parentMatch37 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch36 = match;
                                        }
                                        break;
                                    }
                                    case SEMICOLON:
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == SEMICOLON)
                                        {
                                            auto incResult4 = ++lexer;
                                            if (incResult4.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch36 = match;
                                        }
                                        break;
                                    }
                                }
                                *parentMatch35 = match;
                            }
                            *parentMatch34 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"StaticConstructor");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, staticConstructorNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"StaticConstructor");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"StaticConstructor");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Constructor(LexerT& lexer, cm.parser.Context* context, cm.ast.ClassNode* classNode)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Constructor");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6062887121931206663);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.ConstructorNode> constructorNode = UniquePtr<cm.ast.ConstructorNode>();
            ustring className = ustring();
            System.UniquePtr<cm.ast.AttributesNode> attrs;
            System.UniquePtr<System.Parsing.Value<cm.ast.Specifiers>> specifiers;
            System.UniquePtr<cm.ast.IdentifierNode> id;
            System.UniquePtr<cm.ast.InitializerNode> initializer;
            System.UniquePtr<cm.ast.WhereConstraintNode> constraint;
            System.UniquePtr<cm.ast.CompoundStatementNode> body;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(true);
                                            long save = lexer.GetPos();
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.AttributeParser<LexerT>.Attributes(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                attrs.Reset(cast<cm.ast.AttributesNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    *parentMatch8 = match;
                                                }
                                                else
                                                {
                                                    lexer.SetPos(save);
                                                }
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch9 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch10 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.SpecifierParser<LexerT>.Specifiers(lexer);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    specifiers.Reset(cast<System.Parsing.Value<cm.ast.Specifiers>*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        span = lexer.GetSpan(pos);
                                                    }
                                                    *parentMatch10 = match;
                                                }
                                                *parentMatch9 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch11 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch12 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                bool pass = true;
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    ustring className = lexer.GetToken(pos).ToString();
                                                    if (className != classNode->Id()->Str())
                                                    {
                                                        pass = false;
                                                    }
                                                    else
                                                    {
                                                        constructorNode.Reset(new cm.ast.ConstructorNode(span, lexer.FileIndex(), specifiers->value, attrs.Release()));
                                                        constructorNode->SetClassId(id.Release());
                                                    }
                                                }
                                                if (match.hit && !pass)
                                                {
                                                    match = System.Parsing.Match(false);
                                                }
                                                *parentMatch12 = match;
                                            }
                                            *parentMatch11 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch13 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ParameterParser<LexerT>.ParameterList(lexer, context, constructorNode.Get());
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        *parentMatch13 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch14 = &match;
                                {
                                    System.Parsing.Match match(true);
                                    long save = lexer.GetPos();
                                    System.Parsing.Match* parentMatch15 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch16 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch17 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                if (*lexer == COLON)
                                                {
                                                    auto incResult0 = ++lexer;
                                                    if (incResult0.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                *parentMatch17 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch18 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch19 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch20 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch21 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.Initializer(lexer, context);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                initializer.Reset(cast<cm.ast.InitializerNode*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    constructorNode->AddInitializer(initializer.Release());
                                                                }
                                                                *parentMatch21 = match;
                                                            }
                                                            *parentMatch20 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch22 = &match;
                                                            {
                                                                System.Parsing.Match match(true);
                                                                System.Parsing.Match* parentMatch23 = &match;
                                                                {
                                                                    while (true)
                                                                    {
                                                                        long save = lexer.GetPos();
                                                                        {
                                                                            System.Parsing.Match match(false);
                                                                            System.Parsing.Match* parentMatch24 = &match;
                                                                            {
                                                                                System.Parsing.Match match(false);
                                                                                if (*lexer == COMMA)
                                                                                {
                                                                                    auto incResult1 = ++lexer;
                                                                                    if (incResult1.Error())
                                                                                    {
                                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                                                    }
                                                                                    match.hit = true;
                                                                                }
                                                                                *parentMatch24 = match;
                                                                            }
                                                                            if (match.hit)
                                                                            {
                                                                                System.Parsing.Match match(false);
                                                                                System.Parsing.Match* parentMatch25 = &match;
                                                                                {
                                                                                    System.Parsing.Match match(false);
                                                                                    System.Parsing.Match* parentMatch26 = &match;
                                                                                    {
                                                                                        long pos = lexer.GetPos();
                                                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.Initializer(lexer, context);
                                                                                        if (matchResult.Error())
                                                                                        {
                                                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                                        }
                                                                                        System.Parsing.Match match = matchResult.Value();
                                                                                        initializer.Reset(cast<cm.ast.InitializerNode*>(match.value));
                                                                                        if (match.hit)
                                                                                        {
                                                                                            constructorNode->AddInitializer(initializer.Release());
                                                                                        }
                                                                                        *parentMatch26 = match;
                                                                                    }
                                                                                    *parentMatch25 = match;
                                                                                }
                                                                                *parentMatch24 = match;
                                                                            }
                                                                            if (match.hit)
                                                                            {
                                                                                *parentMatch23 = match;
                                                                            }
                                                                            else
                                                                            {
                                                                                lexer.SetPos(save);
                                                                                break;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                *parentMatch22 = match;
                                                            }
                                                            *parentMatch20 = match;
                                                        }
                                                        *parentMatch19 = match;
                                                    }
                                                    *parentMatch18 = match;
                                                }
                                                *parentMatch17 = match;
                                            }
                                            *parentMatch16 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch15 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                        }
                                    }
                                    *parentMatch14 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch27 = &match;
                            {
                                System.Parsing.Match match(true);
                                long save = lexer.GetPos();
                                System.Parsing.Match* parentMatch28 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch29 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch30 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ConceptParser<LexerT>.WhereConstraint(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            constraint.Reset(cast<cm.ast.WhereConstraintNode*>(match.value));
                                            if (match.hit)
                                            {
                                                constructorNode->SetConstraint(constraint.Release());
                                            }
                                            *parentMatch30 = match;
                                        }
                                        *parentMatch29 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch28 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                    }
                                }
                                *parentMatch27 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch31 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch32 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch33 = &match;
                                switch (*lexer)
                                {
                                    case LBRACE:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch34 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.CompoundStatement(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            body.Reset(cast<cm.ast.CompoundStatementNode*>(match.value));
                                            if (match.hit)
                                            {
                                                constructorNode->SetBody(body.Release());
                                            }
                                            *parentMatch34 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch33 = match;
                                        }
                                        break;
                                    }
                                    case SEMICOLON:
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == SEMICOLON)
                                        {
                                            auto incResult2 = ++lexer;
                                            if (incResult2.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch33 = match;
                                        }
                                        break;
                                    }
                                }
                                *parentMatch32 = match;
                            }
                            *parentMatch31 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constructor");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, constructorNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constructor");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Constructor");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Destructor(LexerT& lexer, cm.parser.Context* context, cm.ast.ClassNode* classNode)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Destructor");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6062887121931206664);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.DestructorNode> destructorNode = UniquePtr<cm.ast.DestructorNode>();
            ustring className = ustring();
            System.UniquePtr<cm.ast.AttributesNode> attrs;
            System.UniquePtr<System.Parsing.Value<cm.ast.Specifiers>> specifiers;
            System.UniquePtr<cm.ast.IdentifierNode> id;
            System.UniquePtr<cm.ast.WhereConstraintNode> contraint;
            System.UniquePtr<cm.ast.CompoundStatementNode> body;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                System.Parsing.Match match(true);
                                                long save = lexer.GetPos();
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.AttributeParser<LexerT>.Attributes(lexer, context);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    attrs.Reset(cast<cm.ast.AttributesNode*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        *parentMatch9 = match;
                                                    }
                                                    else
                                                    {
                                                        lexer.SetPos(save);
                                                    }
                                                }
                                                *parentMatch8 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch10 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch11 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.SpecifierParser<LexerT>.Specifiers(lexer);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        specifiers.Reset(cast<System.Parsing.Value<cm.ast.Specifiers>*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            span = lexer.GetSpan(pos);
                                                        }
                                                        *parentMatch11 = match;
                                                    }
                                                    *parentMatch10 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch12 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                if (*lexer == TILDE)
                                                {
                                                    auto incResult0 = ++lexer;
                                                    if (incResult0.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                *parentMatch12 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch13 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch14 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    className = lexer.GetToken(pos).ToString();
                                                }
                                                *parentMatch14 = match;
                                            }
                                            *parentMatch13 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch15 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == LPAREN)
                                        {
                                            auto incResult1 = ++lexer;
                                            if (incResult1.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch15 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch16 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch17 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        bool pass = true;
                                        System.Parsing.Match match(false);
                                        if (*lexer == RPAREN)
                                        {
                                            auto incResult2 = ++lexer;
                                            if (incResult2.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            if (className != classNode->Id()->Str())
                                            {
                                                pass = false;
                                            }
                                            else
                                            {
                                                destructorNode.Reset(new cm.ast.DestructorNode(span, lexer.FileIndex(), specifiers->value, attrs.Release()));
                                                destructorNode->SetClassId(id.Release());
                                            }
                                        }
                                        if (match.hit && !pass)
                                        {
                                            match = System.Parsing.Match(false);
                                        }
                                        *parentMatch17 = match;
                                    }
                                    *parentMatch16 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch18 = &match;
                            {
                                System.Parsing.Match match(true);
                                long save = lexer.GetPos();
                                System.Parsing.Match* parentMatch19 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch20 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch21 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ConceptParser<LexerT>.WhereConstraint(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            contraint.Reset(cast<cm.ast.WhereConstraintNode*>(match.value));
                                            if (match.hit)
                                            {
                                                destructorNode->SetConstraint(contraint.Release());
                                            }
                                            *parentMatch21 = match;
                                        }
                                        *parentMatch20 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch19 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                    }
                                }
                                *parentMatch18 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch22 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch23 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch24 = &match;
                                switch (*lexer)
                                {
                                    case LBRACE:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch25 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.CompoundStatement(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            body.Reset(cast<cm.ast.CompoundStatementNode*>(match.value));
                                            if (match.hit)
                                            {
                                                destructorNode->SetBody(body.Release());
                                            }
                                            *parentMatch25 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch24 = match;
                                        }
                                        break;
                                    }
                                    case SEMICOLON:
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == SEMICOLON)
                                        {
                                            auto incResult3 = ++lexer;
                                            if (incResult3.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch24 = match;
                                        }
                                        break;
                                    }
                                }
                                *parentMatch23 = match;
                            }
                            *parentMatch22 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Destructor");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, destructorNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Destructor");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Destructor");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Initializer(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Initializer");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6062887121931206665);
            UniquePtr<cm.ast.InitializerNode> initializerNode = UniquePtr<cm.ast.InitializerNode>();
            System.UniquePtr<cm.ast.IdentifierNode> id;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    switch (*lexer)
                    {
                        case THIS:
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch3 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch4 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch5 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == THIS)
                                            {
                                                auto incResult0 = ++lexer;
                                                if (incResult0.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                initializerNode.Reset(new cm.ast.ThisInitializerNode(lexer.GetSpan(pos), lexer.FileIndex()));
                                            }
                                            *parentMatch6 = match;
                                        }
                                        *parentMatch5 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            if (*lexer == LPAREN)
                                            {
                                                auto incResult1 = ++lexer;
                                                if (incResult1.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch5 = match;
                                    }
                                    *parentMatch4 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch8 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.ArgumentList(lexer, context, initializerNode.Get());
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        *parentMatch8 = match;
                                    }
                                    *parentMatch4 = match;
                                }
                                *parentMatch3 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch9 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == RPAREN)
                                    {
                                        auto incResult2 = ++lexer;
                                        if (incResult2.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch9 = match;
                                }
                                *parentMatch3 = match;
                            }
                            if (match.hit)
                            {
                                *parentMatch2 = match;
                            }
                            break;
                        }
                        case BASE:
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch10 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch11 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch12 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch13 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == BASE)
                                            {
                                                auto incResult3 = ++lexer;
                                                if (incResult3.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                initializerNode.Reset(new cm.ast.BaseInitializerNode(lexer.GetSpan(pos), lexer.FileIndex()));
                                            }
                                            *parentMatch13 = match;
                                        }
                                        *parentMatch12 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch14 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            if (*lexer == LPAREN)
                                            {
                                                auto incResult4 = ++lexer;
                                                if (incResult4.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            *parentMatch14 = match;
                                        }
                                        *parentMatch12 = match;
                                    }
                                    *parentMatch11 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch15 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.ArgumentList(lexer, context, initializerNode.Get());
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        *parentMatch15 = match;
                                    }
                                    *parentMatch11 = match;
                                }
                                *parentMatch10 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch16 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == RPAREN)
                                    {
                                        auto incResult5 = ++lexer;
                                        if (incResult5.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult5.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch16 = match;
                                }
                                *parentMatch10 = match;
                            }
                            if (match.hit)
                            {
                                *parentMatch2 = match;
                            }
                            break;
                        }
                        case ID:
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch17 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch18 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch19 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch20 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                            if (match.hit)
                                            {
                                                initializerNode.Reset(new cm.ast.MemberInitializerNode(lexer.GetSpan(pos), lexer.FileIndex(), id.Release()));
                                            }
                                            *parentMatch20 = match;
                                        }
                                        *parentMatch19 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch21 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            if (*lexer == LPAREN)
                                            {
                                                auto incResult6 = ++lexer;
                                                if (incResult6.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult6.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            *parentMatch21 = match;
                                        }
                                        *parentMatch19 = match;
                                    }
                                    *parentMatch18 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch22 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.ArgumentList(lexer, context, initializerNode.Get());
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        *parentMatch22 = match;
                                    }
                                    *parentMatch18 = match;
                                }
                                *parentMatch17 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch23 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == RPAREN)
                                    {
                                        auto incResult7 = ++lexer;
                                        if (incResult7.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult7.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch23 = match;
                                }
                                *parentMatch17 = match;
                            }
                            if (match.hit)
                            {
                                *parentMatch2 = match;
                            }
                            break;
                        }
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Initializer");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, initializerNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Initializer");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Initializer");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> MemberFunction(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"MemberFunction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6062887121931206666);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.MemberFunctionNode> memberFunctionNode = UniquePtr<cm.ast.MemberFunctionNode>();
            System.UniquePtr<cm.ast.AttributesNode> attrs;
            System.UniquePtr<System.Parsing.Value<cm.ast.Specifiers>> specifiers;
            System.UniquePtr<cm.ast.Node> returnType;
            System.UniquePtr<System.Parsing.Value<ustring>> groupId;
            System.UniquePtr<cm.ast.WhereConstraintNode> constraint;
            System.UniquePtr<cm.ast.CompoundStatementNode> body;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                System.Parsing.Match match(true);
                                                long save = lexer.GetPos();
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.AttributeParser<LexerT>.Attributes(lexer, context);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    attrs.Reset(cast<cm.ast.AttributesNode*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        *parentMatch9 = match;
                                                    }
                                                    else
                                                    {
                                                        lexer.SetPos(save);
                                                    }
                                                }
                                                *parentMatch8 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch10 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch11 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.SpecifierParser<LexerT>.Specifiers(lexer);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        specifiers.Reset(cast<System.Parsing.Value<cm.ast.Specifiers>*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            span = lexer.GetSpan(pos);
                                                        }
                                                        *parentMatch11 = match;
                                                    }
                                                    *parentMatch10 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch12 = &match;
                                            {
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                returnType.Reset(cast<cm.ast.Node*>(match.value));
                                                *parentMatch12 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch13 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch14 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.FunctionParser<LexerT>.FunctionGroupId(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                groupId.Reset(cast<System.Parsing.Value<ustring>*>(match.value));
                                                if (match.hit)
                                                {
                                                    memberFunctionNode.Reset(new cm.ast.MemberFunctionNode(span, lexer.FileIndex(), specifiers->value, returnType.Release(), groupId->value, attrs.Release()));
                                                }
                                                *parentMatch14 = match;
                                            }
                                            *parentMatch13 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch15 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ParameterParser<LexerT>.ParameterList(lexer, context, memberFunctionNode.Get());
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        *parentMatch15 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch16 = &match;
                                {
                                    System.Parsing.Match match(true);
                                    long save = lexer.GetPos();
                                    System.Parsing.Match* parentMatch17 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch18 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch19 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                if (*lexer == CONST)
                                                {
                                                    auto incResult0 = ++lexer;
                                                    if (incResult0.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                if (match.hit)
                                                {
                                                    memberFunctionNode->SetConst();
                                                }
                                                *parentMatch19 = match;
                                            }
                                            *parentMatch18 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch17 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                        }
                                    }
                                    *parentMatch16 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch20 = &match;
                            {
                                System.Parsing.Match match(true);
                                long save = lexer.GetPos();
                                System.Parsing.Match* parentMatch21 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch22 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch23 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ConceptParser<LexerT>.WhereConstraint(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            constraint.Reset(cast<cm.ast.WhereConstraintNode*>(match.value));
                                            if (match.hit)
                                            {
                                                memberFunctionNode->SetConstraint(constraint.Release());
                                            }
                                            *parentMatch23 = match;
                                        }
                                        *parentMatch22 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch21 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                    }
                                }
                                *parentMatch20 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch24 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch25 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch26 = &match;
                                switch (*lexer)
                                {
                                    case LBRACE:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch27 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.CompoundStatement(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            body.Reset(cast<cm.ast.CompoundStatementNode*>(match.value));
                                            if (match.hit)
                                            {
                                                memberFunctionNode->SetBody(body.Release());
                                            }
                                            *parentMatch27 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch26 = match;
                                        }
                                        break;
                                    }
                                    case SEMICOLON:
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == SEMICOLON)
                                        {
                                            auto incResult1 = ++lexer;
                                            if (incResult1.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch26 = match;
                                        }
                                        break;
                                    }
                                }
                                *parentMatch25 = match;
                            }
                            *parentMatch24 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MemberFunction");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, memberFunctionNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MemberFunction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"MemberFunction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ConversionFunction(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ConversionFunction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6062887121931206667);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.ConversionFunctionNode> conversionFunctionNode = UniquePtr<cm.ast.ConversionFunctionNode>();
            System.UniquePtr<cm.ast.AttributesNode> attrs;
            System.UniquePtr<System.Parsing.Value<cm.ast.Specifiers>> specifiers;
            System.UniquePtr<cm.ast.Node> type;
            System.UniquePtr<cm.ast.WhereConstraintNode> constraint;
            System.UniquePtr<cm.ast.CompoundStatementNode> body;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Parsing.Match match(true);
                                                    long save = lexer.GetPos();
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.AttributeParser<LexerT>.Attributes(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        attrs.Reset(cast<cm.ast.AttributesNode*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            *parentMatch10 = match;
                                                        }
                                                        else
                                                        {
                                                            lexer.SetPos(save);
                                                        }
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch11 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch12 = &match;
                                                        {
                                                            long pos = lexer.GetPos();
                                                            System.Result<System.Parsing.Match> matchResult = cm.parser.SpecifierParser<LexerT>.Specifiers(lexer);
                                                            if (matchResult.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                            }
                                                            System.Parsing.Match match = matchResult.Value();
                                                            specifiers.Reset(cast<System.Parsing.Value<cm.ast.Specifiers>*>(match.value));
                                                            if (match.hit)
                                                            {
                                                                span = lexer.GetSpan(pos);
                                                            }
                                                            *parentMatch12 = match;
                                                        }
                                                        *parentMatch11 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch13 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == OPERATOR)
                                                    {
                                                        auto incResult0 = ++lexer;
                                                        if (incResult0.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    *parentMatch13 = match;
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch14 = &match;
                                            {
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                type.Reset(cast<cm.ast.Node*>(match.value));
                                                *parentMatch14 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch15 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            if (*lexer == LPAREN)
                                            {
                                                auto incResult1 = ++lexer;
                                                if (incResult1.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            *parentMatch15 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch16 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch17 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == RPAREN)
                                            {
                                                auto incResult2 = ++lexer;
                                                if (incResult2.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                conversionFunctionNode.Reset(new cm.ast.ConversionFunctionNode(span, lexer.FileIndex(), specifiers->value, type.Release(), attrs.Release()));
                                            }
                                            *parentMatch17 = match;
                                        }
                                        *parentMatch16 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch18 = &match;
                                {
                                    System.Parsing.Match match(true);
                                    long save = lexer.GetPos();
                                    System.Parsing.Match* parentMatch19 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch20 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch21 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                if (*lexer == CONST)
                                                {
                                                    auto incResult3 = ++lexer;
                                                    if (incResult3.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                if (match.hit)
                                                {
                                                    conversionFunctionNode->SetConst();
                                                }
                                                *parentMatch21 = match;
                                            }
                                            *parentMatch20 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch19 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                        }
                                    }
                                    *parentMatch18 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch22 = &match;
                            {
                                System.Parsing.Match match(true);
                                long save = lexer.GetPos();
                                System.Parsing.Match* parentMatch23 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch24 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch25 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ConceptParser<LexerT>.WhereConstraint(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            constraint.Reset(cast<cm.ast.WhereConstraintNode*>(match.value));
                                            if (match.hit)
                                            {
                                                conversionFunctionNode->SetConstraint(constraint.Release());
                                            }
                                            *parentMatch25 = match;
                                        }
                                        *parentMatch24 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch23 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                    }
                                }
                                *parentMatch22 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch26 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch27 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch28 = &match;
                                switch (*lexer)
                                {
                                    case LBRACE:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch29 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.StatementParser<LexerT>.CompoundStatement(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            body.Reset(cast<cm.ast.CompoundStatementNode*>(match.value));
                                            if (match.hit)
                                            {
                                                conversionFunctionNode->SetBody(body.Release());
                                            }
                                            *parentMatch29 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch28 = match;
                                        }
                                        break;
                                    }
                                    case SEMICOLON:
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == SEMICOLON)
                                        {
                                            auto incResult4 = ++lexer;
                                            if (incResult4.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch28 = match;
                                        }
                                        break;
                                    }
                                }
                                *parentMatch27 = match;
                            }
                            *parentMatch26 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConversionFunction");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, conversionFunctionNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConversionFunction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ConversionFunction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> MemberVariable(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"MemberVariable");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6062887121931206668);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.AttributesNode> attrs;
            System.UniquePtr<System.Parsing.Value<cm.ast.Specifiers>> specifiers;
            System.UniquePtr<cm.ast.Node> type;
            System.UniquePtr<cm.ast.IdentifierNode> id;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(true);
                                    long save = lexer.GetPos();
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.AttributeParser<LexerT>.Attributes(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        attrs.Reset(cast<cm.ast.AttributesNode*>(match.value));
                                        if (match.hit)
                                        {
                                            *parentMatch6 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                        }
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.SpecifierParser<LexerT>.Specifiers(lexer);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            specifiers.Reset(cast<System.Parsing.Value<cm.ast.Specifiers>*>(match.value));
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch9 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    type.Reset(cast<cm.ast.Node*>(match.value));
                                    *parentMatch9 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch10 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                *parentMatch10 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch11 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch11 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MemberVariable");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.MemberVariableNode(span, lexer.FileIndex(), specifiers->value, type.Release(), id.Release(), attrs.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MemberVariable");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"MemberVariable");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
    }
}

new class cm.parser.ClassParser<cm.lexer.CmajorLexer>;

