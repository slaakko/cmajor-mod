// this file has been generated from 'C:/work/cmajor-mod/cmajor/projects/tools/soulcm/scmpg.parser/../cm.parser/expression.parser' using SoulCm parser generator scmpg version 5.0.0

using System;
using System.Lex;
using System.Parsing;
using cm.ast;
using cm.token;

namespace cm.parser
{
    public static class ExpressionParser<LexerT>
    {
        public static System.Result<System.Parsing.Match> Expression(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Expression");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062017);
            System.UniquePtr<cm.ast.Node> equivalence;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Equivalence(lexer, context);
                    if (matchResult.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                    }
                    System.Parsing.Match match = matchResult.Value();
                    equivalence.Reset(cast<cm.ast.Node*>(match.value));
                    if (match.hit)
                    {
                        #if (DEBUG)
                            if (parser_debug_write_to_log)
                            {
                                auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Expression");
                                if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                            }
                        #endif
                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, equivalence.Release()));
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Expression");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Expression");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Equivalence(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Equivalence");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062018);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> left;
            System.UniquePtr<cm.ast.Node> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Implication(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    bool pass = true;
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == EQUIVALENCE)
                                                    {
                                                        auto incResult0 = ++lexer;
                                                        if (incResult0.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        if (!context->ParsingConcept() || context->ParsingTemplateId()) pass = false;
                                                    }
                                                    if (match.hit && !pass)
                                                    {
                                                        match = System.Parsing.Match(false);
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Implication(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        right.Reset(cast<cm.ast.Node*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            expr.Reset(new cm.ast.EquivalenceNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Equivalence");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Equivalence");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Equivalence");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Implication(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Implication");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062019);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> left;
            System.UniquePtr<cm.ast.Node> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Disjunction(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            long save = lexer.GetPos();
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            bool pass = true;
                                            System.Parsing.Match match(false);
                                            if (*lexer == IMPLICATION)
                                            {
                                                auto incResult0 = ++lexer;
                                                if (incResult0.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                if (!context->ParsingConcept() || context->ParsingTemplateId()) pass = false;
                                            }
                                            if (match.hit && !pass)
                                            {
                                                match = System.Parsing.Match(false);
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch9 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch10 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Implication(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                right.Reset(cast<cm.ast.Node*>(match.value));
                                                if (match.hit)
                                                {
                                                    expr.Reset(new cm.ast.ImplicationNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                }
                                                *parentMatch10 = match;
                                            }
                                            *parentMatch9 = match;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch5 = match;
                                }
                                else
                                {
                                    lexer.SetPos(save);
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Implication");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Implication");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Implication");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Disjunction(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Disjunction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062020);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> left;
            System.UniquePtr<cm.ast.Node> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Conjunction(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    bool pass = true;
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == DISJUNCTION)
                                                    {
                                                        auto incResult0 = ++lexer;
                                                        if (incResult0.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        if (context->ParsingLValueOrExprStatementAndNotArgs()) pass = false;
                                                    }
                                                    if (match.hit && !pass)
                                                    {
                                                        match = System.Parsing.Match(false);
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Conjunction(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        right.Reset(cast<cm.ast.Node*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            expr.Reset(new cm.ast.DisjunctionNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Disjunction");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Disjunction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Disjunction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Conjunction(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Conjunction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062021);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> left;
            System.UniquePtr<cm.ast.Node> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.BitOr(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    bool pass = true;
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == AMP_AMP)
                                                    {
                                                        auto incResult0 = ++lexer;
                                                        if (incResult0.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        if (context->ParsingLValueOrExprStatementAndNotArgs()) pass = false;
                                                    }
                                                    if (match.hit && !pass)
                                                    {
                                                        match = System.Parsing.Match(false);
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.BitOr(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        right.Reset(cast<cm.ast.Node*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            expr.Reset(new cm.ast.ConjunctionNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Conjunction");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Conjunction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Conjunction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> BitOr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"BitOr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062022);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> left;
            System.UniquePtr<cm.ast.Node> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.BitXor(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    bool pass = true;
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == PIPE)
                                                    {
                                                        auto incResult0 = ++lexer;
                                                        if (incResult0.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        if (context->ParsingLValueOrExprStatementAndNotArgs()) pass = false;
                                                    }
                                                    if (match.hit && !pass)
                                                    {
                                                        match = System.Parsing.Match(false);
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.BitXor(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        right.Reset(cast<cm.ast.Node*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            expr.Reset(new cm.ast.BitOrNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BitOr");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BitOr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"BitOr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> BitXor(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"BitXor");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062023);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> left;
            System.UniquePtr<cm.ast.Node> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.BitAnd(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    bool pass = true;
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == CARET)
                                                    {
                                                        auto incResult0 = ++lexer;
                                                        if (incResult0.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        if (context->ParsingLValueOrExprStatementAndNotArgs()) pass = false;
                                                    }
                                                    if (match.hit && !pass)
                                                    {
                                                        match = System.Parsing.Match(false);
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.BitAnd(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        right.Reset(cast<cm.ast.Node*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            expr.Reset(new cm.ast.BitXorNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BitXor");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BitXor");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"BitXor");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> BitAnd(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"BitAnd");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062024);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> left;
            System.UniquePtr<cm.ast.Node> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Equality(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    bool pass = true;
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == AMP)
                                                    {
                                                        auto incResult0 = ++lexer;
                                                        if (incResult0.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        if (context->ParsingLValueOrExprStatementAndNotArgs()) pass = false;
                                                    }
                                                    if (match.hit && !pass)
                                                    {
                                                        match = System.Parsing.Match(false);
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Equality(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        right.Reset(cast<cm.ast.Node*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            expr.Reset(new cm.ast.BitAndNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BitAnd");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BitAnd");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"BitAnd");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Equality(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Equality");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062025);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> left;
            System.UniquePtr<System.Parsing.Value<cm.parser.Operator>> op;
            System.UniquePtr<cm.ast.Node> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Relational(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    bool pass = true;
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.EqualityOp(lexer);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    op.Reset(cast<System.Parsing.Value<cm.parser.Operator>*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        if (context->ParsingLValueOrExprStatementAndNotArgs()) pass = false;
                                                    }
                                                    if (match.hit && !pass)
                                                    {
                                                        match = System.Parsing.Match(false);
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Relational(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        right.Reset(cast<cm.ast.Node*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            switch (op->value)
                                                            {
                                                                case cm.parser.Operator.eq: 
                                                                {
                                                                    expr.Reset(new cm.ast.EqualNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                                case cm.parser.Operator.neq: 
                                                                {
                                                                    expr.Reset(new cm.ast.NotEqualNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Equality");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Equality");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Equality");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> EqualityOp(LexerT& lexer)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"EqualityOp");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062026);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case EQ:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == EQ)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"EqualityOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.eq)));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case NEQ:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NEQ)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"EqualityOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.neq)));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"EqualityOp");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"EqualityOp");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Relational(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Relational");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062027);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            cm.parser.Operator op = cm.parser.Operator();
            System.UniquePtr<cm.ast.Node> left;
            System.UniquePtr<System.Parsing.Value<cm.parser.Operator>> relOp;
            System.UniquePtr<cm.ast.Node> isType;
            System.UniquePtr<cm.ast.Node> asType;
            System.UniquePtr<cm.ast.Node> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Shift(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch9 = &match;
                                                    switch (*lexer)
                                                    {
                                                        case GEQ:
                                                        case LANGLE:
                                                        case LEQ:
                                                        case RANGLE:
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch10 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                bool pass = true;
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.RelationalOp(lexer);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                relOp.Reset(cast<System.Parsing.Value<cm.parser.Operator>*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    op = relOp->value;
                                                                    if (context->ParsingLValueOrExprStatementAndNotArgs())
                                                                    {
                                                                        pass = false;
                                                                    }
                                                                    else
                                                                    {
                                                                        context->PushParsingIsOrAs(false);
                                                                    }
                                                                }
                                                                if (match.hit && !pass)
                                                                {
                                                                    match = System.Parsing.Match(false);
                                                                }
                                                                *parentMatch10 = match;
                                                            }
                                                            if (match.hit)
                                                            {
                                                                *parentMatch9 = match;
                                                            }
                                                            break;
                                                        }
                                                        case IS:
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch11 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch12 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    bool pass = true;
                                                                    System.Parsing.Match match(false);
                                                                    if (*lexer == IS)
                                                                    {
                                                                        auto incResult0 = ++lexer;
                                                                        if (incResult0.Error())
                                                                        {
                                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                                        }
                                                                        match.hit = true;
                                                                    }
                                                                    if (match.hit)
                                                                    {
                                                                        if (context->ParsingLValueOrExprStatementAndNotArgs())
                                                                        {
                                                                            pass = false;
                                                                        }
                                                                        else
                                                                        {
                                                                            op = cm.parser.Operator.is_;
                                                                            context->PushParsingIsOrAs(true);
                                                                        }
                                                                    }
                                                                    if (match.hit && !pass)
                                                                    {
                                                                        match = System.Parsing.Match(false);
                                                                    }
                                                                    *parentMatch12 = match;
                                                                }
                                                                *parentMatch11 = match;
                                                            }
                                                            if (match.hit)
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch13 = &match;
                                                                {
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    isType.Reset(cast<cm.ast.Node*>(match.value));
                                                                    *parentMatch13 = match;
                                                                }
                                                                *parentMatch11 = match;
                                                            }
                                                            if (match.hit)
                                                            {
                                                                *parentMatch9 = match;
                                                            }
                                                            break;
                                                        }
                                                        case AS:
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch14 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch15 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    bool pass = true;
                                                                    System.Parsing.Match match(false);
                                                                    if (*lexer == AS)
                                                                    {
                                                                        auto incResult1 = ++lexer;
                                                                        if (incResult1.Error())
                                                                        {
                                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                                        }
                                                                        match.hit = true;
                                                                    }
                                                                    if (match.hit)
                                                                    {
                                                                        if (context->ParsingLValueOrExprStatementAndNotArgs())
                                                                        {
                                                                            pass = false;
                                                                        }
                                                                        else
                                                                        {
                                                                            op = cm.parser.Operator.as_;
                                                                            context->PushParsingIsOrAs(true);
                                                                        }
                                                                    }
                                                                    if (match.hit && !pass)
                                                                    {
                                                                        match = System.Parsing.Match(false);
                                                                    }
                                                                    *parentMatch15 = match;
                                                                }
                                                                *parentMatch14 = match;
                                                            }
                                                            if (match.hit)
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch16 = &match;
                                                                {
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    asType.Reset(cast<cm.ast.Node*>(match.value));
                                                                    *parentMatch16 = match;
                                                                }
                                                                *parentMatch14 = match;
                                                            }
                                                            if (match.hit)
                                                            {
                                                                *parentMatch9 = match;
                                                            }
                                                            break;
                                                        }
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch17 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch18 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch19 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch20 = &match;
                                                            {
                                                                long save = lexer.GetPos();
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Shift(lexer, context);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                right.Reset(cast<cm.ast.Node*>(match.value));
                                                                *parentMatch20 = match;
                                                                if (!match.hit)
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch21 = &match;
                                                                    lexer.SetPos(save);
                                                                    {
                                                                        System.Parsing.Match match(false);
                                                                        System.Parsing.Match* parentMatch22 = &match;
                                                                        {
                                                                            long pos = lexer.GetPos();
                                                                            bool pass = true;
                                                                            System.Parsing.Match match(true);
                                                                            if (match.hit)
                                                                            {
                                                                                if (!context->ParsingIsOrAs()) pass = false;
                                                                            }
                                                                            if (match.hit && !pass)
                                                                            {
                                                                                match = System.Parsing.Match(false);
                                                                            }
                                                                            *parentMatch22 = match;
                                                                        }
                                                                        *parentMatch21 = match;
                                                                    }
                                                                    *parentMatch20 = match;
                                                                }
                                                            }
                                                            *parentMatch19 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            context->PopParsingIsOrAs();
                                                            switch (op)
                                                            {
                                                                case cm.parser.Operator.lessOrEq: 
                                                                {
                                                                    expr.Reset(new cm.ast.LessOrEqualNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                                case cm.parser.Operator.greaterOrEq: 
                                                                {
                                                                    expr.Reset(new cm.ast.GreaterOrEqualNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                                case cm.parser.Operator.less: 
                                                                {
                                                                    expr.Reset(new cm.ast.LessNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                                case cm.parser.Operator.greater: 
                                                                {
                                                                    expr.Reset(new cm.ast.GreaterNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                                case cm.parser.Operator.is_: 
                                                                {
                                                                    expr.Reset(new cm.ast.IsNode(span, lexer.FileIndex(), expr.Release(), isType.Release()));
                                                                    break;
                                                                }
                                                                case cm.parser.Operator.as_: 
                                                                {
                                                                    expr.Reset(new cm.ast.AsNode(span, lexer.FileIndex(), expr.Release(), asType.Release()));
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                        *parentMatch18 = match;
                                                    }
                                                    *parentMatch17 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Relational");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Relational");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Relational");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> RelationalOp(LexerT& lexer)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"RelationalOp");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062028);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case LEQ:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == LEQ)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"RelationalOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.lessOrEq)));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case GEQ:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == GEQ)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"RelationalOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.greaterOrEq)));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case LANGLE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == LANGLE)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"RelationalOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.less)));
                        }
                        *parentMatch3 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case RANGLE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch4 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == RANGLE)
                        {
                            auto incResult3 = ++lexer;
                            if (incResult3.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"RelationalOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.greater)));
                        }
                        *parentMatch4 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"RelationalOp");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"RelationalOp");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Shift(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Shift");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062029);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> left;
            System.UniquePtr<System.Parsing.Value<cm.parser.Operator>> op;
            System.UniquePtr<cm.ast.Node> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Additive(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch9 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        bool pass = true;
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.ShiftOp(lexer);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        op.Reset(cast<System.Parsing.Value<cm.parser.Operator>*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            if (context->ParsingLValue()) pass = false;
                                                        }
                                                        if (match.hit && !pass)
                                                        {
                                                            match = System.Parsing.Match(false);
                                                        }
                                                        *parentMatch9 = match;
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch11 = &match;
                                                        {
                                                            long pos = lexer.GetPos();
                                                            System.Parsing.Match match(true);
                                                            if (match.hit)
                                                            {
                                                                context->BeginParsingArguments();
                                                            }
                                                            *parentMatch11 = match;
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch12 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch13 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Additive(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        right.Reset(cast<cm.ast.Node*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            switch (op->value)
                                                            {
                                                                case cm.parser.Operator.shiftLeft: 
                                                                {
                                                                    expr.Reset(new cm.ast.ShiftLeftNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                                case cm.parser.Operator.shiftRight: 
                                                                {
                                                                    expr.Reset(new cm.ast.ShiftRightNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                            }
                                                            context->EndParsingArguments();
                                                        }
                                                        else
                                                        {
                                                            context->EndParsingArguments();
                                                        }
                                                        *parentMatch13 = match;
                                                    }
                                                    *parentMatch12 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Shift");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Shift");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Shift");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ShiftOp(LexerT& lexer)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ShiftOp");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062030);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case SHIFT_LEFT:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == SHIFT_LEFT)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ShiftOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.shiftLeft)));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case SHIFT_RIGHT:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == SHIFT_RIGHT)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ShiftOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.shiftRight)));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ShiftOp");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ShiftOp");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Additive(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Additive");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062031);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> left;
            System.UniquePtr<System.Parsing.Value<cm.parser.Operator>> op;
            System.UniquePtr<cm.ast.Node> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Multiplicative(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    bool pass = true;
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.AdditiveOp(lexer);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    op.Reset(cast<System.Parsing.Value<cm.parser.Operator>*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        if (context->ParsingLValueOrExprStatementAndNotArgs()) pass = false;
                                                    }
                                                    if (match.hit && !pass)
                                                    {
                                                        match = System.Parsing.Match(false);
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Multiplicative(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        right.Reset(cast<cm.ast.Node*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            switch (op->value)
                                                            {
                                                                case cm.parser.Operator.plus: 
                                                                {
                                                                    expr.Reset(new cm.ast.AddNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                                case cm.parser.Operator.minus: 
                                                                {
                                                                    expr.Reset(new cm.ast.SubNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Additive");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Additive");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Additive");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> AdditiveOp(LexerT& lexer)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"AdditiveOp");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062032);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case PLUS:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == PLUS)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"AdditiveOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.plus)));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case MINUS:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == MINUS)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"AdditiveOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.minus)));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"AdditiveOp");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"AdditiveOp");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Multiplicative(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Multiplicative");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062033);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> left;
            System.UniquePtr<System.Parsing.Value<cm.parser.Operator>> op;
            System.UniquePtr<cm.ast.Node> right;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Prefix(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            left.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(left.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    bool pass = true;
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.MultiplicativeOp(lexer);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    op.Reset(cast<System.Parsing.Value<cm.parser.Operator>*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        if (context->ParsingLValueOrExprStatementAndNotArgs()) pass = false;
                                                    }
                                                    if (match.hit && !pass)
                                                    {
                                                        match = System.Parsing.Match(false);
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Prefix(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        right.Reset(cast<cm.ast.Node*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            switch (op->value)
                                                            {
                                                                case cm.parser.Operator.mul: 
                                                                {
                                                                    expr.Reset(new cm.ast.MulNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                                case cm.parser.Operator.div: 
                                                                {
                                                                    expr.Reset(new cm.ast.DivNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                                case cm.parser.Operator.rem: 
                                                                {
                                                                    expr.Reset(new cm.ast.RemNode(span, lexer.FileIndex(), expr.Release(), right.Release()));
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Multiplicative");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Multiplicative");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Multiplicative");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> MultiplicativeOp(LexerT& lexer)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"MultiplicativeOp");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062034);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case STAR:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == STAR)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MultiplicativeOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.mul)));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case DIV:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == DIV)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MultiplicativeOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.div)));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case REM:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == REM)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MultiplicativeOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.rem)));
                        }
                        *parentMatch3 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MultiplicativeOp");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"MultiplicativeOp");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Prefix(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Prefix");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062035);
            UniquePtr<cm.ast.Node> prefix = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            cm.parser.Operator op = cm.parser.Operator();
            System.UniquePtr<System.Parsing.Value<cm.parser.Operator>> prefixOp;
            System.UniquePtr<cm.ast.Node> p;
            System.UniquePtr<cm.ast.Node> postfix;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long save = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            bool pass = true;
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.PrefixOp(lexer);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            prefixOp.Reset(cast<System.Parsing.Value<cm.parser.Operator>*>(match.value));
                            if (match.hit)
                            {
                                op = prefixOp->value;
                                span = lexer.GetSpan(pos);
                                if (op != cm.parser.Operator.plusPlus && op != cm.parser.Operator.minusMinus && context->ParsingExpressionStatement() && !context->ParsingArguments()) pass = false;
                            }
                            if (match.hit && !pass)
                            {
                                match = System.Parsing.Match(false);
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Prefix(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                p.Reset(cast<cm.ast.Node*>(match.value));
                                if (match.hit)
                                {
                                    prefix.Reset(p.Release());
                                    switch (op)
                                    {
                                        case cm.parser.Operator.plusPlus: 
                                        {
                                            #if (DEBUG)
                                                if (parser_debug_write_to_log)
                                                {
                                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Prefix");
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                }
                                            #endif
                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.PrefixIncrementNode(span, lexer.FileIndex(), prefix.Release())));
                                        }
                                        case cm.parser.Operator.minusMinus: 
                                        {
                                            #if (DEBUG)
                                                if (parser_debug_write_to_log)
                                                {
                                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Prefix");
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                }
                                            #endif
                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.PrefixDecrementNode(span, lexer.FileIndex(), prefix.Release())));
                                        }
                                        case cm.parser.Operator.plus: 
                                        {
                                            #if (DEBUG)
                                                if (parser_debug_write_to_log)
                                                {
                                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Prefix");
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                }
                                            #endif
                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.UnaryPlusNode(span, lexer.FileIndex(), prefix.Release())));
                                        }
                                        case cm.parser.Operator.minus: 
                                        {
                                            #if (DEBUG)
                                                if (parser_debug_write_to_log)
                                                {
                                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Prefix");
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                }
                                            #endif
                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.UnaryMinusNode(span, lexer.FileIndex(), prefix.Release())));
                                        }
                                        case cm.parser.Operator.not_: 
                                        {
                                            #if (DEBUG)
                                                if (parser_debug_write_to_log)
                                                {
                                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Prefix");
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                }
                                            #endif
                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.NotNode(span, lexer.FileIndex(), prefix.Release())));
                                        }
                                        case cm.parser.Operator.complement: 
                                        {
                                            #if (DEBUG)
                                                if (parser_debug_write_to_log)
                                                {
                                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Prefix");
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                }
                                            #endif
                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.ComplementNode(span, lexer.FileIndex(), prefix.Release())));
                                        }
                                        case cm.parser.Operator.deref: 
                                        {
                                            #if (DEBUG)
                                                if (parser_debug_write_to_log)
                                                {
                                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Prefix");
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                }
                                            #endif
                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.DerefNode(span, lexer.FileIndex(), prefix.Release())));
                                        }
                                        case cm.parser.Operator.addrOf: 
                                        {
                                            #if (DEBUG)
                                                if (parser_debug_write_to_log)
                                                {
                                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Prefix");
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                }
                                            #endif
                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.AddrOfNode(span, lexer.FileIndex(), prefix.Release())));
                                        }
                                    }
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
                if (!match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch6 = &match;
                    lexer.SetPos(save);
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Postfix(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            postfix.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                #if (DEBUG)
                                    if (parser_debug_write_to_log)
                                    {
                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Prefix");
                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                    }
                                #endif
                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, postfix.Release()));
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch6 = match;
                    }
                    *parentMatch0 = match;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Prefix");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Prefix");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> PrefixOp(LexerT& lexer)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"PrefixOp");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062036);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case PLUS_PLUS:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == PLUS_PLUS)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrefixOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.plusPlus)));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case MINUS_MINUS:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == MINUS_MINUS)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrefixOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.minusMinus)));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case PLUS:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == PLUS)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrefixOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.plus)));
                        }
                        *parentMatch3 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case MINUS:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch4 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == MINUS)
                        {
                            auto incResult3 = ++lexer;
                            if (incResult3.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrefixOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.minus)));
                        }
                        *parentMatch4 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case EXCLAMATION:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == EXCLAMATION)
                        {
                            auto incResult4 = ++lexer;
                            if (incResult4.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrefixOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.not_)));
                        }
                        *parentMatch5 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case TILDE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch6 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == TILDE)
                        {
                            auto incResult5 = ++lexer;
                            if (incResult5.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult5.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrefixOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.complement)));
                        }
                        *parentMatch6 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case STAR:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == STAR)
                        {
                            auto incResult6 = ++lexer;
                            if (incResult6.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult6.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrefixOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.deref)));
                        }
                        *parentMatch7 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case AMP:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch8 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == AMP)
                        {
                            auto incResult7 = ++lexer;
                            if (incResult7.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult7.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrefixOp");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.parser.Operator>(cm.parser.Operator.addrOf)));
                        }
                        *parentMatch8 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrefixOp");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"PrefixOp");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Postfix(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Postfix");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062037);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> primary;
            System.UniquePtr<cm.ast.IdentifierNode> dotMember;
            System.UniquePtr<cm.ast.IdentifierNode> arrowMember;
            System.UniquePtr<cm.ast.Node> index;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Primary(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            primary.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                expr.Reset(primary.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            switch (*lexer)
                                            {
                                                case PLUS_PLUS:
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch8 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == PLUS_PLUS)
                                                        {
                                                            auto incResult0 = ++lexer;
                                                            if (incResult0.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            expr.Reset(new cm.ast.PostfixIncrementNode(span, lexer.FileIndex(), expr.Release()));
                                                        }
                                                        *parentMatch8 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch7 = match;
                                                    }
                                                    break;
                                                }
                                                case MINUS_MINUS:
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch9 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == MINUS_MINUS)
                                                        {
                                                            auto incResult1 = ++lexer;
                                                            if (incResult1.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            expr.Reset(new cm.ast.PostfixDecrementNode(span, lexer.FileIndex(), expr.Release()));
                                                        }
                                                        *parentMatch9 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch7 = match;
                                                    }
                                                    break;
                                                }
                                                case DOT:
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == DOT)
                                                        {
                                                            auto incResult2 = ++lexer;
                                                            if (incResult2.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch11 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch12 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                dotMember.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    expr.Reset(new cm.ast.DotNode(span, lexer.FileIndex(), expr.Release(), dotMember.Release()));
                                                                }
                                                                *parentMatch12 = match;
                                                            }
                                                            *parentMatch11 = match;
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch7 = match;
                                                    }
                                                    break;
                                                }
                                                case ARROW:
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch13 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == ARROW)
                                                        {
                                                            auto incResult3 = ++lexer;
                                                            if (incResult3.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch13 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch14 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch15 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                arrowMember.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    expr.Reset(new cm.ast.ArrowNode(span, lexer.FileIndex(), expr.Release(), arrowMember.Release()));
                                                                }
                                                                *parentMatch15 = match;
                                                            }
                                                            *parentMatch14 = match;
                                                        }
                                                        *parentMatch13 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch7 = match;
                                                    }
                                                    break;
                                                }
                                                case LBRACKET:
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch16 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch17 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch18 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Parsing.Match match(false);
                                                                if (*lexer == LBRACKET)
                                                                {
                                                                    auto incResult4 = ++lexer;
                                                                    if (incResult4.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                                                    }
                                                                    match.hit = true;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    context->PushParsingLValue(false);
                                                                    context->PushParsingExpressionStatement(false);
                                                                }
                                                                *parentMatch18 = match;
                                                            }
                                                            *parentMatch17 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch19 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch20 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    index.Reset(cast<cm.ast.Node*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        context->PopParsingExpressionStatement();
                                                                        context->PopParsingLValue();
                                                                    }
                                                                    *parentMatch20 = match;
                                                                }
                                                                *parentMatch19 = match;
                                                            }
                                                            *parentMatch17 = match;
                                                        }
                                                        *parentMatch16 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch21 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch22 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Parsing.Match match(false);
                                                                if (*lexer == RBRACKET)
                                                                {
                                                                    auto incResult5 = ++lexer;
                                                                    if (incResult5.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult5.GetErrorId()));
                                                                    }
                                                                    match.hit = true;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    expr.Reset(new cm.ast.IndexingNode(span, lexer.FileIndex(), expr.Release(), index.Release()));
                                                                }
                                                                *parentMatch22 = match;
                                                            }
                                                            *parentMatch21 = match;
                                                        }
                                                        *parentMatch16 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch7 = match;
                                                    }
                                                    break;
                                                }
                                                case LPAREN:
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch23 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch24 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch25 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Parsing.Match match(false);
                                                                if (*lexer == LPAREN)
                                                                {
                                                                    auto incResult6 = ++lexer;
                                                                    if (incResult6.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult6.GetErrorId()));
                                                                    }
                                                                    match.hit = true;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    expr.Reset(new cm.ast.InvokeNode(span, lexer.FileIndex(), expr.Release()));
                                                                }
                                                                *parentMatch25 = match;
                                                            }
                                                            *parentMatch24 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch26 = &match;
                                                            {
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.ArgumentList(lexer, context, expr.Get());
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                *parentMatch26 = match;
                                                            }
                                                            *parentMatch24 = match;
                                                        }
                                                        *parentMatch23 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch27 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            if (*lexer == RPAREN)
                                                            {
                                                                auto incResult7 = ++lexer;
                                                                if (incResult7.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult7.GetErrorId()));
                                                                }
                                                                match.hit = true;
                                                            }
                                                            *parentMatch27 = match;
                                                        }
                                                        *parentMatch23 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch7 = match;
                                                    }
                                                    break;
                                                }
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Postfix");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Postfix");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Postfix");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Primary(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Primary");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062038);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> expr;
            System.UniquePtr<cm.ast.LiteralNode> literal;
            System.UniquePtr<cm.ast.Node> fundamentalType;
            System.UniquePtr<cm.ast.TemplateIdNode> templateId;
            System.UniquePtr<cm.ast.IdentifierNode> id;
            System.UniquePtr<cm.ast.Node> sizeOf;
            System.UniquePtr<cm.ast.Node> typeName;
            System.UniquePtr<cm.ast.Node> typeId;
            System.UniquePtr<cm.ast.Node> castExpr;
            System.UniquePtr<cm.ast.Node> constructExpr;
            System.UniquePtr<cm.ast.Node> newExpr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long save = lexer.GetPos();
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long save = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long save = lexer.GetPos();
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long save = lexer.GetPos();
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long save = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long save = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            long save = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                long save = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    long save = lexer.GetPos();
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long save = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch11 = &match;
                                                        switch (*lexer)
                                                        {
                                                            case LPAREN:
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch12 = &match;
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch13 = &match;
                                                                    {
                                                                        System.Parsing.Match match(false);
                                                                        System.Parsing.Match* parentMatch14 = &match;
                                                                        {
                                                                            long pos = lexer.GetPos();
                                                                            System.Parsing.Match match(false);
                                                                            if (*lexer == LPAREN)
                                                                            {
                                                                                auto incResult0 = ++lexer;
                                                                                if (incResult0.Error())
                                                                                {
                                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                                                }
                                                                                match.hit = true;
                                                                            }
                                                                            if (match.hit)
                                                                            {
                                                                                span = lexer.GetSpan(pos);
                                                                            }
                                                                            *parentMatch14 = match;
                                                                        }
                                                                        *parentMatch13 = match;
                                                                    }
                                                                    if (match.hit)
                                                                    {
                                                                        System.Parsing.Match match(false);
                                                                        System.Parsing.Match* parentMatch15 = &match;
                                                                        {
                                                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                                                            if (matchResult.Error())
                                                                            {
                                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                            }
                                                                            System.Parsing.Match match = matchResult.Value();
                                                                            expr.Reset(cast<cm.ast.Node*>(match.value));
                                                                            *parentMatch15 = match;
                                                                        }
                                                                        *parentMatch13 = match;
                                                                    }
                                                                    *parentMatch12 = match;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch16 = &match;
                                                                    {
                                                                        System.Parsing.Match match(false);
                                                                        System.Parsing.Match* parentMatch17 = &match;
                                                                        {
                                                                            long pos = lexer.GetPos();
                                                                            System.Parsing.Match match(false);
                                                                            if (*lexer == RPAREN)
                                                                            {
                                                                                auto incResult1 = ++lexer;
                                                                                if (incResult1.Error())
                                                                                {
                                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                                                }
                                                                                match.hit = true;
                                                                            }
                                                                            if (match.hit)
                                                                            {
                                                                                #if (DEBUG)
                                                                                    if (parser_debug_write_to_log)
                                                                                    {
                                                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                                                    }
                                                                                #endif
                                                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.ParenthesizedExpressionNode(span, lexer.FileIndex(), expr.Release())));
                                                                            }
                                                                            *parentMatch17 = match;
                                                                        }
                                                                        *parentMatch16 = match;
                                                                    }
                                                                    *parentMatch12 = match;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    *parentMatch11 = match;
                                                                }
                                                                break;
                                                            }
                                                            case CHAR_LITERAL:
                                                            case FALSE:
                                                            case FLOATING_LITERAL:
                                                            case INTEGER_LITERAL:
                                                            case LBRACE:
                                                            case LBRACKET:
                                                            case NULL_LITERAL:
                                                            case STRING_LITERAL:
                                                            case TRUE:
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch18 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.LiteralParser<LexerT>.Literal(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    literal.Reset(cast<cm.ast.LiteralNode*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        #if (DEBUG)
                                                                            if (parser_debug_write_to_log)
                                                                            {
                                                                                auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                                                                if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                                            }
                                                                        #endif
                                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, literal.Release()));
                                                                    }
                                                                    *parentMatch18 = match;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    *parentMatch11 = match;
                                                                }
                                                                break;
                                                            }
                                                            case AUTO:
                                                            case BOOL:
                                                            case BYTE:
                                                            case CHAR:
                                                            case DOUBLE:
                                                            case FLOAT:
                                                            case INT:
                                                            case LONG:
                                                            case SBYTE:
                                                            case SHORT:
                                                            case UCHAR:
                                                            case UINT:
                                                            case ULONG:
                                                            case USHORT:
                                                            case VOID:
                                                            case WCHAR:
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch19 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.FundamentalTypeParser<LexerT>.FundamentalType(lexer);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    fundamentalType.Reset(cast<cm.ast.Node*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        #if (DEBUG)
                                                                            if (parser_debug_write_to_log)
                                                                            {
                                                                                auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                                                                if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                                            }
                                                                        #endif
                                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, fundamentalType.Release()));
                                                                    }
                                                                    *parentMatch19 = match;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    *parentMatch11 = match;
                                                                }
                                                                break;
                                                            }
                                                        }
                                                        *parentMatch10 = match;
                                                        if (!match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch20 = &match;
                                                            lexer.SetPos(save);
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch21 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.TemplateParser<LexerT>.TemplateId(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    templateId.Reset(cast<cm.ast.TemplateIdNode*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        #if (DEBUG)
                                                                            if (parser_debug_write_to_log)
                                                                            {
                                                                                auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                                                                if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                                            }
                                                                        #endif
                                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, templateId.Release()));
                                                                    }
                                                                    *parentMatch21 = match;
                                                                }
                                                                *parentMatch20 = match;
                                                            }
                                                            *parentMatch10 = match;
                                                        }
                                                    }
                                                    *parentMatch9 = match;
                                                    if (!match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch22 = &match;
                                                        lexer.SetPos(save);
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch23 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    #if (DEBUG)
                                                                        if (parser_debug_write_to_log)
                                                                        {
                                                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                                        }
                                                                    #endif
                                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, id.Release()));
                                                                }
                                                                *parentMatch23 = match;
                                                            }
                                                            *parentMatch22 = match;
                                                        }
                                                        *parentMatch9 = match;
                                                    }
                                                }
                                                *parentMatch8 = match;
                                                if (!match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch24 = &match;
                                                    lexer.SetPos(save);
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch25 = &match;
                                                        {
                                                            long pos = lexer.GetPos();
                                                            System.Parsing.Match match(false);
                                                            if (*lexer == THIS)
                                                            {
                                                                auto incResult2 = ++lexer;
                                                                if (incResult2.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                                }
                                                                match.hit = true;
                                                            }
                                                            if (match.hit)
                                                            {
                                                                #if (DEBUG)
                                                                    if (parser_debug_write_to_log)
                                                                    {
                                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                                    }
                                                                #endif
                                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.ThisNode(lexer.GetSpan(pos), lexer.FileIndex())));
                                                            }
                                                            *parentMatch25 = match;
                                                        }
                                                        *parentMatch24 = match;
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                            }
                                            *parentMatch7 = match;
                                            if (!match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch26 = &match;
                                                lexer.SetPos(save);
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch27 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == BASE)
                                                        {
                                                            auto incResult3 = ++lexer;
                                                            if (incResult3.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            #if (DEBUG)
                                                                if (parser_debug_write_to_log)
                                                                {
                                                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                                }
                                                            #endif
                                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.BaseNode(lexer.GetSpan(pos), lexer.FileIndex())));
                                                        }
                                                        *parentMatch27 = match;
                                                    }
                                                    *parentMatch26 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                        }
                                        *parentMatch6 = match;
                                        if (!match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch28 = &match;
                                            lexer.SetPos(save);
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch29 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.SizeOfExpr(lexer, context);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    sizeOf.Reset(cast<cm.ast.Node*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        #if (DEBUG)
                                                            if (parser_debug_write_to_log)
                                                            {
                                                                auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                                                if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                            }
                                                        #endif
                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, sizeOf.Release()));
                                                    }
                                                    *parentMatch29 = match;
                                                }
                                                *parentMatch28 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                    }
                                    *parentMatch5 = match;
                                    if (!match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch30 = &match;
                                        lexer.SetPos(save);
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch31 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.TypeNameExpr(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                typeName.Reset(cast<cm.ast.Node*>(match.value));
                                                if (match.hit)
                                                {
                                                    #if (DEBUG)
                                                        if (parser_debug_write_to_log)
                                                        {
                                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                        }
                                                    #endif
                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, typeName.Release()));
                                                }
                                                *parentMatch31 = match;
                                            }
                                            *parentMatch30 = match;
                                        }
                                        *parentMatch5 = match;
                                    }
                                }
                                *parentMatch4 = match;
                                if (!match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch32 = &match;
                                    lexer.SetPos(save);
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch33 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.TypeIdExpr(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            typeId.Reset(cast<cm.ast.Node*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, typeId.Release()));
                                            }
                                            *parentMatch33 = match;
                                        }
                                        *parentMatch32 = match;
                                    }
                                    *parentMatch4 = match;
                                }
                            }
                            *parentMatch3 = match;
                            if (!match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch34 = &match;
                                lexer.SetPos(save);
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch35 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.CastExpr(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        castExpr.Reset(cast<cm.ast.Node*>(match.value));
                                        if (match.hit)
                                        {
                                            #if (DEBUG)
                                                if (parser_debug_write_to_log)
                                                {
                                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                }
                                            #endif
                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, castExpr.Release()));
                                        }
                                        *parentMatch35 = match;
                                    }
                                    *parentMatch34 = match;
                                }
                                *parentMatch3 = match;
                            }
                        }
                        *parentMatch2 = match;
                        if (!match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch36 = &match;
                            lexer.SetPos(save);
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch37 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.ConstructExpr(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    constructExpr.Reset(cast<cm.ast.Node*>(match.value));
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log)
                                            {
                                                auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                                if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                            }
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, constructExpr.Release()));
                                    }
                                    *parentMatch37 = match;
                                }
                                *parentMatch36 = match;
                            }
                            *parentMatch2 = match;
                        }
                    }
                    *parentMatch1 = match;
                    if (!match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch38 = &match;
                        lexer.SetPos(save);
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch39 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.NewExpr(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                newExpr.Reset(cast<cm.ast.Node*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, newExpr.Release()));
                                }
                                *parentMatch39 = match;
                            }
                            *parentMatch38 = match;
                        }
                        *parentMatch1 = match;
                    }
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Primary");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Primary");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ArgumentList(LexerT& lexer, cm.parser.Context* context, cm.ast.Node* owner)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ArgumentList");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062039);
            System.Parsing.Match match(true);
            long save = lexer.GetPos();
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.ExpressionList(lexer, context, owner);
                if (matchResult.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                }
                System.Parsing.Match match = matchResult.Value();
                if (match.hit)
                {
                    *parentMatch0 = match;
                }
                else
                {
                    lexer.SetPos(save);
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ArgumentList");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ArgumentList");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ExpressionList(LexerT& lexer, cm.parser.Context* context, cm.ast.Node* owner)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ExpressionList");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062040);
            System.UniquePtr<cm.ast.Node> arg;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(true);
                        if (match.hit)
                        {
                            context->BeginParsingArguments();
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        arg.Reset(cast<cm.ast.Node*>(match.value));
                                        if (match.hit)
                                        {
                                            owner->AddArgument(arg.Release());
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch8 = &match;
                                    {
                                        System.Parsing.Match match(true);
                                        System.Parsing.Match* parentMatch9 = &match;
                                        {
                                            while (true)
                                            {
                                                long save = lexer.GetPos();
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == COMMA)
                                                        {
                                                            auto incResult0 = ++lexer;
                                                            if (incResult0.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch11 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch12 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                arg.Reset(cast<cm.ast.Node*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    owner->AddArgument(arg.Release());
                                                                }
                                                                *parentMatch12 = match;
                                                            }
                                                            *parentMatch11 = match;
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch9 = match;
                                                    }
                                                    else
                                                    {
                                                        lexer.SetPos(save);
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        *parentMatch8 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                            }
                            if (match.hit)
                            {
                                context->EndParsingArguments();
                            }
                            else
                            {
                                context->EndParsingArguments();
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ExpressionList");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ExpressionList");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> SizeOfExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"SizeOfExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062041);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> expr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == SIZEOF)
                                    {
                                        auto incResult0 = ++lexer;
                                        if (incResult0.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        span = lexer.GetSpan(pos);
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == LPAREN)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                expr.Reset(cast<cm.ast.Node*>(match.value));
                                *parentMatch7 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch8 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RPAREN)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch8 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SizeOfExpr");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.SizeOfNode(span, lexer.FileIndex(), expr.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SizeOfExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"SizeOfExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> TypeNameExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"TypeNameExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062042);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> expr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == TYPENAME)
                                    {
                                        auto incResult0 = ++lexer;
                                        if (incResult0.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        span = lexer.GetSpan(pos);
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == LPAREN)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                expr.Reset(cast<cm.ast.Node*>(match.value));
                                *parentMatch7 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch8 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RPAREN)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch8 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeNameExpr");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.TypeNameNode(span, lexer.FileIndex(), expr.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeNameExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"TypeNameExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> TypeIdExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"TypeIdExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062043);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> expr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == TYPEID)
                                    {
                                        auto incResult0 = ++lexer;
                                        if (incResult0.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        span = lexer.GetSpan(pos);
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == LPAREN)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                expr.Reset(cast<cm.ast.Node*>(match.value));
                                *parentMatch7 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch8 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RPAREN)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch8 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeIdExpr");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.TypeIdNode(span, lexer.FileIndex(), expr.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeIdExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"TypeIdExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> CastExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"CastExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062044);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> typeExpr;
            System.UniquePtr<cm.ast.Node> expr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                if (*lexer == CAST)
                                                {
                                                    auto incResult0 = ++lexer;
                                                    if (incResult0.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                if (match.hit)
                                                {
                                                    span = lexer.GetSpan(pos);
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch9 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                if (*lexer == LANGLE)
                                                {
                                                    auto incResult1 = ++lexer;
                                                    if (incResult1.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                *parentMatch9 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch10 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            typeExpr.Reset(cast<cm.ast.Node*>(match.value));
                                            *parentMatch10 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch11 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == RANGLE)
                                        {
                                            auto incResult2 = ++lexer;
                                            if (incResult2.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch11 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch12 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == LPAREN)
                                    {
                                        auto incResult3 = ++lexer;
                                        if (incResult3.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch12 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch13 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                expr.Reset(cast<cm.ast.Node*>(match.value));
                                *parentMatch13 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch14 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RPAREN)
                            {
                                auto incResult4 = ++lexer;
                                if (incResult4.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch14 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"CastExpr");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.CastNode(span, lexer.FileIndex(), typeExpr.Release(), expr.Release())));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"CastExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"CastExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ConstructExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ConstructExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062045);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> typeExpr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        if (*lexer == CONSTRUCT)
                                        {
                                            auto incResult0 = ++lexer;
                                            if (incResult0.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            span = lexer.GetSpan(pos);
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch9 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch10 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch11 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == LANGLE)
                                                        {
                                                            auto incResult1 = ++lexer;
                                                            if (incResult1.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch11 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch12 = &match;
                                                        {
                                                            System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                                            if (matchResult.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                            }
                                                            System.Parsing.Match match = matchResult.Value();
                                                            typeExpr.Reset(cast<cm.ast.Node*>(match.value));
                                                            *parentMatch12 = match;
                                                        }
                                                        *parentMatch11 = match;
                                                    }
                                                    *parentMatch10 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch13 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == RANGLE)
                                                        {
                                                            auto incResult2 = ++lexer;
                                                            if (incResult2.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch13 = match;
                                                    }
                                                    *parentMatch10 = match;
                                                }
                                                *parentMatch9 = match;
                                            }
                                            if (match.hit)
                                            {
                                                expr.Reset(new cm.ast.ConstructNode(span, lexer.FileIndex(), typeExpr.Release()));
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch14 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == LPAREN)
                                    {
                                        auto incResult3 = ++lexer;
                                        if (incResult3.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch14 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch15 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.ExpressionList(lexer, context, expr.Get());
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                *parentMatch15 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch16 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RPAREN)
                            {
                                auto incResult4 = ++lexer;
                                if (incResult4.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch16 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConstructExpr");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConstructExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ConstructExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> NewExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"NewExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062046);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> typeExpr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == NEW)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    span = lexer.GetSpan(pos);
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    typeExpr.Reset(cast<cm.ast.Node*>(match.value));
                                    if (match.hit)
                                    {
                                        expr.Reset(new cm.ast.NewNode(span, lexer.FileIndex(), typeExpr.Release()));
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(true);
                            long save = lexer.GetPos();
                            System.Parsing.Match* parentMatch8 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch9 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch10 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch11 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            if (*lexer == LPAREN)
                                            {
                                                auto incResult1 = ++lexer;
                                                if (incResult1.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            *parentMatch11 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch12 = &match;
                                            {
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.ArgumentList(lexer, context, expr.Get());
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                *parentMatch12 = match;
                                            }
                                            *parentMatch11 = match;
                                        }
                                        *parentMatch10 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch13 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            if (*lexer == RPAREN)
                                            {
                                                auto incResult2 = ++lexer;
                                                if (incResult2.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            *parentMatch13 = match;
                                        }
                                        *parentMatch10 = match;
                                    }
                                    *parentMatch9 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch8 = match;
                                }
                                else
                                {
                                    lexer.SetPos(save);
                                }
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"NewExpr");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"NewExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"NewExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> InvokeExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"InvokeExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 1106159468351062047);
            UniquePtr<cm.ast.Node> expr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.TemplateIdNode> templateId;
            System.UniquePtr<cm.ast.IdentifierNode> id;
            System.UniquePtr<cm.ast.IdentifierNode> dotMemberId;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long save = lexer.GetPos();
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.TemplateParser<LexerT>.TemplateId(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                templateId.Reset(cast<cm.ast.TemplateIdNode*>(match.value));
                                if (match.hit)
                                {
                                    span = lexer.GetSpan(pos);
                                    expr.Reset(templateId.Release());
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                            if (!match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                lexer.SetPos(save);
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                        if (match.hit)
                                        {
                                            span = lexer.GetSpan(pos);
                                            expr.Reset(id.Release());
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch3 = match;
                            }
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        System.Parsing.Match match(true);
                        System.Parsing.Match* parentMatch8 = &match;
                        {
                            while (true)
                            {
                                long save = lexer.GetPos();
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch9 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch10 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            if (*lexer == DOT)
                                            {
                                                auto incResult0 = ++lexer;
                                                if (incResult0.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            *parentMatch10 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch11 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch12 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    dotMemberId.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        expr.Reset(new cm.ast.DotNode(span, lexer.FileIndex(), expr.Release(), dotMemberId.Release()));
                                                    }
                                                    *parentMatch12 = match;
                                                }
                                                *parentMatch11 = match;
                                            }
                                            *parentMatch10 = match;
                                        }
                                        *parentMatch9 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch8 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                        break;
                                    }
                                }
                            }
                        }
                        *parentMatch7 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch13 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch14 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch15 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch16 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch17 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch18 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        if (*lexer == LPAREN)
                                        {
                                            auto incResult1 = ++lexer;
                                            if (incResult1.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            expr.Reset(new cm.ast.InvokeNode(span, lexer.FileIndex(), expr.Release()));
                                        }
                                        *parentMatch18 = match;
                                    }
                                    *parentMatch17 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch19 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.ArgumentList(lexer, context, expr.Get());
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        *parentMatch19 = match;
                                    }
                                    *parentMatch17 = match;
                                }
                                *parentMatch16 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch20 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == RPAREN)
                                    {
                                        auto incResult2 = ++lexer;
                                        if (incResult2.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch20 = match;
                                }
                                *parentMatch16 = match;
                            }
                            *parentMatch15 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"InvokeExpr");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, expr.Release()));
                        }
                        *parentMatch14 = match;
                    }
                    *parentMatch13 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"InvokeExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"InvokeExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
    }
}

new class cm.parser.ExpressionParser<cm.lexer.CmajorLexer>;

