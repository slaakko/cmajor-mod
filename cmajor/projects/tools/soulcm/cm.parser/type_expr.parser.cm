// this file has been generated from 'C:/work/cmajor-mod/cmajor/projects/tools/soulcm/scmpg.parser/../cm.parser/type_expr.parser' using SoulCm parser generator scmpg version 5.0.0

using System;
using System.Lex;
using System.Parsing;
using cm.ast;
using cm.token;

namespace cm.parser
{
    public static class TypeExprParser<LexerT>
    {
        public static System.Result<System.Parsing.Match> TypeExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"TypeExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6032173986891169793);
            System.UniquePtr<cm.ast.Node> prefixTypeExpr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.PrefixTypeExpr(lexer, context);
                if (matchResult.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                }
                System.Parsing.Match match = matchResult.Value();
                prefixTypeExpr.Reset(cast<cm.ast.Node*>(match.value));
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeExpr");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, prefixTypeExpr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"TypeExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> PrefixTypeExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"PrefixTypeExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6032173986891169794);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> constTypeExpr;
            System.UniquePtr<cm.ast.Node> postfixTypeExpr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long save = lexer.GetPos();
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == CONST)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.PostfixTypeExpr(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                constTypeExpr.Reset(cast<cm.ast.Node*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrefixTypeExpr");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.ConstNode(span, lexer.FileIndex(), constTypeExpr.Release())));
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                    if (!match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        lexer.SetPos(save);
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.PostfixTypeExpr(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                postfixTypeExpr.Reset(cast<cm.ast.Node*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrefixTypeExpr");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, postfixTypeExpr.Release()));
                                }
                                *parentMatch7 = match;
                            }
                            *parentMatch6 = match;
                        }
                        *parentMatch1 = match;
                    }
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrefixTypeExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"PrefixTypeExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> PostfixTypeExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"PostfixTypeExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6032173986891169795);
            UniquePtr<cm.ast.Node> typeExpr = UniquePtr<cm.ast.Node>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.Node> primaryTypeExpr;
            System.UniquePtr<cm.ast.Node> size;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.PrimaryTypeExpr(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            primaryTypeExpr.Reset(cast<cm.ast.Node*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                typeExpr.Reset(primaryTypeExpr.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            switch (*lexer)
                                            {
                                                case DOT:
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch8 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == DOT)
                                                        {
                                                            auto incResult0 = ++lexer;
                                                            if (incResult0.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch8 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch9 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch10 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Parsing.Match match(false);
                                                                if (*lexer == ID)
                                                                {
                                                                    auto incResult1 = ++lexer;
                                                                    if (incResult1.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                                    }
                                                                    match.hit = true;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    typeExpr.Reset(new cm.ast.DotNode(span, lexer.FileIndex(), typeExpr.Release(), new cm.ast.IdentifierNode(lexer.GetSpan(pos), lexer.FileIndex(), lexer.GetToken(pos).ToString())));
                                                                }
                                                                *parentMatch10 = match;
                                                            }
                                                            *parentMatch9 = match;
                                                        }
                                                        *parentMatch8 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch7 = match;
                                                    }
                                                    break;
                                                }
                                                case STAR:
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch11 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == STAR)
                                                        {
                                                            auto incResult2 = ++lexer;
                                                            if (incResult2.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            typeExpr.Reset(new cm.ast.PointerNode(span, lexer.FileIndex(), typeExpr.Release()));
                                                        }
                                                        *parentMatch11 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch7 = match;
                                                    }
                                                    break;
                                                }
                                                case AMP_AMP:
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch12 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == AMP_AMP)
                                                        {
                                                            auto incResult3 = ++lexer;
                                                            if (incResult3.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            typeExpr.Reset(new cm.ast.RValueRefNode(span, lexer.FileIndex(), typeExpr.Release()));
                                                        }
                                                        *parentMatch12 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch7 = match;
                                                    }
                                                    break;
                                                }
                                                case AMP:
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch13 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == AMP)
                                                        {
                                                            auto incResult4 = ++lexer;
                                                            if (incResult4.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            typeExpr.Reset(new cm.ast.LValueRefNode(span, lexer.FileIndex(), typeExpr.Release()));
                                                        }
                                                        *parentMatch13 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch7 = match;
                                                    }
                                                    break;
                                                }
                                                case LBRACKET:
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch14 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch15 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            if (*lexer == LBRACKET)
                                                            {
                                                                auto incResult5 = ++lexer;
                                                                if (incResult5.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult5.GetErrorId()));
                                                                }
                                                                match.hit = true;
                                                            }
                                                            *parentMatch15 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch16 = &match;
                                                            {
                                                                System.Parsing.Match match(true);
                                                                long save = lexer.GetPos();
                                                                System.Parsing.Match* parentMatch17 = &match;
                                                                {
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    size.Reset(cast<cm.ast.Node*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        *parentMatch17 = match;
                                                                    }
                                                                    else
                                                                    {
                                                                        lexer.SetPos(save);
                                                                    }
                                                                }
                                                                *parentMatch16 = match;
                                                            }
                                                            *parentMatch15 = match;
                                                        }
                                                        *parentMatch14 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch18 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch19 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Parsing.Match match(false);
                                                                if (*lexer == RBRACKET)
                                                                {
                                                                    auto incResult6 = ++lexer;
                                                                    if (incResult6.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult6.GetErrorId()));
                                                                    }
                                                                    match.hit = true;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    typeExpr.Reset(new cm.ast.ArrayNode(span, lexer.FileIndex(), typeExpr.Release(), size.Release()));
                                                                }
                                                                *parentMatch19 = match;
                                                            }
                                                            *parentMatch18 = match;
                                                        }
                                                        *parentMatch14 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch7 = match;
                                                    }
                                                    break;
                                                }
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PostfixTypeExpr");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, typeExpr.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PostfixTypeExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"PostfixTypeExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> PrimaryTypeExpr(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"PrimaryTypeExpr");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 6032173986891169796);
            System.UniquePtr<cm.ast.Node> fundamentalType;
            System.UniquePtr<cm.ast.TemplateIdNode> templateId;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long save = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long save = lexer.GetPos();
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = cm.parser.FundamentalTypeParser<LexerT>.FundamentalType(lexer);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        fundamentalType.Reset(cast<cm.ast.Node*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrimaryTypeExpr");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, fundamentalType.Release()));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                    if (!match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        lexer.SetPos(save);
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.TemplateParser<LexerT>.TemplateId(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                templateId.Reset(cast<cm.ast.TemplateIdNode*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrimaryTypeExpr");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, templateId.Release()));
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch1 = match;
                    }
                }
                *parentMatch0 = match;
                if (!match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    lexer.SetPos(save);
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == ID)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                #if (DEBUG)
                                    if (parser_debug_write_to_log)
                                    {
                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrimaryTypeExpr");
                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                    }
                                #endif
                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.IdentifierNode(lexer.GetSpan(pos), lexer.FileIndex(), lexer.GetToken(pos).ToString())));
                            }
                            *parentMatch6 = match;
                        }
                        *parentMatch5 = match;
                    }
                    *parentMatch0 = match;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PrimaryTypeExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"PrimaryTypeExpr");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
    }
}

new class cm.parser.TypeExprParser<cm.lexer.CmajorLexer>;

