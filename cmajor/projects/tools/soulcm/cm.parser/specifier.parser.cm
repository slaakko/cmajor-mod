// this file has been automatically generated from 'C:/work/cmajor-mod/cmajor/projects/tools/soulcm/cm.parser/specifier.parser' using soul parser generator spg version 5.0.0

using System;
using System.Lex;
using System.Parsing;
using cm.ast;
using cm.token;

namespace cm.parser
{
    public static class SpecifierParser<LexerT>
    {
        public static Result<System.Parsing.Match> Specifiers(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8559150220632391681);
            cm.ast.Specifiers specifiers = cm.ast.Specifiers();
            UniquePtr<System.Parsing.Value<cm.ast.Specifiers>> specifier;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(true);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        while (true)
                        {
                            long save = lexer.GetPos();
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch3 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch4 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        Result<System.Parsing.Match> matchResult = SpecifierParser<LexerT>.Specifier(lexer);
                                        if (matchResult.Error())
                                        {
                                            return Result<System.Parsing.Match>(ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        specifier.Reset(cast<System.Parsing.Value<cm.ast.Specifiers>*>(match.value));
                                        if (match.hit)
                                        {
                                            specifiers = specifiers | specifier->value;
                                        }
                                        *parentMatch4 = match;
                                    }
                                    *parentMatch3 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch2 = match;
                                }
                                else
                                {
                                    lexer.SetPos(save);
                                    break;
                                }
                            }
                        }
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(specifiers)));
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        public static Result<System.Parsing.Match> Specifier(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8559150220632391682);
            System.Parsing.Match match(false);
            long pos = lexer.GetPos();
            switch (*lexer)
            {
                case PUBLIC:
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.public_)));
                    }
                    break;
                }
                case PROTECTED:
                {
                    auto incResult1 = ++lexer; 
                    if (incResult1.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult1.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.protected_)));
                    }
                    break;
                }
                case PRIVATE:
                {
                    auto incResult2 = ++lexer; 
                    if (incResult2.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult2.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.private_)));
                    }
                    break;
                }
                case INTERNAL:
                {
                    auto incResult3 = ++lexer; 
                    if (incResult3.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult3.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.internal_)));
                    }
                    break;
                }
                case STATIC:
                {
                    auto incResult4 = ++lexer; 
                    if (incResult4.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult4.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.static_)));
                    }
                    break;
                }
                case VIRTUAL:
                {
                    auto incResult5 = ++lexer; 
                    if (incResult5.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult5.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.virtual_)));
                    }
                    break;
                }
                case OVERRIDE:
                {
                    auto incResult6 = ++lexer; 
                    if (incResult6.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult6.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.override_)));
                    }
                    break;
                }
                case ABSTRACT:
                {
                    auto incResult7 = ++lexer; 
                    if (incResult7.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult7.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.abstract_)));
                    }
                    break;
                }
                case INLINE:
                {
                    auto incResult8 = ++lexer; 
                    if (incResult8.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult8.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.inline_)));
                    }
                    break;
                }
                case EXPLICIT:
                {
                    auto incResult9 = ++lexer; 
                    if (incResult9.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult9.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.explicit_)));
                    }
                    break;
                }
                case EXTERN:
                {
                    auto incResult10 = ++lexer; 
                    if (incResult10.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult10.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.external_)));
                    }
                    break;
                }
                case SUPPRESS:
                {
                    auto incResult11 = ++lexer; 
                    if (incResult11.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult11.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.suppress_)));
                    }
                    break;
                }
                case DEFAULT:
                {
                    auto incResult12 = ++lexer; 
                    if (incResult12.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult12.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.default_)));
                    }
                    break;
                }
                case CONSTEXPR:
                {
                    auto incResult13 = ++lexer; 
                    if (incResult13.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult13.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.constexpr_)));
                    }
                    break;
                }
                case CDECL:
                {
                    auto incResult14 = ++lexer; 
                    if (incResult14.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult14.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.cdecl_)));
                    }
                    break;
                }
                case NOTHROW:
                {
                    auto incResult15 = ++lexer; 
                    if (incResult15.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult15.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.nothrow_)));
                    }
                    break;
                }
                case THROW:
                {
                    auto incResult16 = ++lexer; 
                    if (incResult16.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult16.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.throw_)));
                    }
                    break;
                }
                case NEW:
                {
                    auto incResult17 = ++lexer; 
                    if (incResult17.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult17.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.new_)));
                    }
                    break;
                }
                case UNIT_TEST:
                {
                    auto incResult18 = ++lexer; 
                    if (incResult18.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult18.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.unit_test_)));
                    }
                    break;
                }
                case WINAPI:
                {
                    auto incResult19 = ++lexer; 
                    if (incResult19.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult19.GetErrorId()));
                    }
                    {
                        return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<cm.ast.Specifiers>(cm.ast.Specifiers.winapi_)));
                    }
                    break;
                }
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
    }

    new class SpecifierParser<CmajorLexer>;

} // namespace cm.parser
