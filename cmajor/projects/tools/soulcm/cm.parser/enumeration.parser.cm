// this file has been generated from 'C:/work/cmajor-mod/cmajor/projects/tools/soulcm/cm.parser/enumeration.parser' using SoulCm parser generator scmpg version 5.0.0

using System;
using System.Lex;
using System.Parsing;
using cm.ast;
using cm.token;

namespace cm.parser
{
    public static class EnumerationParser<LexerT>
    {
        public static System.Result<System.Parsing.Match> EnumType(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"EnumType");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 3399273135097249793);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.EnumTypeNode> enumType = UniquePtr<cm.ast.EnumTypeNode>();
            System.UniquePtr<System.Parsing.Value<cm.ast.Specifiers>> specifiers;
            System.UniquePtr<cm.ast.IdentifierNode> id;
            System.UniquePtr<cm.ast.Node> underlyingType;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.SpecifierParser<LexerT>.Specifiers(lexer);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                specifiers.Reset(cast<System.Parsing.Value<cm.ast.Specifiers>*>(match.value));
                                                if (match.hit)
                                                {
                                                    span = lexer.GetSpan(pos);
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch9 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                if (*lexer == ENUM)
                                                {
                                                    auto incResult0 = ++lexer;
                                                    if (incResult0.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                *parentMatch9 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch10 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch11 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    enumType.Reset(new cm.ast.EnumTypeNode(span, lexer.FileIndex(), specifiers->value, id.Release()));
                                                }
                                                *parentMatch11 = match;
                                            }
                                            *parentMatch10 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch12 = &match;
                                    {
                                        System.Parsing.Match match(true);
                                        long save = lexer.GetPos();
                                        System.Parsing.Match* parentMatch13 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch14 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch15 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.EnumerationParser<LexerT>.UnderlyingType(lexer, context);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    underlyingType.Reset(cast<cm.ast.Node*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        enumType->SetUnderlyingType(underlyingType.Release());
                                                    }
                                                    *parentMatch15 = match;
                                                }
                                                *parentMatch14 = match;
                                            }
                                            if (match.hit)
                                            {
                                                *parentMatch13 = match;
                                            }
                                            else
                                            {
                                                lexer.SetPos(save);
                                            }
                                        }
                                        *parentMatch12 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch16 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == LBRACE)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch16 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch17 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.EnumerationParser<LexerT>.EnumConstants(lexer, context, enumType.Get());
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                *parentMatch17 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch18 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RBRACE)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch18 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"EnumType");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, enumType.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"EnumType");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"EnumType");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> UnderlyingType(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"UnderlyingType");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 3399273135097249794);
            System.UniquePtr<cm.ast.Node> underlyingType;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == COLON)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = cm.parser.TypeExprParser<LexerT>.TypeExpr(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            underlyingType.Reset(cast<cm.ast.Node*>(match.value));
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnderlyingType");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, underlyingType.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnderlyingType");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"UnderlyingType");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> EnumConstants(LexerT& lexer, cm.parser.Context* context, cm.ast.EnumTypeNode* enumType)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"EnumConstants");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 3399273135097249795);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.EnumConstantNode> enumConstant;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = cm.parser.EnumerationParser<LexerT>.EnumConstant(lexer, context, enumType);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        enumConstant.Reset(cast<cm.ast.EnumConstantNode*>(match.value));
                        if (match.hit)
                        {
                            enumType->AddConstant(enumConstant.Release());
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        System.Parsing.Match match(true);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            while (true)
                            {
                                long save = lexer.GetPos();
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch5 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult0 = ++lexer;
                                            if (incResult0.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch5 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.EnumerationParser<LexerT>.EnumConstant(lexer, context, enumType);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                enumConstant.Reset(cast<cm.ast.EnumConstantNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    enumType->AddConstant(enumConstant.Release());
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        *parentMatch5 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch4 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                        break;
                                    }
                                }
                            }
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"EnumConstants");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"EnumConstants");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> EnumConstant(LexerT& lexer, cm.parser.Context* context, cm.ast.EnumTypeNode* enumType)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"EnumConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 3399273135097249796);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.IdentifierNode> id;
            System.UniquePtr<cm.ast.Node> value;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.Identifier(lexer);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                        if (match.hit)
                        {
                            span = lexer.GetSpan(pos);
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                long save = lexer.GetPos();
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == ASSIGN)
                                    {
                                        auto incResult0 = ++lexer;
                                        if (incResult0.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch6 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ExpressionParser<LexerT>.Expression(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            value.Reset(cast<cm.ast.Node*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"EnumConstant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                cm.ast.EnumConstantNode* enumConstant = new cm.ast.EnumConstantNode(span, lexer.FileIndex(), id.Release(), value.Release());
                                                enumConstant->SetHasValue();
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, enumConstant));
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                                if (!match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch9 = &match;
                                    lexer.SetPos(save);
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch10 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(true);
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"EnumConstant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.EnumConstantNode(span, lexer.FileIndex(), id.Release(), cm.ast.MakeNextEnumConstantValue(span, lexer.FileIndex(), enumType))));
                                            }
                                            *parentMatch10 = match;
                                        }
                                        *parentMatch9 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"EnumConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"EnumConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
    }
}

new class cm.parser.EnumerationParser<cm.lexer.CmajorLexer>;

