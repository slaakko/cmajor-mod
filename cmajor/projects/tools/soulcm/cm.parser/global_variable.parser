// =================================
// Copyright (c) 2024 Seppo Laakko
// Distributed under the MIT license
// =================================

export module cm.parser;

import cm.ast;
import cm.token;

parser GlobalVariableParser
{
    lexer CmajorLexer;

    using SpecifierParser.Specifiers;
    using IdentifierParser.Identifier;
    using TypeExprParser.TypeExpr;
    using ExpressionParser.Expression;

    GlobalVariable(cm.parser.Context* context, var System.Lex.Span span) : cm.ast.GlobalVariableNode*
        ::=
        (
            Specifiers:specifiers{ span = lexer.GetSpan(pos); }
            TypeExpr(context):type
            Identifier:id
            (
                ASSIGN
                Expression(context):initializer
            )?
            SEMICOLON
        )
        {
            return new cm.ast.GlobalVariableNode(span, lexer.FileIndex(), specifiers, type, id, initializer);
        }
        ;
}
