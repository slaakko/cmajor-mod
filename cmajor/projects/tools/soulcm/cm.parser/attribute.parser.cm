// this file has been generated from 'C:/work/cmajor-mod/cmajor/projects/tools/soulcm/cm.parser/attribute.parser' using SoulCm parser generator scmpg version 5.0.0

using System;
using System.Lex;
using System.Parsing;
using cm.ast;
using cm.token;

namespace cm.parser
{
    public static class AttributeParser<LexerT>
    {
        public static System.Result<System.Parsing.Match> Attributes(LexerT& lexer, cm.parser.Context* context)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 9159366711927898113);
            UniquePtr<cm.ast.AttributesNode> attributesNode = UniquePtr<cm.ast.AttributesNode>();
            System.UniquePtr<System.Parsing.Value<bool>> first;
            System.UniquePtr<System.Parsing.Value<bool>> next;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == LBRACKET)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    attributesNode.Reset(new cm.ast.AttributesNode(lexer.GetSpan(pos), lexer.FileIndex()));
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(true);
                                long save = lexer.GetPos();
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.AttributeParser<LexerT>.Attribute(lexer, context, attributesNode.Get());
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            first.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                            *parentMatch8 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch9 = &match;
                                            {
                                                System.Parsing.Match match(true);
                                                System.Parsing.Match* parentMatch10 = &match;
                                                {
                                                    while (true)
                                                    {
                                                        long save = lexer.GetPos();
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch11 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch12 = &match;
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    if (*lexer == COMMA)
                                                                    {
                                                                        auto incResult1 = ++lexer;
                                                                        if (incResult1.Error())
                                                                        {
                                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                                        }
                                                                        match.hit = true;
                                                                    }
                                                                    *parentMatch12 = match;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch13 = &match;
                                                                    {
                                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.AttributeParser<LexerT>.Attribute(lexer, context, attributesNode.Get());
                                                                        if (matchResult.Error())
                                                                        {
                                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                        }
                                                                        System.Parsing.Match match = matchResult.Value();
                                                                        next.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                                                        *parentMatch13 = match;
                                                                    }
                                                                    *parentMatch12 = match;
                                                                }
                                                                *parentMatch11 = match;
                                                            }
                                                            if (match.hit)
                                                            {
                                                                *parentMatch10 = match;
                                                            }
                                                            else
                                                            {
                                                                lexer.SetPos(save);
                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                                *parentMatch9 = match;
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch6 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                    }
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch14 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RBRACKET)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch14 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, attributesNode.Release()));
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Attribute(LexerT& lexer, cm.parser.Context* context, cm.ast.AttributesNode* attributes)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 9159366711927898114);
            ustring name = ustring();
            ustring value = ustring();
            System.Lex.Span span = System.Lex.Span();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(true);
                                if (match.hit)
                                {
                                    value = u"true";
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == ID)
                                    {
                                        auto incResult0 = ++lexer;
                                        if (incResult0.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        span = lexer.GetSpan(pos);
                                        name = lexer.GetToken(pos).ToString();
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(true);
                            long save = lexer.GetPos();
                            System.Parsing.Match* parentMatch8 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch9 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch10 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == ASSIGN)
                                        {
                                            auto incResult1 = ++lexer;
                                            if (incResult1.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch10 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch11 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch12 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                if (*lexer == STRING_LITERAL)
                                                {
                                                    auto incResult2 = ++lexer;
                                                    if (incResult2.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                if (match.hit)
                                                {
                                                    cm.ast.StringLiteralPrefix prefix = cm.ast.StringLiteralPrefix.none;
                                                    auto result = ParseStringLiteral(lexer.FileName(), lexer.GetToken(pos), prefix);
                                                    if (result.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                                    }
                                                    value = result.Value();
                                                }
                                                *parentMatch12 = match;
                                            }
                                            *parentMatch11 = match;
                                        }
                                        *parentMatch10 = match;
                                    }
                                    *parentMatch9 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch8 = match;
                                }
                                else
                                {
                                    lexer.SetPos(save);
                                }
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    attributes->AddAttribute(span, lexer.FileIndex(), name, value);
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<bool>(true)));
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
    }
}

new class cm.parser.AttributeParser<cm.lexer.CmajorLexer>;

