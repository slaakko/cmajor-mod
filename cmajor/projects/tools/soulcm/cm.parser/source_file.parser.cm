// this file has been generated from 'C:/work/cmajor-mod/cmajor/projects/tools/soulcm/cm.parser/source_file.parser' using SoulCm parser generator scmpg version 5.0.0

using System;
using System.Lex;
using System.Parsing;
using cm.ast;
using cm.token;

namespace cm.parser
{
    public static class SourceFileParser<LexerT>
    {
        public static System.Result<System.UniquePtr<cm.ast.SourceFileNode>> Parse(LexerT& lexer, cm.parser.Context* context)
        {
            System.UniquePtr<cm.ast.SourceFileNode> value;
            #if (DEBUG)
            if (lexer.Log() != null)
            {
                auto result = lexer.Log()->WriteBeginRule(u"parse");
                if (result.Error())
                {
                    return System.Result<System.UniquePtr<cm.ast.SourceFileNode>>(System.ErrorId(result.GetErrorId())); 
                }
                lexer.Log()->IncIndent();
            }
            #endif
            auto incResult1 = ++lexer; 
            if (incResult1.Error())
            {
                return System.Result<System.UniquePtr<cm.ast.SourceFileNode>>(System.ErrorId(incResult1.GetErrorId())); 
            }
            System.Result<System.Parsing.Match> matchResult = cm.parser.SourceFileParser<LexerT>.SourceFile(lexer, context);
            if (matchResult.Error())
            {
                return System.Result<System.UniquePtr<cm.ast.SourceFileNode>>(System.ErrorId(matchResult.GetErrorId()));
            }
            System.Parsing.Match match = matchResult.Value();
            value.Reset(cast<cm.ast.SourceFileNode*>(match.value));
            #if (DEBUG)
            if (lexer.Log() != null)
            {
                lexer.Log()->DecIndent();
                auto result = lexer.Log()->WriteEndRule(u"parse");
                if (result.Error())
                {
                    return System.Result<System.UniquePtr<cm.ast.SourceFileNode>>(System.ErrorId(result.GetErrorId())); 
                }
            }
            #endif
            if (match.hit)
            {
                if (*lexer == System.Lex.END_TOKEN)
                {
                    return System.Result<System.UniquePtr<cm.ast.SourceFileNode>>(System.Rvalue(value)); 
                }
                else
                {
                    return System.Result<System.UniquePtr<cm.ast.SourceFileNode>>(lexer.GetFarthestError()); 
                }
            }
            else
            {
                return System.Result<System.UniquePtr<cm.ast.SourceFileNode>>(lexer.GetFarthestError()); 
            }
        }
        public static System.Result<System.Parsing.Match> SourceFile(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"SourceFile");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 686527724579192833);
            UniquePtr<cm.ast.SourceFileNode> sourceFileNode = UniquePtr<cm.ast.SourceFileNode>();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Parsing.Match match(true);
                    if (match.hit)
                    {
                        sourceFileNode.Reset(new cm.ast.SourceFileNode(lexer.GetSpan(pos), lexer.FileIndex(), lexer.FileName()));
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch2 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = cm.parser.SourceFileParser<LexerT>.NamespaceContent(lexer, context, sourceFileNode->GlobalNs());
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            *parentMatch4 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SourceFile");
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, sourceFileNode.Release()));
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch2 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SourceFile");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"SourceFile");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> NamespaceContent(LexerT& lexer, cm.parser.Context* context, cm.ast.NamespaceNode* ns)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"NamespaceContent");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 686527724579192834);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Result<System.Parsing.Match> matchResult = cm.parser.SourceFileParser<LexerT>.UsingDirectives(lexer, context, ns);
                    if (matchResult.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                    }
                    System.Parsing.Match match = matchResult.Value();
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Result<System.Parsing.Match> matchResult = cm.parser.SourceFileParser<LexerT>.Definitions(lexer, context, ns);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"NamespaceContent");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"NamespaceContent");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> UsingDirectives(LexerT& lexer, cm.parser.Context* context, cm.ast.NamespaceNode* ns)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"UsingDirectives");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 686527724579192835);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.IdentifierNode> usingNs;
            System.Parsing.Match match(true);
            System.Parsing.Match* parentMatch0 = &match;
            {
                while (true)
                {
                    long save = lexer.GetPos();
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch1 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch2 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch3 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch4 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        if (*lexer == USING)
                                        {
                                            auto incResult0 = ++lexer;
                                            if (incResult0.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            span = lexer.GetSpan(pos);
                                        }
                                        *parentMatch4 = match;
                                    }
                                    *parentMatch3 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch5 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.QualifiedId(lexer);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        usingNs.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                        *parentMatch5 = match;
                                    }
                                    *parentMatch3 = match;
                                }
                                *parentMatch2 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        if (*lexer == SEMICOLON)
                                        {
                                            auto incResult1 = ++lexer;
                                            if (incResult1.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            ns->AddMember(new cm.ast.NamespaceImportNode(span, lexer.FileIndex(), usingNs.Release()));
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch2 = match;
                            }
                            *parentMatch1 = match;
                        }
                        if (match.hit)
                        {
                            *parentMatch0 = match;
                        }
                        else
                        {
                            lexer.SetPos(save);
                            break;
                        }
                    }
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UsingDirectives");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"UsingDirectives");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Definitions(LexerT& lexer, cm.parser.Context* context, cm.ast.NamespaceNode* ns)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Definitions");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 686527724579192836);
            System.UniquePtr<cm.ast.Node> definition;
            System.Parsing.Match match(true);
            System.Parsing.Match* parentMatch0 = &match;
            {
                while (true)
                {
                    long save = lexer.GetPos();
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch1 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch2 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.SourceFileParser<LexerT>.Definition(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                definition.Reset(cast<cm.ast.Node*>(match.value));
                                if (match.hit)
                                {
                                    ns->AddMember(definition.Release());
                                }
                                *parentMatch2 = match;
                            }
                            *parentMatch1 = match;
                        }
                        if (match.hit)
                        {
                            *parentMatch0 = match;
                        }
                        else
                        {
                            lexer.SetPos(save);
                            break;
                        }
                    }
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definitions");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Definitions");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Definition(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Definition");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 686527724579192837);
            System.UniquePtr<cm.ast.NamespaceNode> nsDefinition;
            System.UniquePtr<cm.ast.Node> usingAlias;
            System.UniquePtr<cm.ast.Node> typedefDeclaration;
            System.UniquePtr<cm.ast.ConceptNode> conceptDefinition;
            System.UniquePtr<cm.ast.FunctionNode> functionDefinition;
            System.UniquePtr<cm.ast.ClassNode> classDefinition;
            System.UniquePtr<cm.ast.InterfaceNode> interfaceDefinition;
            System.UniquePtr<cm.ast.EnumTypeNode> enumTypeDefinition;
            System.UniquePtr<cm.ast.ConstantNode> constantDefinition;
            System.UniquePtr<cm.ast.DelegateNode> delegateDefinition;
            System.UniquePtr<cm.ast.ClassDelegateNode> classDelegateDefinition;
            System.UniquePtr<cm.ast.GlobalVariableNode> globalVariableDefinition;
            System.UniquePtr<cm.ast.FullInstantiationRequestNode> instantiationRequest;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long save = lexer.GetPos();
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long save = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long save = lexer.GetPos();
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long save = lexer.GetPos();
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long save = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long save = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            long save = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                long save = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch9 = &match;
                                                {
                                                    long save = lexer.GetPos();
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        long save = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch11 = &match;
                                                        {
                                                            long save = lexer.GetPos();
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch12 = &match;
                                                            {
                                                                long save = lexer.GetPos();
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch13 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.SourceFileParser<LexerT>.Namespace(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    nsDefinition.Reset(cast<cm.ast.NamespaceNode*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        #if (DEBUG)
                                                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                                                        #endif
                                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, nsDefinition.Release()));
                                                                    }
                                                                    *parentMatch13 = match;
                                                                }
                                                                *parentMatch12 = match;
                                                                if (!match.hit)
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch14 = &match;
                                                                    lexer.SetPos(save);
                                                                    {
                                                                        System.Parsing.Match match(false);
                                                                        System.Parsing.Match* parentMatch15 = &match;
                                                                        {
                                                                            long pos = lexer.GetPos();
                                                                            System.Result<System.Parsing.Match> matchResult = cm.parser.AliasParser<LexerT>.UsingAlias(lexer, context);
                                                                            if (matchResult.Error())
                                                                            {
                                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                            }
                                                                            System.Parsing.Match match = matchResult.Value();
                                                                            usingAlias.Reset(cast<cm.ast.Node*>(match.value));
                                                                            if (match.hit)
                                                                            {
                                                                                #if (DEBUG)
                                                                                    if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                                                                #endif
                                                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, usingAlias.Release()));
                                                                            }
                                                                            *parentMatch15 = match;
                                                                        }
                                                                        *parentMatch14 = match;
                                                                    }
                                                                    *parentMatch12 = match;
                                                                }
                                                            }
                                                            *parentMatch11 = match;
                                                            if (!match.hit)
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch16 = &match;
                                                                lexer.SetPos(save);
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch17 = &match;
                                                                    {
                                                                        long pos = lexer.GetPos();
                                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.AliasParser<LexerT>.Typedef(lexer, context);
                                                                        if (matchResult.Error())
                                                                        {
                                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                        }
                                                                        System.Parsing.Match match = matchResult.Value();
                                                                        typedefDeclaration.Reset(cast<cm.ast.Node*>(match.value));
                                                                        if (match.hit)
                                                                        {
                                                                            #if (DEBUG)
                                                                                if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                                                            #endif
                                                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, typedefDeclaration.Release()));
                                                                        }
                                                                        *parentMatch17 = match;
                                                                    }
                                                                    *parentMatch16 = match;
                                                                }
                                                                *parentMatch11 = match;
                                                            }
                                                        }
                                                        *parentMatch10 = match;
                                                        if (!match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch18 = &match;
                                                            lexer.SetPos(save);
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch19 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.ConceptParser<LexerT>.Concept(lexer, context);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    conceptDefinition.Reset(cast<cm.ast.ConceptNode*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        #if (DEBUG)
                                                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                                                        #endif
                                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, conceptDefinition.Release()));
                                                                    }
                                                                    *parentMatch19 = match;
                                                                }
                                                                *parentMatch18 = match;
                                                            }
                                                            *parentMatch10 = match;
                                                        }
                                                    }
                                                    *parentMatch9 = match;
                                                    if (!match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch20 = &match;
                                                        lexer.SetPos(save);
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch21 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                System.Result<System.Parsing.Match> matchResult = cm.parser.FunctionParser<LexerT>.Function(lexer, context);
                                                                if (matchResult.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                functionDefinition.Reset(cast<cm.ast.FunctionNode*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    #if (DEBUG)
                                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                                                    #endif
                                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, functionDefinition.Release()));
                                                                }
                                                                *parentMatch21 = match;
                                                            }
                                                            *parentMatch20 = match;
                                                        }
                                                        *parentMatch9 = match;
                                                    }
                                                }
                                                *parentMatch8 = match;
                                                if (!match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch22 = &match;
                                                    lexer.SetPos(save);
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch23 = &match;
                                                        {
                                                            long pos = lexer.GetPos();
                                                            System.Result<System.Parsing.Match> matchResult = cm.parser.ClassParser<LexerT>.Class(lexer, context);
                                                            if (matchResult.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                            }
                                                            System.Parsing.Match match = matchResult.Value();
                                                            classDefinition.Reset(cast<cm.ast.ClassNode*>(match.value));
                                                            if (match.hit)
                                                            {
                                                                #if (DEBUG)
                                                                    if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                                                #endif
                                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, classDefinition.Release()));
                                                            }
                                                            *parentMatch23 = match;
                                                        }
                                                        *parentMatch22 = match;
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                            }
                                            *parentMatch7 = match;
                                            if (!match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch24 = &match;
                                                lexer.SetPos(save);
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch25 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Result<System.Parsing.Match> matchResult = cm.parser.InterfaceParser<LexerT>.Interface(lexer, context);
                                                        if (matchResult.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                        }
                                                        System.Parsing.Match match = matchResult.Value();
                                                        interfaceDefinition.Reset(cast<cm.ast.InterfaceNode*>(match.value));
                                                        if (match.hit)
                                                        {
                                                            #if (DEBUG)
                                                                if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                                            #endif
                                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, interfaceDefinition.Release()));
                                                        }
                                                        *parentMatch25 = match;
                                                    }
                                                    *parentMatch24 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                        }
                                        *parentMatch6 = match;
                                        if (!match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch26 = &match;
                                            lexer.SetPos(save);
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch27 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.EnumerationParser<LexerT>.EnumType(lexer, context);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    enumTypeDefinition.Reset(cast<cm.ast.EnumTypeNode*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        #if (DEBUG)
                                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                                        #endif
                                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, enumTypeDefinition.Release()));
                                                    }
                                                    *parentMatch27 = match;
                                                }
                                                *parentMatch26 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                    }
                                    *parentMatch5 = match;
                                    if (!match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch28 = &match;
                                        lexer.SetPos(save);
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch29 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = cm.parser.ConstantParser<LexerT>.Constant(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                constantDefinition.Reset(cast<cm.ast.ConstantNode*>(match.value));
                                                if (match.hit)
                                                {
                                                    #if (DEBUG)
                                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                                    #endif
                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, constantDefinition.Release()));
                                                }
                                                *parentMatch29 = match;
                                            }
                                            *parentMatch28 = match;
                                        }
                                        *parentMatch5 = match;
                                    }
                                }
                                *parentMatch4 = match;
                                if (!match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch30 = &match;
                                    lexer.SetPos(save);
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch31 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = cm.parser.DelegateParser<LexerT>.Delegate(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            delegateDefinition.Reset(cast<cm.ast.DelegateNode*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, delegateDefinition.Release()));
                                            }
                                            *parentMatch31 = match;
                                        }
                                        *parentMatch30 = match;
                                    }
                                    *parentMatch4 = match;
                                }
                            }
                            *parentMatch3 = match;
                            if (!match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch32 = &match;
                                lexer.SetPos(save);
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch33 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = cm.parser.DelegateParser<LexerT>.ClassDelegate(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        classDelegateDefinition.Reset(cast<cm.ast.ClassDelegateNode*>(match.value));
                                        if (match.hit)
                                        {
                                            #if (DEBUG)
                                                if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                            #endif
                                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, classDelegateDefinition.Release()));
                                        }
                                        *parentMatch33 = match;
                                    }
                                    *parentMatch32 = match;
                                }
                                *parentMatch3 = match;
                            }
                        }
                        *parentMatch2 = match;
                        if (!match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch34 = &match;
                            lexer.SetPos(save);
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch35 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = cm.parser.GlobalVariableParser<LexerT>.GlobalVariable(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    globalVariableDefinition.Reset(cast<cm.ast.GlobalVariableNode*>(match.value));
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, globalVariableDefinition.Release()));
                                    }
                                    *parentMatch35 = match;
                                }
                                *parentMatch34 = match;
                            }
                            *parentMatch2 = match;
                        }
                    }
                    *parentMatch1 = match;
                    if (!match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch36 = &match;
                        lexer.SetPos(save);
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch37 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = cm.parser.TemplateParser<LexerT>.InstantiationRequest(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                instantiationRequest.Reset(cast<cm.ast.FullInstantiationRequestNode*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, instantiationRequest.Release()));
                                }
                                *parentMatch37 = match;
                            }
                            *parentMatch36 = match;
                        }
                        *parentMatch1 = match;
                    }
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Definition");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Definition");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Namespace(LexerT& lexer, cm.parser.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Namespace");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 686527724579192838);
            UniquePtr<cm.ast.NamespaceNode> namespaceNode = UniquePtr<cm.ast.NamespaceNode>();
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<cm.ast.IdentifierNode> nsName;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        if (*lexer == NAMESPACE)
                                        {
                                            auto incResult0 = ++lexer;
                                            if (incResult0.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            span = lexer.GetSpan(pos);
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch9 = &match;
                                            {
                                                long save = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch10 = &match;
                                                {
                                                    long pos = lexer.GetPos();
                                                    System.Result<System.Parsing.Match> matchResult = cm.parser.IdentifierParser<LexerT>.QualifiedId(lexer);
                                                    if (matchResult.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                    }
                                                    System.Parsing.Match match = matchResult.Value();
                                                    nsName.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                                    if (match.hit)
                                                    {
                                                        namespaceNode.Reset(new cm.ast.NamespaceNode(span, lexer.FileIndex(), nsName.Release()));
                                                    }
                                                    *parentMatch10 = match;
                                                }
                                                *parentMatch9 = match;
                                                if (!match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch11 = &match;
                                                    lexer.SetPos(save);
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch12 = &match;
                                                        {
                                                            long pos = lexer.GetPos();
                                                            System.Parsing.Match match(true);
                                                            if (match.hit)
                                                            {
                                                                namespaceNode.Reset(new cm.ast.NamespaceNode(span, lexer.FileIndex(), null));
                                                            }
                                                            *parentMatch12 = match;
                                                        }
                                                        *parentMatch11 = match;
                                                    }
                                                    *parentMatch9 = match;
                                                }
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch13 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == LBRACE)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch13 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch14 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = cm.parser.SourceFileParser<LexerT>.NamespaceContent(lexer, context, namespaceNode.Get());
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                *parentMatch14 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch15 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RBRACE)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch15 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log) System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Namespace");
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, namespaceNode.Release()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Namespace");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Namespace");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
    }
}

new class cm.parser.SourceFileParser<cm.lexer.CmajorLexer>;

