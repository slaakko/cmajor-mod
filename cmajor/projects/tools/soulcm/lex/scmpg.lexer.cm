// this file has been automatically generated from 'C:/work/cmajor-mod/cmajor/projects/tools/scm/lex/scmpg.lexer' using soul lexer generator slg version 5.0.0

using System;
using System.Collections;
using System.Lex;
using cm.token;
using punctuation.token;
using scm.token;

public class ScmpgLexer : System.Lex.Lexer
{
    public ScmpgLexer(const uchar* start_, const uchar* end_, const string& fileName_) : base(start_, end_, fileName_)
    {
        auto classMapNameResult = ClassMapName();
        if (classMapNameResult.Error()) return;
        auto classMapResult = System.Lex.GetClassMap(classMapNameResult.Value());
        if (classMapResult.Error())
        {
            SetLatestErrorId(classMapResult.GetErrorId());
            return;
        }
        SetClassMap(classMapResult.Value());
        keywords.Add(System.Lex.Keyword(u"assert", ASSERT));
        keywords.Add(System.Lex.Keyword(u"elif", ELIF));
        keywords.Add(System.Lex.Keyword(u"endif", ENDIF));
        keywords.Add(System.Lex.Keyword(u"bool", BOOL));
        keywords.Add(System.Lex.Keyword(u"true", TRUE));
        keywords.Add(System.Lex.Keyword(u"false", FALSE));
        keywords.Add(System.Lex.Keyword(u"sbyte", SBYTE));
        keywords.Add(System.Lex.Keyword(u"byte", BYTE));
        keywords.Add(System.Lex.Keyword(u"short", SHORT));
        keywords.Add(System.Lex.Keyword(u"ushort", USHORT));
        keywords.Add(System.Lex.Keyword(u"int", INT));
        keywords.Add(System.Lex.Keyword(u"uint", UINT));
        keywords.Add(System.Lex.Keyword(u"long", LONG));
        keywords.Add(System.Lex.Keyword(u"ulong", ULONG));
        keywords.Add(System.Lex.Keyword(u"float", FLOAT));
        keywords.Add(System.Lex.Keyword(u"double", DOUBLE));
        keywords.Add(System.Lex.Keyword(u"char", CHAR));
        keywords.Add(System.Lex.Keyword(u"wchar", WCHAR));
        keywords.Add(System.Lex.Keyword(u"uchar", UCHAR));
        keywords.Add(System.Lex.Keyword(u"void", VOID));
        keywords.Add(System.Lex.Keyword(u"enum", ENUM));
        keywords.Add(System.Lex.Keyword(u"cast", CAST));
        keywords.Add(System.Lex.Keyword(u"interface", INTERFACE));
        keywords.Add(System.Lex.Keyword(u"namespace", NAMESPACE));
        keywords.Add(System.Lex.Keyword(u"using", USING));
        keywords.Add(System.Lex.Keyword(u"static", STATIC));
        keywords.Add(System.Lex.Keyword(u"extern", EXTERN));
        keywords.Add(System.Lex.Keyword(u"as", AS));
        keywords.Add(System.Lex.Keyword(u"is", IS));
        keywords.Add(System.Lex.Keyword(u"explicit", EXPLICIT));
        keywords.Add(System.Lex.Keyword(u"delegate", DELEGATE));
        keywords.Add(System.Lex.Keyword(u"inline", INLINE));
        keywords.Add(System.Lex.Keyword(u"cdecl", CDECL));
        keywords.Add(System.Lex.Keyword(u"nothrow", NOTHROW));
        keywords.Add(System.Lex.Keyword(u"public", PUBLIC));
        keywords.Add(System.Lex.Keyword(u"protected", PROTECTED));
        keywords.Add(System.Lex.Keyword(u"private", PRIVATE));
        keywords.Add(System.Lex.Keyword(u"internal", INTERNAL));
        keywords.Add(System.Lex.Keyword(u"virtual", VIRTUAL));
        keywords.Add(System.Lex.Keyword(u"abstract", ABSTRACT));
        keywords.Add(System.Lex.Keyword(u"override", OVERRIDE));
        keywords.Add(System.Lex.Keyword(u"suppress", SUPPRESS));
        keywords.Add(System.Lex.Keyword(u"operator", OPERATOR));
        keywords.Add(System.Lex.Keyword(u"class", CLASS));
        keywords.Add(System.Lex.Keyword(u"return", RETURN));
        keywords.Add(System.Lex.Keyword(u"if", IF));
        keywords.Add(System.Lex.Keyword(u"else", ELSE));
        keywords.Add(System.Lex.Keyword(u"switch", SWITCH));
        keywords.Add(System.Lex.Keyword(u"case", CASE));
        keywords.Add(System.Lex.Keyword(u"default", DEFAULT));
        keywords.Add(System.Lex.Keyword(u"while", WHILE));
        keywords.Add(System.Lex.Keyword(u"do", DO));
        keywords.Add(System.Lex.Keyword(u"for", FOR));
        keywords.Add(System.Lex.Keyword(u"break", BREAK));
        keywords.Add(System.Lex.Keyword(u"continue", CONTINUE));
        keywords.Add(System.Lex.Keyword(u"goto", GOTO));
        keywords.Add(System.Lex.Keyword(u"typedef", TYPEDEF));
        keywords.Add(System.Lex.Keyword(u"typename", TYPENAME));
        keywords.Add(System.Lex.Keyword(u"typeid", TYPEID));
        keywords.Add(System.Lex.Keyword(u"const", CONST));
        keywords.Add(System.Lex.Keyword(u"constexpr", CONSTEXPR));
        keywords.Add(System.Lex.Keyword(u"null", NULLLIT));
        keywords.Add(System.Lex.Keyword(u"this", THIS));
        keywords.Add(System.Lex.Keyword(u"base", BASE));
        keywords.Add(System.Lex.Keyword(u"construct", CONSTRUCT));
        keywords.Add(System.Lex.Keyword(u"destroy", DESTROY));
        keywords.Add(System.Lex.Keyword(u"new", NEW));
        keywords.Add(System.Lex.Keyword(u"delete", DELETE));
        keywords.Add(System.Lex.Keyword(u"sizeof", SIZEOF));
        keywords.Add(System.Lex.Keyword(u"try", TRY));
        keywords.Add(System.Lex.Keyword(u"catch", CATCH));
        keywords.Add(System.Lex.Keyword(u"throw", THROW));
        keywords.Add(System.Lex.Keyword(u"concept", CONCEPT));
        keywords.Add(System.Lex.Keyword(u"where", WHERE));
        keywords.Add(System.Lex.Keyword(u"axiom", AXIOM));
        keywords.Add(System.Lex.Keyword(u"and", AND));
        keywords.Add(System.Lex.Keyword(u"or", OR));
        keywordMap.SetKeywords(keywords);
        SetKeywordMap(&keywordMap);
    }
    public override int NextState(int state, uchar c)
    {
        int cls = GetClass(c);
        switch (state)
        {
            case 0:
            {
                switch (cls)
                {
                    case 0:
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 1;
                    }
                    case 1:
                    {
                        return 2;
                    }
                    case 2:
                    {
                        return 3;
                    }
                    case 5:
                    {
                        return 4;
                    }
                    case 6:
                    {
                        return 5;
                    }
                    case 7:
                    {
                        return 6;
                    }
                    case 8:
                    case 9:
                    case 11:
                    case 15:
                    case 16:
                    case 18:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    {
                        return 7;
                    }
                    case 17:
                    {
                        return 8;
                    }
                    case 19:
                    {
                        return 9;
                    }
                    case 20:
                    {
                        return 10;
                    }
                    case 21:
                    {
                        return 11;
                    }
                    case 22:
                    {
                        return 12;
                    }
                    case 27:
                    {
                        return 13;
                    }
                    case 37:
                    case 39:
                    {
                        return 14;
                    }
                    case 38:
                    {
                        return 15;
                    }
                    case 40:
                    {
                        return 16;
                    }
                    case 41:
                    {
                        return 17;
                    }
                    case 42:
                    {
                        return 18;
                    }
                    case 43:
                    {
                        return 19;
                    }
                    case 44:
                    {
                        return 20;
                    }
                    case 45:
                    {
                        return 21;
                    }
                    case 46:
                    {
                        return 22;
                    }
                    case 47:
                    {
                        return 23;
                    }
                    case 48:
                    {
                        return 24;
                    }
                    case 49:
                    {
                        return 25;
                    }
                    case 50:
                    {
                        return 26;
                    }
                    case 51:
                    {
                        return 27;
                    }
                    case 52:
                    {
                        return 28;
                    }
                    case 53:
                    {
                        return 29;
                    }
                    case 54:
                    {
                        return 30;
                    }
                    case 55:
                    {
                        return 31;
                    }
                    case 56:
                    {
                        return 32;
                    }
                    case 57:
                    {
                        return 33;
                    }
                    case 58:
                    {
                        return 34;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 34:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(41);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 33:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(40);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 32:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(38);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 31:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(37);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 30:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(36);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 29:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(35);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 28:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(34);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 27:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(33);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 26:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(30);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 25:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(29);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 24:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(25);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 23:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(17);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    {
                        return 35;
                    }
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 36;
                    }
                    case 41:
                    {
                        return 37;
                    }
                    case 47:
                    {
                        return 38;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 38:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(19);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    {
                        return 35;
                    }
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 36;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 37:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(15);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    {
                        return 35;
                    }
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 36;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 36:
            {
                switch (cls)
                {
                    case 1:
                    {
                        return 35;
                    }
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 36;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 35:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(43);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 22:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(28);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 41:
                    {
                        return 39;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 39:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(14);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 21:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(11);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 20:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(12);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 44:
                    {
                        return 40;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 40:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(9);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 19:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(10);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 43:
                    {
                        return 41;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 41:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(8);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 18:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(7);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 17:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(42);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 41:
                    {
                        return 42;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 42:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(13);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 16:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(39);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 40:
                    {
                        return 43;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 43:
            {
                switch (cls)
                {
                    case 41:
                    {
                        return 44;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 44:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(6);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 15:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(2);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 15:
                    {
                        return 45;
                    }
                    case 16:
                    {
                        return 46;
                    }
                    case 17:
                    {
                        return 47;
                    }
                    case 18:
                    {
                        return 48;
                    }
                    case 19:
                    {
                        return 49;
                    }
                    case 29:
                    {
                        return 50;
                    }
                    case 30:
                    {
                        return 51;
                    }
                    case 37:
                    {
                        return 52;
                    }
                    case 38:
                    case 39:
                    {
                        return 53;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 53:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(2);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 17:
                    {
                        return 47;
                    }
                    case 18:
                    {
                        return 48;
                    }
                    case 19:
                    {
                        return 49;
                    }
                    case 29:
                    {
                        return 50;
                    }
                    case 30:
                    {
                        return 51;
                    }
                    case 37:
                    {
                        return 52;
                    }
                    case 38:
                    case 39:
                    {
                        return 53;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 52:
            {
                switch (cls)
                {
                    case 19:
                    {
                        return 49;
                    }
                    case 29:
                    {
                        return 50;
                    }
                    case 30:
                    {
                        return 51;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 52;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 51:
            {
                switch (cls)
                {
                    case 20:
                    {
                        return 54;
                    }
                    case 21:
                    {
                        return 55;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 56;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 56:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(3);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 56;
                    }
                    case 31:
                    {
                        return 57;
                    }
                    case 32:
                    {
                        return 58;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 58:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(3);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 57:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(3);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 55:
            {
                switch (cls)
                {
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 56;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 54:
            {
                switch (cls)
                {
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 56;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 50:
            {
                switch (cls)
                {
                    case 20:
                    {
                        return 54;
                    }
                    case 21:
                    {
                        return 55;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 56;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 49:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(3);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 31:
                    {
                        return 57;
                    }
                    case 32:
                    {
                        return 58;
                    }
                    case 29:
                    {
                        return 59;
                    }
                    case 30:
                    {
                        return 60;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 61;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 61:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(3);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 31:
                    {
                        return 57;
                    }
                    case 32:
                    {
                        return 58;
                    }
                    case 29:
                    {
                        return 59;
                    }
                    case 30:
                    {
                        return 60;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 61;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 60:
            {
                switch (cls)
                {
                    case 20:
                    {
                        return 62;
                    }
                    case 21:
                    {
                        return 63;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 64;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 64:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(3);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 31:
                    {
                        return 57;
                    }
                    case 32:
                    {
                        return 58;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 64;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 63:
            {
                switch (cls)
                {
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 64;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 62:
            {
                switch (cls)
                {
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 64;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 59:
            {
                switch (cls)
                {
                    case 20:
                    {
                        return 62;
                    }
                    case 21:
                    {
                        return 63;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 64;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 48:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(2);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 47:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(2);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 46:
            {
                switch (cls)
                {
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 65;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 65:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(2);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 17:
                    {
                        return 47;
                    }
                    case 18:
                    {
                        return 48;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 65;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 45:
            {
                switch (cls)
                {
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 65;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 14:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(2);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 17:
                    {
                        return 47;
                    }
                    case 18:
                    {
                        return 48;
                    }
                    case 19:
                    {
                        return 49;
                    }
                    case 29:
                    {
                        return 50;
                    }
                    case 30:
                    {
                        return 51;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 66;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 66:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(2);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 17:
                    {
                        return 47;
                    }
                    case 18:
                    {
                        return 48;
                    }
                    case 19:
                    {
                        return 49;
                    }
                    case 29:
                    {
                        return 50;
                    }
                    case 30:
                    {
                        return 51;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 66;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 13:
            {
                switch (cls)
                {
                    case 2:
                    {
                        return 67;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 67:
            {
                switch (cls)
                {
                    case 0:
                    case 1:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 68;
                    }
                    case 2:
                    {
                        return 69;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 69:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(5);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 68:
            {
                switch (cls)
                {
                    case 0:
                    case 1:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 68;
                    }
                    case 2:
                    {
                        return 69;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 12:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(1);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 2:
                    {
                        return 3;
                    }
                    case 5:
                    {
                        return 4;
                    }
                    case 27:
                    {
                        return 13;
                    }
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 70;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 70:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(1);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 70;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 11:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(22);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    {
                        return 71;
                    }
                    case 21:
                    {
                        return 72;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 72:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(27);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 71:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(32);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 10:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(21);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 20:
                    {
                        return 73;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 73:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(26);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 9:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(31);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 61;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 8:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(1);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 2:
                    {
                        return 3;
                    }
                    case 5:
                    {
                        return 4;
                    }
                    case 27:
                    {
                        return 13;
                    }
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 70;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 7:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(1);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 70;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 6:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(23);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 5:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(24);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 6:
                    {
                        return 74;
                    }
                    case 7:
                    {
                        return 75;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 75:
            {
                switch (cls)
                {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 7:
                    {
                        return 77;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 77:
            {
                switch (cls)
                {
                    case 7:
                    {
                        return 77;
                    }
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 78;
                    }
                    case 6:
                    {
                        return 79;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 79:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 7:
                    {
                        return 77;
                    }
                    case 0:
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 80;
                    }
                    case 6:
                    {
                        return 81;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 81:
            {
                switch (cls)
                {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 6:
                    {
                        return 82;
                    }
                    case 7:
                    {
                        return 83;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 83:
            {
                switch (cls)
                {
                    case 7:
                    {
                        return 77;
                    }
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 78;
                    }
                    case 6:
                    {
                        return 79;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 82:
            {
                switch (cls)
                {
                    case 0:
                    {
                        return 84;
                    }
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 6:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 85;
                    }
                    case 3:
                    {
                        return 86;
                    }
                    case 7:
                    {
                        return 87;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 87:
            {
                switch (cls)
                {
                    case 7:
                    {
                        return 87;
                    }
                    case 0:
                    {
                        return 88;
                    }
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 89;
                    }
                    case 3:
                    {
                        return 90;
                    }
                    case 6:
                    {
                        return 91;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 91:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 85;
                    }
                    case 7:
                    {
                        return 87;
                    }
                    case 0:
                    {
                        return 92;
                    }
                    case 3:
                    {
                        return 93;
                    }
                    case 6:
                    {
                        return 94;
                    }
                    case 12:
                    case 13:
                    {
                        return 95;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 95:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 85;
                    }
                    case 7:
                    {
                        return 87;
                    }
                    case 0:
                    {
                        return 92;
                    }
                    case 3:
                    {
                        return 93;
                    }
                    case 6:
                    {
                        return 94;
                    }
                    case 12:
                    case 13:
                    {
                        return 95;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 94:
            {
                switch (cls)
                {
                    case 6:
                    {
                        return 82;
                    }
                    case 0:
                    {
                        return 84;
                    }
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 85;
                    }
                    case 3:
                    {
                        return 86;
                    }
                    case 7:
                    {
                        return 96;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 96:
            {
                switch (cls)
                {
                    case 7:
                    {
                        return 87;
                    }
                    case 0:
                    {
                        return 88;
                    }
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 89;
                    }
                    case 3:
                    {
                        return 90;
                    }
                    case 6:
                    {
                        return 91;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 93:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 7:
                    {
                        return 77;
                    }
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 80;
                    }
                    case 6:
                    {
                        return 81;
                    }
                    case 0:
                    {
                        return 97;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 97:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 7:
                    {
                        return 77;
                    }
                    case 0:
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 80;
                    }
                    case 6:
                    {
                        return 81;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 92:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 7:
                    {
                        return 77;
                    }
                    case 0:
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 80;
                    }
                    case 6:
                    {
                        return 81;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 90:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 7:
                    {
                        return 77;
                    }
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 80;
                    }
                    case 6:
                    {
                        return 81;
                    }
                    case 0:
                    {
                        return 97;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 89:
            {
                switch (cls)
                {
                    case 0:
                    {
                        return 84;
                    }
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 6:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 85;
                    }
                    case 3:
                    {
                        return 86;
                    }
                    case 7:
                    {
                        return 87;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 88:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 7:
                    {
                        return 77;
                    }
                    case 0:
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 80;
                    }
                    case 6:
                    {
                        return 81;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 86:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 7:
                    {
                        return 77;
                    }
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 80;
                    }
                    case 6:
                    {
                        return 81;
                    }
                    case 0:
                    {
                        return 97;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 85:
            {
                switch (cls)
                {
                    case 0:
                    {
                        return 84;
                    }
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 6:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 85;
                    }
                    case 3:
                    {
                        return 86;
                    }
                    case 7:
                    {
                        return 87;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 84:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 7:
                    {
                        return 77;
                    }
                    case 0:
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 80;
                    }
                    case 6:
                    {
                        return 81;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 80:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 7:
                    {
                        return 77;
                    }
                    case 0:
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 80;
                    }
                    case 6:
                    {
                        return 81;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 78:
            {
                switch (cls)
                {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 7:
                    {
                        return 77;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 76:
            {
                switch (cls)
                {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 76;
                    }
                    case 7:
                    {
                        return 77;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 74:
            {
                switch (cls)
                {
                    case 0:
                    {
                        return 98;
                    }
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 99;
                    }
                    case 3:
                    {
                        return 100;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 100:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 1;
                    }
                    case 0:
                    {
                        return 101;
                    }
                    case 6:
                    {
                        return 102;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 102:
            {
                switch (cls)
                {
                    case 6:
                    {
                        return 74;
                    }
                    case 7:
                    {
                        return 75;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 101:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 0:
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 1;
                    }
                    case 6:
                    {
                        return 102;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 99:
            {
                switch (cls)
                {
                    case 0:
                    {
                        return 98;
                    }
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 99;
                    }
                    case 3:
                    {
                        return 100;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 98:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 0:
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 1;
                    }
                    case 6:
                    {
                        return 102;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 4:
            {
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 103;
                    }
                    case 4:
                    {
                        return 104;
                    }
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 105:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(4);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 104:
            {
                switch (cls)
                {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 32:
                    case 37:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 106;
                    }
                    case 5:
                    {
                        return 107;
                    }
                    case 15:
                    {
                        return 108;
                    }
                    case 16:
                    {
                        return 109;
                    }
                    case 17:
                    {
                        return 110;
                    }
                    case 18:
                    {
                        return 111;
                    }
                    case 23:
                    {
                        return 112;
                    }
                    case 24:
                    {
                        return 113;
                    }
                    case 25:
                    {
                        return 114;
                    }
                    case 26:
                    {
                        return 115;
                    }
                    case 31:
                    {
                        return 116;
                    }
                    case 33:
                    {
                        return 117;
                    }
                    case 34:
                    {
                        return 118;
                    }
                    case 35:
                    {
                        return 119;
                    }
                    case 36:
                    {
                        return 120;
                    }
                    case 38:
                    case 39:
                    {
                        return 121;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 121:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    case 38:
                    case 39:
                    {
                        return 122;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 122:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    case 38:
                    case 39:
                    {
                        return 122;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 120:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 119:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 118:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 123;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 123:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 123;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 117:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 123;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 116:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 115:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 114:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 113:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 112:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 111:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 124;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 124:
            {
                switch (cls)
                {
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 125;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 125:
            {
                switch (cls)
                {
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 126;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 126:
            {
                switch (cls)
                {
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 127;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 127:
            {
                switch (cls)
                {
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 128;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 128:
            {
                switch (cls)
                {
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 129;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 129:
            {
                switch (cls)
                {
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 130;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 130:
            {
                switch (cls)
                {
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 131;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 131:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 110:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 132;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 132:
            {
                switch (cls)
                {
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 133;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 133:
            {
                switch (cls)
                {
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 134;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 134:
            {
                switch (cls)
                {
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 135;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 135:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 109:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 136;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 136:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 136;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 108:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 136;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 107:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(4);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 106:
            {
                switch (cls)
                {
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 103:
            {
                switch (cls)
                {
                    case 1:
                    case 2:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 103;
                    }
                    case 5:
                    {
                        return 105;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 3:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 139:
            {
                switch (cls)
                {
                    case 4:
                    {
                        return 139;
                    }
                    case 0:
                    case 1:
                    case 3:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 32:
                    case 37:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 140;
                    }
                    case 2:
                    {
                        return 141;
                    }
                    case 15:
                    {
                        return 142;
                    }
                    case 16:
                    {
                        return 143;
                    }
                    case 17:
                    {
                        return 144;
                    }
                    case 18:
                    {
                        return 145;
                    }
                    case 23:
                    {
                        return 146;
                    }
                    case 24:
                    {
                        return 147;
                    }
                    case 25:
                    {
                        return 148;
                    }
                    case 26:
                    {
                        return 149;
                    }
                    case 31:
                    {
                        return 150;
                    }
                    case 33:
                    {
                        return 151;
                    }
                    case 34:
                    {
                        return 152;
                    }
                    case 35:
                    {
                        return 153;
                    }
                    case 36:
                    {
                        return 154;
                    }
                    case 38:
                    case 39:
                    {
                        return 155;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 155:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 38:
                    case 39:
                    {
                        return 156;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 156:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 38:
                    case 39:
                    {
                        return 156;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 154:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 153:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 152:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 157;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 157:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 157;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 151:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 157;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 150:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 149:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 148:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 147:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 146:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 145:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 158;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 158:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 159;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 159:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 160;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 160:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 161;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 161:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 162;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 162:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 163;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 163:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 164;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 164:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 165;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 165:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 144:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 166;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 166:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 167;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 167:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 168;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 168:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 169;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 169:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 143:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 170;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 170:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 170;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 142:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    {
                        return 170;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 141:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(5);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 140:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 138:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(5);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 137:
            {
                switch (cls)
                {
                    case 1:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    {
                        return 137;
                    }
                    case 2:
                    {
                        return 138;
                    }
                    case 4:
                    {
                        return 139;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 2:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(18);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 1:
                    {
                        return 171;
                    }
                    case 41:
                    {
                        return 172;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
            case 172:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(16);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 171:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(20);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                return -1;
            }
            case 1:
            {
                auto prevMatch = token.match;
                token.match = lexeme;
                long tokenId = GetTokenId(0);
                if (tokenId == System.Lex.CONTINUE_TOKEN)
                {
                    token.id = System.Lex.CONTINUE_TOKEN;
                    return -1;
                }
                else if (tokenId != System.Lex.INVALID_TOKEN)
                {
                    token.id = tokenId;
                }
                else
                {
                    token.match = prevMatch;
                }
                switch (cls)
                {
                    case 0:
                    case 3:
                    case 12:
                    case 13:
                    {
                        return 1;
                    }
                    case 6:
                    {
                        return 102;
                    }
                    default:
                    {
                        return -1;
                    }
                }
                break;
            }
        }
        return -1;
    }
    public long GetTokenId(int ruleIndex)
    {
        switch (ruleIndex)
        {
            case 0:
            {
                Retract();
                break;
            }
            case 1:
            {
                Retract();
                long kw = GetKeywordToken(token.match);
                if (kw == INVALID_TOKEN) return ID;
                else return kw;
                break;
            }
            case 2:
            {
                Retract();
                return INTEGER_LITERAL;
                break;
            }
            case 3:
            {
                Retract();
                return FLOATING_LITERAL;
                break;
            }
            case 4:
            {
                Retract();
                return CHAR_LITERAL;
                break;
            }
            case 5:
            {
                Retract();
                return STRING_LITERAL;
                break;
            }
            case 6:
            {
                Retract();
                return PRODUCES;
                break;
            }
            case 7:
            {
                Retract();
                return DOLLAR;
                break;
            }
            case 8:
            {
                Retract();
                return DISJUNCTION;
                break;
            }
            case 9:
            {
                Retract();
                return AMP_AMP;
                break;
            }
            case 10:
            {
                Retract();
                return PIPE;
                break;
            }
            case 11:
            {
                Retract();
                return CARET;
                break;
            }
            case 12:
            {
                Retract();
                return AMP;
                break;
            }
            case 13:
            {
                Retract();
                return EQ;
                break;
            }
            case 14:
            {
                Retract();
                return NEQ;
                break;
            }
            case 15:
            {
                Retract();
                return LEQ;
                break;
            }
            case 16:
            {
                Retract();
                return GEQ;
                break;
            }
            case 17:
            {
                Retract();
                return LANGLE;
                break;
            }
            case 18:
            {
                Retract();
                return RANGLE;
                break;
            }
            case 19:
            {
                Retract();
                return SHIFT_LEFT;
                break;
            }
            case 20:
            {
                if (vars.leftAngleCount > 0) return System.Lex.INVALID_TOKEN;
                Retract();
                return SHIFT_RIGHT;
                break;
            }
            case 21:
            {
                Retract();
                return PLUS;
                break;
            }
            case 22:
            {
                Retract();
                return MINUS;
                break;
            }
            case 23:
            {
                Retract();
                return STAR;
                break;
            }
            case 24:
            {
                Retract();
                return DIV;
                break;
            }
            case 25:
            {
                Retract();
                return REM;
                break;
            }
            case 26:
            {
                Retract();
                return PLUS_PLUS;
                break;
            }
            case 27:
            {
                Retract();
                return MINUS_MINUS;
                break;
            }
            case 28:
            {
                Retract();
                return EXCLAMATION;
                break;
            }
            case 29:
            {
                Retract();
                return QUEST;
                break;
            }
            case 30:
            {
                Retract();
                return TILDE;
                break;
            }
            case 31:
            {
                Retract();
                return DOT;
                break;
            }
            case 32:
            {
                Retract();
                return ARROW;
                break;
            }
            case 33:
            {
                Retract();
                return LBRACKET;
                break;
            }
            case 34:
            {
                Retract();
                return RBRACKET;
                break;
            }
            case 35:
            {
                Retract();
                return LPAREN;
                break;
            }
            case 36:
            {
                Retract();
                return RPAREN;
                break;
            }
            case 37:
            {
                Retract();
                return LBRACE;
                break;
            }
            case 38:
            {
                Retract();
                return RBRACE;
                break;
            }
            case 39:
            {
                Retract();
                return COLON;
                break;
            }
            case 40:
            {
                Retract();
                return SEMICOLON;
                break;
            }
            case 41:
            {
                Retract();
                return COMMA;
                break;
            }
            case 42:
            {
                Retract();
                return ASSIGN;
                break;
            }
            case 43:
            {
                if (!vars.matchFilePath) return System.Lex.INVALID_TOKEN;
                Retract();
                return FILEPATH;
                break;
            }
        }
        return System.Lex.CONTINUE_TOKEN;
    }
    public ScmpgLexer_Variables vars;
    private List<System.Lex.Keyword> keywords;
    private System.Lex.KeywordMap keywordMap;
}

public class ScmpgLexer_Variables
{
    public ScmpgLexer_Variables()
    {
    }
    public int leftAngleCount;
    public bool matchFilePath;
}
