// this file has been generated from 'C:/work/cmajor-mod/cmajor/projects/tools/soulcm/cm2html/cm.token.lexer' using SoulCm lexer generator scmlg version 5.0.0

using System;
using System.Collections;
using cm.token;
using cm.keyword;

namespace cm.lexer
{
    public class CmTokenLexer : System.Lex.Lexer
    {
        public CmTokenLexer(const uchar* start_, const uchar* end_, const string& fileName_) :
            base(start_, end_, fileName_, "cm.lexer.CmTokenLexer.classmap")
        {
            auto classMapResult = System.Lex.GetClassMap(ClassMapName());
            if (classMapResult.Error())
            {
                SetErrorId(classMapResult.GetErrorId());
                return;
            }
            SetClassMap(classMapResult.Value());
            SetKeywordMap(GetKeywords());
        }
        public override int NextState(int state, uchar c)
        {
            int cls = GetClass(c);
            switch (state)
            {
                case 0:
                {
                    switch (cls)
                    {
                        case 0:
                        case 8:
                        case 9:
                        case 11:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        {
                            return 1;
                        }
                        case 2:
                        {
                            return 2;
                        }
                        case 3:
                        {
                            return 3;
                        }
                        case 4:
                        case 5:
                        {
                            return 4;
                        }
                        case 6:
                        {
                            return 5;
                        }
                        case 10:
                        {
                            return 6;
                        }
                        case 12:
                        {
                            return 7;
                        }
                        case 13:
                        {
                            return 8;
                        }
                        case 14:
                        {
                            return 9;
                        }
                        case 15:
                        {
                            return 10;
                        }
                        case 16:
                        {
                            return 11;
                        }
                        case 22:
                        {
                            return 12;
                        }
                        case 23:
                        {
                            return 13;
                        }
                        case 33:
                        case 35:
                        {
                            return 14;
                        }
                        case 34:
                        {
                            return 15;
                        }
                        case 36:
                        {
                            return 16;
                        }
                        case 37:
                        {
                            return 17;
                        }
                        case 38:
                        {
                            return 18;
                        }
                        case 39:
                        {
                            return 19;
                        }
                        case 40:
                        {
                            return 20;
                        }
                        case 41:
                        {
                            return 21;
                        }
                        case 42:
                        {
                            return 22;
                        }
                        case 43:
                        {
                            return 23;
                        }
                        case 44:
                        {
                            return 24;
                        }
                        case 45:
                        {
                            return 25;
                        }
                        case 46:
                        {
                            return 26;
                        }
                        case 47:
                        {
                            return 27;
                        }
                        case 48:
                        {
                            return 28;
                        }
                        case 49:
                        {
                            return 29;
                        }
                        case 50:
                        {
                            return 30;
                        }
                        case 51:
                        {
                            return 31;
                        }
                        case 52:
                        {
                            return 32;
                        }
                        case 53:
                        {
                            return 33;
                        }
                        case 54:
                        {
                            return 34;
                        }
                        case 55:
                        {
                            return 35;
                        }
                        case 56:
                        {
                            return 36;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 36:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(45);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 35:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(44);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 34:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(43);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 33:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(42);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 32:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(40);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 31:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(39);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 30:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(38);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 29:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(37);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 28:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(36);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 27:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(35);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 26:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(34);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 25:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(31);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 24:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(27);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 23:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(25);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 22:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(30);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 37:
                        {
                            return 37;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 37:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(16);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 21:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(13);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 20:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(14);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 40:
                        {
                            return 38;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 38:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(11);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 19:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(12);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 39:
                        {
                            return 39;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 39:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(10);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 18:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(20);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 37:
                        {
                            return 40;
                        }
                        case 38:
                        {
                            return 41;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 41:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(22);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 40:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(18);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 17:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(41);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 37:
                        {
                            return 42;
                        }
                        case 38:
                        {
                            return 43;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 43:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(9);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 42:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(15);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 16:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(19);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 36:
                        {
                            return 44;
                        }
                        case 37:
                        {
                            return 45;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 45:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(17);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 38:
                        {
                            return 46;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 46:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(8);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 44:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(21);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 15:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(4);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 8:
                        {
                            return 47;
                        }
                        case 9:
                        {
                            return 48;
                        }
                        case 10:
                        {
                            return 49;
                        }
                        case 11:
                        {
                            return 50;
                        }
                        case 12:
                        {
                            return 51;
                        }
                        case 25:
                        {
                            return 52;
                        }
                        case 26:
                        {
                            return 53;
                        }
                        case 33:
                        {
                            return 54;
                        }
                        case 34:
                        case 35:
                        {
                            return 55;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 55:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(4);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 10:
                        {
                            return 49;
                        }
                        case 11:
                        {
                            return 50;
                        }
                        case 12:
                        {
                            return 51;
                        }
                        case 25:
                        {
                            return 52;
                        }
                        case 26:
                        {
                            return 53;
                        }
                        case 33:
                        {
                            return 54;
                        }
                        case 34:
                        case 35:
                        {
                            return 55;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 54:
                {
                    switch (cls)
                    {
                        case 12:
                        {
                            return 51;
                        }
                        case 25:
                        {
                            return 52;
                        }
                        case 26:
                        {
                            return 53;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 54;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 53:
                {
                    switch (cls)
                    {
                        case 13:
                        {
                            return 56;
                        }
                        case 14:
                        {
                            return 57;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 58;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 58:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(5);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 58;
                        }
                        case 27:
                        {
                            return 59;
                        }
                        case 28:
                        {
                            return 60;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 60:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(5);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 59:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(5);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 57:
                {
                    switch (cls)
                    {
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 58;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 56:
                {
                    switch (cls)
                    {
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 58;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 52:
                {
                    switch (cls)
                    {
                        case 13:
                        {
                            return 56;
                        }
                        case 14:
                        {
                            return 57;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 58;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 51:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(5);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 27:
                        {
                            return 59;
                        }
                        case 28:
                        {
                            return 60;
                        }
                        case 25:
                        {
                            return 61;
                        }
                        case 26:
                        {
                            return 62;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 63;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 63:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(5);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 27:
                        {
                            return 59;
                        }
                        case 28:
                        {
                            return 60;
                        }
                        case 25:
                        {
                            return 61;
                        }
                        case 26:
                        {
                            return 62;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 63;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 62:
                {
                    switch (cls)
                    {
                        case 13:
                        {
                            return 64;
                        }
                        case 14:
                        {
                            return 65;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 66;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 66:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(5);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 27:
                        {
                            return 59;
                        }
                        case 28:
                        {
                            return 60;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 66;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 65:
                {
                    switch (cls)
                    {
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 66;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 64:
                {
                    switch (cls)
                    {
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 66;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 61:
                {
                    switch (cls)
                    {
                        case 13:
                        {
                            return 64;
                        }
                        case 14:
                        {
                            return 65;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 66;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 50:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(4);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 49:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(4);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 48:
                {
                    switch (cls)
                    {
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 67;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 67:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(4);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 10:
                        {
                            return 49;
                        }
                        case 11:
                        {
                            return 50;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 67;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 47:
                {
                    switch (cls)
                    {
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 67;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 14:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(4);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 10:
                        {
                            return 49;
                        }
                        case 11:
                        {
                            return 50;
                        }
                        case 12:
                        {
                            return 51;
                        }
                        case 25:
                        {
                            return 52;
                        }
                        case 26:
                        {
                            return 53;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 68;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 68:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(4);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 10:
                        {
                            return 49;
                        }
                        case 11:
                        {
                            return 50;
                        }
                        case 12:
                        {
                            return 51;
                        }
                        case 25:
                        {
                            return 52;
                        }
                        case 26:
                        {
                            return 53;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 68;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 13:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 71:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(7);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 70:
                {
                    switch (cls)
                    {
                        case 17:
                        {
                            return 70;
                        }
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 28:
                        case 33:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 72;
                        }
                        case 8:
                        {
                            return 73;
                        }
                        case 9:
                        {
                            return 74;
                        }
                        case 10:
                        {
                            return 75;
                        }
                        case 11:
                        {
                            return 76;
                        }
                        case 18:
                        {
                            return 77;
                        }
                        case 19:
                        {
                            return 78;
                        }
                        case 20:
                        {
                            return 79;
                        }
                        case 21:
                        {
                            return 80;
                        }
                        case 23:
                        {
                            return 81;
                        }
                        case 27:
                        {
                            return 82;
                        }
                        case 29:
                        {
                            return 83;
                        }
                        case 30:
                        {
                            return 84;
                        }
                        case 31:
                        {
                            return 85;
                        }
                        case 32:
                        {
                            return 86;
                        }
                        case 34:
                        case 35:
                        {
                            return 87;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 87:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 34:
                        case 35:
                        {
                            return 88;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 88:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 34:
                        case 35:
                        {
                            return 88;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 86:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 85:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 84:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 89;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 89:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 89;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 83:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 89;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 82:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 81:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(7);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 80:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 79:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 78:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 77:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 76:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 90;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 90:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 91;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 91:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 92;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 92:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 93;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 93:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 94;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 94:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 95;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 95:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 96;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 96:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 97;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 97:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 75:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 98;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 98:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 99;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 99:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 100;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 100:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 101;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 101:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 74:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 102;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 102:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 102;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 73:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 102;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 72:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 69:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 69;
                        }
                        case 17:
                        {
                            return 70;
                        }
                        case 23:
                        {
                            return 71;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 12:
                {
                    switch (cls)
                    {
                        case 23:
                        {
                            return 103;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 103:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 104;
                        }
                        case 23:
                        {
                            return 105;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 105:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(7);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 104:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 104;
                        }
                        case 23:
                        {
                            return 105;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 11:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 106;
                        }
                        case 16:
                        {
                            return 107;
                        }
                        case 17:
                        {
                            return 108;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 108:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 17:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 28:
                        case 33:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 109;
                        }
                        case 8:
                        {
                            return 110;
                        }
                        case 9:
                        {
                            return 111;
                        }
                        case 10:
                        {
                            return 112;
                        }
                        case 11:
                        {
                            return 113;
                        }
                        case 16:
                        {
                            return 114;
                        }
                        case 18:
                        {
                            return 115;
                        }
                        case 19:
                        {
                            return 116;
                        }
                        case 20:
                        {
                            return 117;
                        }
                        case 21:
                        {
                            return 118;
                        }
                        case 27:
                        {
                            return 119;
                        }
                        case 29:
                        {
                            return 120;
                        }
                        case 30:
                        {
                            return 121;
                        }
                        case 31:
                        {
                            return 122;
                        }
                        case 32:
                        {
                            return 123;
                        }
                        case 34:
                        case 35:
                        {
                            return 124;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 124:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        case 34:
                        case 35:
                        {
                            return 125;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 125:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        case 34:
                        case 35:
                        {
                            return 125;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 123:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 122:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 121:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 126;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 126:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 126;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 120:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 126;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 119:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 118:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 117:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 116:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 115:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 114:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(6);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 113:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 127;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 127:
                {
                    switch (cls)
                    {
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 128;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 128:
                {
                    switch (cls)
                    {
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 129;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 129:
                {
                    switch (cls)
                    {
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 130;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 130:
                {
                    switch (cls)
                    {
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 131;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 131:
                {
                    switch (cls)
                    {
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 132;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 132:
                {
                    switch (cls)
                    {
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 133;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 133:
                {
                    switch (cls)
                    {
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 134;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 134:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 112:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 135;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 135:
                {
                    switch (cls)
                    {
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 136;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 136:
                {
                    switch (cls)
                    {
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 137;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 137:
                {
                    switch (cls)
                    {
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 138;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 138:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 111:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 139;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 139:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 139;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 110:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 139;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 109:
                {
                    switch (cls)
                    {
                        case 16:
                        {
                            return 107;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 107:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(6);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 106:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 106;
                        }
                        case 16:
                        {
                            return 107;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 10:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(3);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 16:
                        {
                            return 11;
                        }
                        case 22:
                        {
                            return 12;
                        }
                        case 23:
                        {
                            return 13;
                        }
                        case 0:
                        case 1:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 15:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 140;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 140:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(3);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 15:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 140;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 9:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(24);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 14:
                        {
                            return 141;
                        }
                        case 38:
                        {
                            return 142;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 142:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(33);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 141:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(29);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 8:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(23);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 13:
                        {
                            return 143;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 143:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(28);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 7:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(32);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 63;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 6:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(3);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 16:
                        {
                            return 11;
                        }
                        case 22:
                        {
                            return 12;
                        }
                        case 23:
                        {
                            return 13;
                        }
                        case 0:
                        case 1:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 15:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 140;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 5:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(26);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 6:
                        {
                            return 144;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 144:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 145;
                        }
                        case 2:
                        {
                            return 146;
                        }
                        case 3:
                        {
                            return 147;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 147:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(2);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 146:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(2);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 3:
                        {
                            return 148;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 148:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(2);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 145:
                {
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        {
                            return 145;
                        }
                        case 2:
                        {
                            return 146;
                        }
                        case 3:
                        {
                            return 147;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 4:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(1);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 4:
                        case 5:
                        {
                            return 4;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 3:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(0);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 2:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(0);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 3:
                        {
                            return 149;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
                case 149:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(0);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    return -1;
                }
                case 1:
                {
                    auto prevMatch = token.match;
                    token.match = lexeme;
                    long tokenId = GetTokenId(3);
                    if (tokenId == System.Lex.CONTINUE_TOKEN)
                    {
                        token.id = System.Lex.CONTINUE_TOKEN;
                        return -1;
                    }
                    else if (tokenId != System.Lex.INVALID_TOKEN)
                    {
                        token.id = tokenId;
                    }
                    else
                    {
                        token.match = prevMatch;
                    }
                    switch (cls)
                    {
                        case 0:
                        case 1:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 15:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        {
                            return 140;
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                    break;
                }
            }
            return -1;
        }
        public long GetTokenId(int ruleIndex)
        {
            switch (ruleIndex)
            {
                case 0:
                {
                    Retract();
                    break;
                }
                case 1:
                {
                    Retract();
                    return WS;
                    break;
                }
                case 2:
                {
                    Retract();
                    return COMMENT;
                    break;
                }
                case 3:
                {
                    Retract();
                    long kw = GetKeywordToken(token.match);
                    if (kw == INVALID_TOKEN) return ID;
                    else return KEYWORD;
                    break;
                }
                case 4:
                {
                    Retract();
                    return INTEGER_LITERAL;
                    break;
                }
                case 5:
                {
                    Retract();
                    return FLOATING_LITERAL;
                    break;
                }
                case 6:
                {
                    Retract();
                    return CHAR_LITERAL;
                    break;
                }
                case 7:
                {
                    Retract();
                    return STRING_LITERAL;
                    break;
                }
                case 8:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 9:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 10:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 11:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 12:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 13:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 14:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 15:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 16:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 17:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 18:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 19:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 20:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 21:
                {
                    if (vars.parsingOperatorFunctionGroupId) return System.Lex.INVALID_TOKEN;
                    Retract();
                    return OTHER;
                    break;
                }
                case 22:
                {
                    if (vars.leftAngleCount > 0) return System.Lex.INVALID_TOKEN;
                    Retract();
                    return OTHER;
                    break;
                }
                case 23:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 24:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 25:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 26:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 27:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 28:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 29:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 30:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 31:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 32:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 33:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 34:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 35:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 36:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 37:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 38:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 39:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 40:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 41:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 42:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 43:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 44:
                {
                    Retract();
                    return OTHER;
                    break;
                }
                case 45:
                {
                    Retract();
                    return OTHER;
                    break;
                }
            }
            return System.Lex.CONTINUE_TOKEN;
        }
        public CmTokenLexer_Variables vars;
    }

    public class CmTokenLexer_Variables
    {
        public CmTokenLexer_Variables()
        {
        }
        public bool parsingOperatorFunctionGroupId;
        public int leftAngleCount;
    }

} // cm.lexer
