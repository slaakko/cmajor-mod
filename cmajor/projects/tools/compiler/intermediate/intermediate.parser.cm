// this file has been generated from 'C:/work/cmajor-mod/cmajor/projects/tools/compiler/intermediate/intermediate.parser' using SoulCm parser generator scmpg version 5.0.0

using System;
using System.Lex;
using System.Parsing;
using intermediate.token;

namespace intermediate.parser
{
    public static class intermediate_parser<LexerT>
    {
        public static System.Result<bool> Parse(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            if (lexer.Log() != null)
            {
                auto result = lexer.Log()->WriteBeginRule(u"parse");
                if (result.Error())
                {
                    return (System.ErrorId(result.GetErrorId())); 
                }
                lexer.Log()->IncIndent();
            }
            #endif
            auto incResult0 = ++lexer; 
            if (incResult0.Error())
            {
                return (System.ErrorId(incResult0.GetErrorId())); 
            }
            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.IntermediateFile(lexer, context);
            if (matchResult.Error())
            {
                return (System.ErrorId(matchResult.GetErrorId()));
            }
            System.Parsing.Match match = matchResult.Value();
            #if (DEBUG)
            if (lexer.Log() != null)
            {
                lexer.Log()->DecIndent();
                auto result = lexer.Log()->WriteEndRule(u"parse");
                if (result.Error())
                {
                    return (System.ErrorId(result.GetErrorId())); 
                }
            }
            #endif
            if (match.hit)
            {
                if (*lexer == System.Lex.END_TOKEN)
                {
                    return System.Result<bool>(true);
                }
                else
                {
                    return System.Result<bool>(lexer.GetFarthestError());
                }
            }
            else
            {
                return System.Result<bool>(lexer.GetFarthestError());
            }
        }
        public static System.Result<System.Parsing.Match> IntermediateFile(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"IntermediateFile");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957633);
            System.UniquePtr<System.Parsing.Value<bool>> types;
            System.UniquePtr<System.Parsing.Value<bool>> data;
            System.UniquePtr<System.Parsing.Value<bool>> metadata;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(true);
                                if (match.hit)
                                {
                                    context->GetCompileUnit()->SetFilePath(lexer.FileName());
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(true);
                                long save = lexer.GetPos();
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeDeclarations(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    types.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                    if (match.hit)
                                    {
                                        *parentMatch6 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                    }
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(true);
                            long save = lexer.GetPos();
                            System.Parsing.Match* parentMatch8 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.DataDefinitions(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                data.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                if (match.hit)
                                {
                                    *parentMatch8 = match;
                                }
                                else
                                {
                                    lexer.SetPos(save);
                                }
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch9 = &match;
                    {
                        System.Parsing.Match match(true);
                        long save = lexer.GetPos();
                        System.Parsing.Match* parentMatch10 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Functions(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            if (match.hit)
                            {
                                *parentMatch10 = match;
                            }
                            else
                            {
                                lexer.SetPos(save);
                            }
                        }
                        *parentMatch9 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch11 = &match;
                {
                    System.Parsing.Match match(true);
                    long save = lexer.GetPos();
                    System.Parsing.Match* parentMatch12 = &match;
                    {
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Metadata(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        metadata.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                        if (match.hit)
                        {
                            *parentMatch12 = match;
                        }
                        else
                        {
                            lexer.SetPos(save);
                        }
                    }
                    *parentMatch11 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"IntermediateFile");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"IntermediateFile");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> TypeDeclarations(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"TypeDeclarations");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957634);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == TYPES)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == LBRACE)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch4 = &match;
                    {
                        System.Parsing.Match match(true);
                        System.Parsing.Match* parentMatch5 = &match;
                        {
                            while (true)
                            {
                                long save = lexer.GetPos();
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeDeclaration(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    if (match.hit)
                                    {
                                        *parentMatch5 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                        break;
                                    }
                                }
                            }
                        }
                        *parentMatch4 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch6 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == RBRACE)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeDeclarations");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<bool> result = context->GetTypes()->ResolveReferences();
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<bool>(true)));
                        }
                        *parentMatch7 = match;
                    }
                    *parentMatch6 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeDeclarations");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"TypeDeclarations");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> TypeDeclaration(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"TypeDeclaration");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957635);
            int tid = int();
            System.UniquePtr<System.Parsing.Value<int>> typeId;
            System.UniquePtr<System.Parsing.Value<bool>> arrayType;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeId(lexer);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            typeId.Reset(cast<System.Parsing.Value<int>*>(match.value));
                            if (match.hit)
                            {
                                tid = typeId->value;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == ASSIGN)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == TYPE)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch5 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch6 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch8 = &match;
                        switch (*lexer)
                        {
                            case LBRACE:
                            {
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.StructureType(lexer, context, tid);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                if (match.hit)
                                {
                                    *parentMatch8 = match;
                                }
                                break;
                            }
                            case LBRACKET:
                            {
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.ArrayType(lexer, context, tid);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                arrayType.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                if (match.hit)
                                {
                                    *parentMatch8 = match;
                                }
                                break;
                            }
                            case FUNCTION:
                            {
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.FunctionType(lexer, context, tid);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                if (match.hit)
                                {
                                    *parentMatch8 = match;
                                }
                                break;
                            }
                        }
                        *parentMatch7 = match;
                    }
                    *parentMatch6 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeDeclaration");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"TypeDeclaration");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> TypeId(LexerT& lexer)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"TypeId");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957636);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Parsing.Match match(false);
                    if (*lexer == TYPEID)
                    {
                        auto incResult0 = ++lexer;
                        if (incResult0.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                        }
                        match.hit = true;
                    }
                    if (match.hit)
                    {
                        #if (DEBUG)
                            if (parser_debug_write_to_log)
                            {
                                auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeId");
                                if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                            }
                        #endif
                        ustring s = lexer.GetMatch(pos);
                        Result<string> result = ToUtf8(s);
                        if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                        Result<int> userTypeIdResult = intermediate.MakeUserTypeId(result.Value());
                        if (userTypeIdResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(userTypeIdResult.GetErrorId()));
                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(userTypeIdResult.Value())));
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeId");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"TypeId");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> FundamentalTypeId(LexerT& lexer)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"FundamentalTypeId");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957637);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case VOID:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == VOID)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(intermediate.voidTypeId)));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case BOOL:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == BOOL)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(intermediate.boolTypeId)));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case SBYTE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == SBYTE)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(intermediate.sbyteTypeId)));
                        }
                        *parentMatch3 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case BYTE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch4 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == BYTE)
                        {
                            auto incResult3 = ++lexer;
                            if (incResult3.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(intermediate.byteTypeId)));
                        }
                        *parentMatch4 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case SHORT:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == SHORT)
                        {
                            auto incResult4 = ++lexer;
                            if (incResult4.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(intermediate.shortTypeId)));
                        }
                        *parentMatch5 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case USHORT:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch6 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == USHORT)
                        {
                            auto incResult5 = ++lexer;
                            if (incResult5.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult5.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(intermediate.ushortTypeId)));
                        }
                        *parentMatch6 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case INT:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == INT)
                        {
                            auto incResult6 = ++lexer;
                            if (incResult6.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult6.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(intermediate.intTypeId)));
                        }
                        *parentMatch7 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case UINT:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch8 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == UINT)
                        {
                            auto incResult7 = ++lexer;
                            if (incResult7.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult7.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(intermediate.uintTypeId)));
                        }
                        *parentMatch8 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case LONG:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch9 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == LONG)
                        {
                            auto incResult8 = ++lexer;
                            if (incResult8.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult8.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(intermediate.longTypeId)));
                        }
                        *parentMatch9 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case ULONG:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch10 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == ULONG)
                        {
                            auto incResult9 = ++lexer;
                            if (incResult9.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult9.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(intermediate.ulongTypeId)));
                        }
                        *parentMatch10 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case FLOAT:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch11 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == FLOAT)
                        {
                            auto incResult10 = ++lexer;
                            if (incResult10.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult10.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(intermediate.floatTypeId)));
                        }
                        *parentMatch11 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case DOUBLE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch12 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == DOUBLE)
                        {
                            auto incResult11 = ++lexer;
                            if (incResult11.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult11.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(intermediate.doubleTypeId)));
                        }
                        *parentMatch12 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FundamentalTypeId");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"FundamentalTypeId");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> TypeRef(LexerT& lexer)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"TypeRef");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957638);
            System.Lex.Span span = System.Lex.Span();
            int baseTypeId = int();
            sbyte pointerCount = sbyte();
            System.UniquePtr<System.Parsing.Value<int>> typeId;
            System.UniquePtr<System.Parsing.Value<int>> fundamentalTypeId;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            switch (*lexer)
                            {
                                case TYPEID:
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch5 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeId(lexer);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        typeId.Reset(cast<System.Parsing.Value<int>*>(match.value));
                                        if (match.hit)
                                        {
                                            span = lexer.GetSpan(pos);
                                            baseTypeId = typeId->value;
                                        }
                                        *parentMatch5 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch4 = match;
                                    }
                                    break;
                                }
                                case BOOL:
                                case BYTE:
                                case DOUBLE:
                                case FLOAT:
                                case INT:
                                case LONG:
                                case SBYTE:
                                case SHORT:
                                case UINT:
                                case ULONG:
                                case USHORT:
                                case VOID:
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.FundamentalTypeId(lexer);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        fundamentalTypeId.Reset(cast<System.Parsing.Value<int>*>(match.value));
                                        if (match.hit)
                                        {
                                            span = lexer.GetSpan(pos);
                                            baseTypeId = fundamentalTypeId->value;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch4 = match;
                                    }
                                    break;
                                }
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch8 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch9 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch10 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                if (*lexer == AST)
                                                {
                                                    auto incResult0 = ++lexer;
                                                    if (incResult0.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                if (match.hit)
                                                {
                                                    ++pointerCount;
                                                }
                                                *parentMatch10 = match;
                                            }
                                            *parentMatch9 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch8 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeRef");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<intermediate.TypeRef>(MakeTypeRef(span, baseTypeId, pointerCount))));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"TypeRef");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"TypeRef");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> StructureType(LexerT& lexer, intermediate.Context* context, int typeId)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"StructureType");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957639);
            System.Lex.Span span = System.Lex.Span();
            List<intermediate.TypeRef> fieldTypeRefs = List<intermediate.TypeRef>();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> first;
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> next;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == LBRACE)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            span = lexer.GetSpan(pos);
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        System.Parsing.Match match(true);
                        long save = lexer.GetPos();
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        first.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                                        if (match.hit)
                                        {
                                            fieldTypeRefs.Add(first->value);
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch8 = &match;
                                    {
                                        System.Parsing.Match match(true);
                                        System.Parsing.Match* parentMatch9 = &match;
                                        {
                                            while (true)
                                            {
                                                long save = lexer.GetPos();
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch11 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            if (*lexer == COMMA)
                                                            {
                                                                auto incResult1 = ++lexer;
                                                                if (incResult1.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                                }
                                                                match.hit = true;
                                                            }
                                                            *parentMatch11 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch12 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch13 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    next.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        fieldTypeRefs.Add(next->value);
                                                                    }
                                                                    *parentMatch13 = match;
                                                                }
                                                                *parentMatch12 = match;
                                                            }
                                                            *parentMatch11 = match;
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch9 = match;
                                                    }
                                                    else
                                                    {
                                                        lexer.SetPos(save);
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        *parentMatch8 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                            }
                            if (match.hit)
                            {
                                *parentMatch4 = match;
                            }
                            else
                            {
                                lexer.SetPos(save);
                            }
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch14 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch15 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == RBRACE)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            context->AddStructureType(span, typeId, fieldTypeRefs);
                        }
                        *parentMatch15 = match;
                    }
                    *parentMatch14 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"StructureType");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"StructureType");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ArrayType(LexerT& lexer, intermediate.Context* context, int typeId)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ArrayType");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957640);
            System.Lex.Span span = System.Lex.Span();
            long size = long();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> elementTypeRef;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == LBRACKET)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    span = lexer.GetSpan(pos);
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == NUMBER)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        auto result = intermediate.GetLong(lexer.GetMatch(pos));
                                        if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                        else size = result.Value();
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch8 = &match;
                            {
                                long pos = lexer.GetPos();
                                bool pass = true;
                                System.Parsing.Match match(false);
                                if (*lexer == ID)
                                {
                                    auto incResult2 = ++lexer;
                                    if (incResult2.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    pass = lexer.GetChar(pos) == 'x';
                                }
                                if (match.hit && !pass)
                                {
                                    match = System.Parsing.Match(false);
                                }
                                *parentMatch8 = match;
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch9 = &match;
                    {
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        elementTypeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                        *parentMatch9 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch10 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch11 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == RBRACKET)
                        {
                            auto incResult3 = ++lexer;
                            if (incResult3.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ArrayType");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            context->AddArrayType(span, typeId, size, elementTypeRef->value);
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<bool>(true)));
                        }
                        *parentMatch11 = match;
                    }
                    *parentMatch10 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ArrayType");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ArrayType");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> FunctionType(LexerT& lexer, intermediate.Context* context, int typeId)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"FunctionType");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957641);
            System.Lex.Span span = System.Lex.Span();
            List<intermediate.TypeRef> paramTypeRefs = List<intermediate.TypeRef>();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> returnTypeRef;
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> first;
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> next;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == FUNCTION)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    span = lexer.GetSpan(pos);
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                returnTypeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == LPAREN)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch6 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        System.Parsing.Match match(true);
                        long save = lexer.GetPos();
                        System.Parsing.Match* parentMatch8 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch9 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch10 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch11 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        first.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                                        if (match.hit)
                                        {
                                            paramTypeRefs.Add(first->value);
                                        }
                                        *parentMatch11 = match;
                                    }
                                    *parentMatch10 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch12 = &match;
                                    {
                                        System.Parsing.Match match(true);
                                        System.Parsing.Match* parentMatch13 = &match;
                                        {
                                            while (true)
                                            {
                                                long save = lexer.GetPos();
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch14 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch15 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            if (*lexer == COMMA)
                                                            {
                                                                auto incResult2 = ++lexer;
                                                                if (incResult2.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                                }
                                                                match.hit = true;
                                                            }
                                                            *parentMatch15 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch16 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch17 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    next.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        paramTypeRefs.Add(next->value);
                                                                    }
                                                                    *parentMatch17 = match;
                                                                }
                                                                *parentMatch16 = match;
                                                            }
                                                            *parentMatch15 = match;
                                                        }
                                                        *parentMatch14 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch13 = match;
                                                    }
                                                    else
                                                    {
                                                        lexer.SetPos(save);
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        *parentMatch12 = match;
                                    }
                                    *parentMatch10 = match;
                                }
                                *parentMatch9 = match;
                            }
                            if (match.hit)
                            {
                                *parentMatch8 = match;
                            }
                            else
                            {
                                lexer.SetPos(save);
                            }
                        }
                        *parentMatch7 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch18 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch19 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == RPAREN)
                        {
                            auto incResult3 = ++lexer;
                            if (incResult3.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            context->AddFunctionType(span, typeId, returnTypeRef->value, paramTypeRefs);
                        }
                        *parentMatch19 = match;
                    }
                    *parentMatch18 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FunctionType");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"FunctionType");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> DataDefinitions(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"DataDefinitions");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957642);
            System.UniquePtr<System.Parsing.Value<bool>> dataDefinition;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == DATA)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == LBRACE)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch4 = &match;
                    {
                        System.Parsing.Match match(true);
                        System.Parsing.Match* parentMatch5 = &match;
                        {
                            while (true)
                            {
                                long save = lexer.GetPos();
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.DataDefinition(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    dataDefinition.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                    if (match.hit)
                                    {
                                        *parentMatch5 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                        break;
                                    }
                                }
                            }
                        }
                        *parentMatch4 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch6 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == RBRACE)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DataDefinitions");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<bool> result = context->GetData()->ResolveAddressValues();
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<bool>(true)));
                        }
                        *parentMatch7 = match;
                    }
                    *parentMatch6 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DataDefinitions");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"DataDefinitions");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> DataDefinition(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"DataDefinition");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957643);
            intermediate.TypeRef tref = intermediate.TypeRef();
            System.Lex.Span span = System.Lex.Span();
            string variableName = string();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.Value> initializer;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                        if (match.hit)
                        {
                            tref = typeRef->value;
                            auto result = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == ID)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                ustring s = lexer.GetMatch(pos);
                                auto result = intermediate.GetString(s);
                                if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                else variableName = result.Value();
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch5 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch6 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch8 = &match;
                            switch (*lexer)
                            {
                                case SEMICOLON:
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch9 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        if (*lexer == SEMICOLON)
                                        {
                                            auto incResult1 = ++lexer;
                                            if (incResult1.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            Result<bool> result = context->AddGlobalVariable(span, tref.GetType(), variableName, null);
                                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                        }
                                        *parentMatch9 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch8 = match;
                                    }
                                    break;
                                }
                                case ASSIGN:
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch10 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == ASSIGN)
                                        {
                                            auto incResult2 = ++lexer;
                                            if (incResult2.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch10 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch11 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch12 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Constant(lexer, context, tref.GetType());
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                initializer.Reset(cast<intermediate.Value*>(match.value));
                                                if (match.hit)
                                                {
                                                    Result<bool> result = context->AddGlobalVariable(span, tref.GetType(), variableName, initializer.Release());
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                                }
                                                *parentMatch12 = match;
                                            }
                                            *parentMatch11 = match;
                                        }
                                        *parentMatch10 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch8 = match;
                                    }
                                    break;
                                }
                            }
                            *parentMatch7 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DataDefinition");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<bool>(true)));
                        }
                        *parentMatch6 = match;
                    }
                    *parentMatch5 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DataDefinition");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"DataDefinition");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Constant(LexerT& lexer, intermediate.Context* context, Type* type)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Constant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957644);
            System.UniquePtr<intermediate.Value> boolConstant;
            System.UniquePtr<intermediate.Value> sbyteConstant;
            System.UniquePtr<intermediate.Value> byteConstant;
            System.UniquePtr<intermediate.Value> shortConstant;
            System.UniquePtr<intermediate.Value> ushortConstant;
            System.UniquePtr<intermediate.Value> intConstant;
            System.UniquePtr<intermediate.Value> uintConstant;
            System.UniquePtr<intermediate.Value> longConstant;
            System.UniquePtr<intermediate.Value> ulongConstant;
            System.UniquePtr<intermediate.Value> floatConstant;
            System.UniquePtr<intermediate.Value> doubleConstant;
            System.UniquePtr<intermediate.Value> addressConstant;
            System.UniquePtr<intermediate.Value> arrayConstant;
            System.UniquePtr<intermediate.Value> structureConstant;
            System.UniquePtr<intermediate.Value> stringConstant;
            System.UniquePtr<intermediate.Value> stringArrayConstant;
            System.UniquePtr<intermediate.Value> conversionConstant;
            System.UniquePtr<intermediate.Value> symbolConstant;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long save = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long save = lexer.GetPos();
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    switch (*lexer)
                    {
                        case BOOL:
                        case BYTE:
                        case DOUBLE:
                        case FLOAT:
                        case INT:
                        case LONG:
                        case SBYTE:
                        case SHORT:
                        case TYPEID:
                        case UINT:
                        case ULONG:
                        case USHORT:
                        case VOID:
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch3 = &match;
                            {
                                long save = lexer.GetPos();
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch4 = &match;
                                switch (*lexer)
                                {
                                    case BOOL:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch5 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.BoolConstant(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            boolConstant.Reset(cast<intermediate.Value*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, boolConstant.Release()));
                                            }
                                            *parentMatch5 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch4 = match;
                                        }
                                        break;
                                    }
                                    case SBYTE:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.SByteConstant(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            sbyteConstant.Reset(cast<intermediate.Value*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, sbyteConstant.Release()));
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch4 = match;
                                        }
                                        break;
                                    }
                                    case BYTE:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.ByteConstant(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            byteConstant.Reset(cast<intermediate.Value*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, byteConstant.Release()));
                                            }
                                            *parentMatch7 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch4 = match;
                                        }
                                        break;
                                    }
                                    case SHORT:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.ShortConstant(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            shortConstant.Reset(cast<intermediate.Value*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, shortConstant.Release()));
                                            }
                                            *parentMatch8 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch4 = match;
                                        }
                                        break;
                                    }
                                    case USHORT:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch9 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.UShortConstant(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            ushortConstant.Reset(cast<intermediate.Value*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, ushortConstant.Release()));
                                            }
                                            *parentMatch9 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch4 = match;
                                        }
                                        break;
                                    }
                                    case INT:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch10 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.IntConstant(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            intConstant.Reset(cast<intermediate.Value*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, intConstant.Release()));
                                            }
                                            *parentMatch10 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch4 = match;
                                        }
                                        break;
                                    }
                                    case UINT:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch11 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.UIntConstant(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            uintConstant.Reset(cast<intermediate.Value*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, uintConstant.Release()));
                                            }
                                            *parentMatch11 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch4 = match;
                                        }
                                        break;
                                    }
                                    case LONG:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch12 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.LongConstant(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            longConstant.Reset(cast<intermediate.Value*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, longConstant.Release()));
                                            }
                                            *parentMatch12 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch4 = match;
                                        }
                                        break;
                                    }
                                    case ULONG:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch13 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.ULongConstant(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            ulongConstant.Reset(cast<intermediate.Value*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, ulongConstant.Release()));
                                            }
                                            *parentMatch13 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch4 = match;
                                        }
                                        break;
                                    }
                                    case FLOAT:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch14 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.FloatConstant(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            floatConstant.Reset(cast<intermediate.Value*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, floatConstant.Release()));
                                            }
                                            *parentMatch14 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch4 = match;
                                        }
                                        break;
                                    }
                                    case DOUBLE:
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch15 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.DoubleConstant(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            doubleConstant.Reset(cast<intermediate.Value*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, doubleConstant.Release()));
                                            }
                                            *parentMatch15 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch4 = match;
                                        }
                                        break;
                                    }
                                }
                                *parentMatch3 = match;
                                if (!match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch16 = &match;
                                    lexer.SetPos(save);
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch17 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.AddressConstant(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            addressConstant.Reset(cast<intermediate.Value*>(match.value));
                                            if (match.hit)
                                            {
                                                #if (DEBUG)
                                                    if (parser_debug_write_to_log)
                                                    {
                                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                    }
                                                #endif
                                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, addressConstant.Release()));
                                            }
                                            *parentMatch17 = match;
                                        }
                                        *parentMatch16 = match;
                                    }
                                    *parentMatch3 = match;
                                }
                            }
                            if (match.hit)
                            {
                                *parentMatch2 = match;
                            }
                            break;
                        }
                        case LBRACKET:
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch18 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.ArrayConstant(lexer, context, type);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                arrayConstant.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, arrayConstant.Release()));
                                }
                                *parentMatch18 = match;
                            }
                            if (match.hit)
                            {
                                *parentMatch2 = match;
                            }
                            break;
                        }
                        case LBRACE:
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch19 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.StructureConstant(lexer, context, type);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                structureConstant.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, structureConstant.Release()));
                                }
                                *parentMatch19 = match;
                            }
                            if (match.hit)
                            {
                                *parentMatch2 = match;
                            }
                            break;
                        }
                        case STRING:
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch20 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.StringConstant(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                stringConstant.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, stringConstant.Release()));
                                }
                                *parentMatch20 = match;
                            }
                            if (match.hit)
                            {
                                *parentMatch2 = match;
                            }
                            break;
                        }
                        case ID:
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch21 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.StringArrayConstant(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                stringArrayConstant.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, stringArrayConstant.Release()));
                                }
                                *parentMatch21 = match;
                            }
                            if (match.hit)
                            {
                                *parentMatch2 = match;
                            }
                            break;
                        }
                    }
                    *parentMatch1 = match;
                    if (!match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch22 = &match;
                        lexer.SetPos(save);
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch23 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.ConversionConstant(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                conversionConstant.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, conversionConstant.Release()));
                                }
                                *parentMatch23 = match;
                            }
                            *parentMatch22 = match;
                        }
                        *parentMatch1 = match;
                    }
                }
                *parentMatch0 = match;
                if (!match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch24 = &match;
                    lexer.SetPos(save);
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch25 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.SymbolConstant(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            symbolConstant.Reset(cast<intermediate.Value*>(match.value));
                            if (match.hit)
                            {
                                #if (DEBUG)
                                    if (parser_debug_write_to_log)
                                    {
                                        auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                                        if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                    }
                                #endif
                                return System.Result<System.Parsing.Match>(System.Parsing.Match(true, symbolConstant.Release()));
                            }
                            *parentMatch25 = match;
                        }
                        *parentMatch24 = match;
                    }
                    *parentMatch0 = match;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Constant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Constant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> BoolConstant(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"BoolConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957645);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == BOOL)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        switch (*lexer)
                        {
                            case TRUE:
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch4 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == TRUE)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log)
                                            {
                                                auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BoolConstant");
                                                if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                            }
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetBoolValue(true)));
                                    }
                                    *parentMatch4 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch3 = match;
                                }
                                break;
                            }
                            case FALSE:
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == FALSE)
                                    {
                                        auto incResult2 = ++lexer;
                                        if (incResult2.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log)
                                            {
                                                auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BoolConstant");
                                                if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                            }
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetBoolValue(false)));
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch3 = match;
                                }
                                break;
                            }
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BoolConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"BoolConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> SByteConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"SByteConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957646);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == SBYTE)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SByteConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<sbyte> result = intermediate.GetSByte(lexer.GetMatch(pos));
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetSByteValue(result.Value())));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SByteConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"SByteConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ByteConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ByteConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957647);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == BYTE)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ByteConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<byte> result = intermediate.GetByte(lexer.GetMatch(pos));
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetByteValue(result.Value())));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ByteConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ByteConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ShortConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ShortConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957648);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == SHORT)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ShortConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<short> result = intermediate.GetShort(lexer.GetMatch(pos));
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetShortValue(result.Value())));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ShortConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ShortConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> UShortConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"UShortConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957649);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == USHORT)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UShortConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<ushort> result = intermediate.GetUShort(lexer.GetMatch(pos));
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetUShortValue(result.Value())));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UShortConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"UShortConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> IntConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"IntConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957650);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == INT)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"IntConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<int> result = intermediate.GetInt(lexer.GetMatch(pos));
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetIntValue(result.Value())));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"IntConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"IntConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> UIntConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"UIntConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957651);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == UINT)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UIntConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<uint> result = intermediate.GetUInt(lexer.GetMatch(pos));
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetUIntValue(result.Value())));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UIntConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"UIntConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> LongConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"LongConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957652);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == LONG)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LongConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<long> result = intermediate.GetLong(lexer.GetMatch(pos));
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetLongValue(result.Value())));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LongConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"LongConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ULongConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ULongConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957653);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == ULONG)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ULongConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<ulong> result = intermediate.GetULong(lexer.GetMatch(pos));
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetULongValue(result.Value())));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ULongConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ULongConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> FloatConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"FloatConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957654);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == FLOAT)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FloatConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<float> result = intermediate.GetFloat(lexer.GetMatch(pos));
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetFloatValue(result.Value())));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FloatConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"FloatConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> DoubleConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"DoubleConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957655);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == DOUBLE)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DoubleConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<double> result = intermediate.GetDouble(lexer.GetMatch(pos));
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetDoubleValue(result.Value())));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"DoubleConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"DoubleConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> AddressConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"AddressConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957656);
            intermediate.TypeRef tref = intermediate.TypeRef();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                    if (matchResult.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                    }
                    System.Parsing.Match match = matchResult.Value();
                    typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                    if (match.hit)
                    {
                        tref = typeRef->value;
                        auto result = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                        if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch2 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        switch (*lexer)
                        {
                            case NULL_TOKEN:
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == NULL_TOKEN)
                                    {
                                        auto incResult0 = ++lexer;
                                        if (incResult0.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log)
                                            {
                                                auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"AddressConstant");
                                                if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                            }
                                        #endif
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetNullValue(lexer.GetSpan(pos), tref.GetType())));
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch4 = match;
                                }
                                break;
                            }
                            case ID:
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == ID)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        #if (DEBUG)
                                            if (parser_debug_write_to_log)
                                            {
                                                auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"AddressConstant");
                                                if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                            }
                                        #endif
                                        ustring s = lexer.GetMatch(pos);
                                        auto result = intermediate.GetString(s);
                                        string id;
                                        if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                        id = result.Value();
                                        Result<intermediate.Value*> addressValueResult = context->GetData()->MakeAddressValue(lexer.GetSpan(pos), tref.GetType(), id, false);
                                        if (addressValueResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(addressValueResult.GetErrorId()));
                                        return System.Result<System.Parsing.Match>(System.Parsing.Match(true, addressValueResult.Value()));
                                    }
                                    *parentMatch6 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch4 = match;
                                }
                                break;
                            }
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch2 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"AddressConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"AddressConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ArrayConstant(LexerT& lexer, Context* context, Type* type)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ArrayConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957657);
            intermediate.ArrayType* arrayType = null;
            intermediate.Type* elementType = null;
            System.Lex.Span span = System.Lex.Span();
            List<intermediate.Value*> elements = List<intermediate.Value*>();
            System.UniquePtr<intermediate.Value> first;
            System.UniquePtr<intermediate.Value> next;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == LBRACKET)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            span = lexer.GetSpan(pos);
                            #assert (type->IsArrayType());
                            arrayType = cast<intermediate.ArrayType*>(type);
                            elementType = arrayType->ElementType();
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        System.Parsing.Match match(true);
                        long save = lexer.GetPos();
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Constant(lexer, context, elementType);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        first.Reset(cast<intermediate.Value*>(match.value));
                                        if (match.hit)
                                        {
                                            elements.Add(first.Release());
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch8 = &match;
                                    {
                                        System.Parsing.Match match(true);
                                        System.Parsing.Match* parentMatch9 = &match;
                                        {
                                            while (true)
                                            {
                                                long save = lexer.GetPos();
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch11 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            if (*lexer == COMMA)
                                                            {
                                                                auto incResult1 = ++lexer;
                                                                if (incResult1.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                                }
                                                                match.hit = true;
                                                            }
                                                            *parentMatch11 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch12 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch13 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Constant(lexer, context, elementType);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    next.Reset(cast<intermediate.Value*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        elements.Add(next.Release());
                                                                    }
                                                                    *parentMatch13 = match;
                                                                }
                                                                *parentMatch12 = match;
                                                            }
                                                            *parentMatch11 = match;
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch9 = match;
                                                    }
                                                    else
                                                    {
                                                        lexer.SetPos(save);
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        *parentMatch8 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                            }
                            if (match.hit)
                            {
                                *parentMatch4 = match;
                            }
                            else
                            {
                                lexer.SetPos(save);
                            }
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch14 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch15 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == RBRACKET)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ArrayConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->MakeArrayValue(span, elements, arrayType)));
                        }
                        *parentMatch15 = match;
                    }
                    *parentMatch14 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ArrayConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ArrayConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> StructureConstant(LexerT& lexer, Context* context, Type* type)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"StructureConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957658);
            int index = int();
            intermediate.StructureType* structureType = null;
            System.Lex.Span span = System.Lex.Span();
            List<intermediate.Value*> fieldValues = List<intermediate.Value*>();
            System.UniquePtr<intermediate.Value> first;
            System.UniquePtr<intermediate.Value> next;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == LBRACE)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            span = lexer.GetSpan(pos);
                            #assert (type->IsStructureType());
                            structureType = cast<intermediate.StructureType*>(type);
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        System.Parsing.Match match(true);
                        long save = lexer.GetPos();
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Constant(lexer, context, structureType->FieldType(index++));
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        first.Reset(cast<intermediate.Value*>(match.value));
                                        if (match.hit)
                                        {
                                            fieldValues.Add(first.Release());
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch8 = &match;
                                    {
                                        System.Parsing.Match match(true);
                                        System.Parsing.Match* parentMatch9 = &match;
                                        {
                                            while (true)
                                            {
                                                long save = lexer.GetPos();
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch10 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch11 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            if (*lexer == COMMA)
                                                            {
                                                                auto incResult1 = ++lexer;
                                                                if (incResult1.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                                }
                                                                match.hit = true;
                                                            }
                                                            *parentMatch11 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch12 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch13 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Constant(lexer, context, structureType->FieldType(index++));
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    next.Reset(cast<intermediate.Value*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        fieldValues.Add(next.Release());
                                                                    }
                                                                    *parentMatch13 = match;
                                                                }
                                                                *parentMatch12 = match;
                                                            }
                                                            *parentMatch11 = match;
                                                        }
                                                        *parentMatch10 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch9 = match;
                                                    }
                                                    else
                                                    {
                                                        lexer.SetPos(save);
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        *parentMatch8 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                            }
                            if (match.hit)
                            {
                                *parentMatch4 = match;
                            }
                            else
                            {
                                lexer.SetPos(save);
                            }
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch14 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch15 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == RBRACE)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"StructureConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->MakeStructureValue(span, fieldValues, structureType)));
                        }
                        *parentMatch15 = match;
                    }
                    *parentMatch14 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"StructureConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"StructureConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> StringConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"StringConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957659);
            System.Lex.Span span = System.Lex.Span();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == STRING)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            span = lexer.GetSpan(pos);
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"StringConstant");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    Result<string> stringValue = ToUtf8(lexer.GetToken(pos).ToString());
                    if (stringValue.Error()) return System.Result<System.Parsing.Match>(ErrorId(stringValue.GetErrorId()));
                    string s = Rvalue(stringValue.Value());
                    Result<intermediate.Value*> valueResult = context->GetData()->MakeStringValue(span, s.Substring(1, s.Length() - 2));
                    if (valueResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(valueResult.GetErrorId()));
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, valueResult.Value()));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"StringConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"StringConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> StringArrayConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"StringArrayConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957660);
            System.Lex.Span span = System.Lex.Span();
            List<intermediate.Value*> strings = List<intermediate.Value*>();
            System.UniquePtr<System.Parsing.Value<char>> prefix;
            System.UniquePtr<intermediate.Value> first;
            System.UniquePtr<intermediate.Value> next;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.StringArrayPrefix(lexer);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            prefix.Reset(cast<System.Parsing.Value<char>*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == LBRACKET)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        System.Parsing.Match match(true);
                        long save = lexer.GetPos();
                        System.Parsing.Match* parentMatch6 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch8 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch9 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Constant(lexer, context, null);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        first.Reset(cast<intermediate.Value*>(match.value));
                                        if (match.hit)
                                        {
                                            strings.Add(first.Release());
                                        }
                                        *parentMatch9 = match;
                                    }
                                    *parentMatch8 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch10 = &match;
                                    {
                                        System.Parsing.Match match(true);
                                        System.Parsing.Match* parentMatch11 = &match;
                                        {
                                            while (true)
                                            {
                                                long save = lexer.GetPos();
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch12 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch13 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            if (*lexer == COMMA)
                                                            {
                                                                auto incResult1 = ++lexer;
                                                                if (incResult1.Error())
                                                                {
                                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                                }
                                                                match.hit = true;
                                                            }
                                                            *parentMatch13 = match;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch14 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch15 = &match;
                                                                {
                                                                    long pos = lexer.GetPos();
                                                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Constant(lexer, context, null);
                                                                    if (matchResult.Error())
                                                                    {
                                                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                    }
                                                                    System.Parsing.Match match = matchResult.Value();
                                                                    next.Reset(cast<intermediate.Value*>(match.value));
                                                                    if (match.hit)
                                                                    {
                                                                        strings.Add(next.Release());
                                                                    }
                                                                    *parentMatch15 = match;
                                                                }
                                                                *parentMatch14 = match;
                                                            }
                                                            *parentMatch13 = match;
                                                        }
                                                        *parentMatch12 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch11 = match;
                                                    }
                                                    else
                                                    {
                                                        lexer.SetPos(save);
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        *parentMatch10 = match;
                                    }
                                    *parentMatch8 = match;
                                }
                                *parentMatch7 = match;
                            }
                            if (match.hit)
                            {
                                *parentMatch6 = match;
                            }
                            else
                            {
                                lexer.SetPos(save);
                            }
                        }
                        *parentMatch5 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch16 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch17 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == RBRACKET)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"StringArrayConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->MakeStringArrayValue(span, prefix->value, strings)));
                        }
                        *parentMatch17 = match;
                    }
                    *parentMatch16 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"StringArrayConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"StringArrayConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> StringArrayPrefix(LexerT& lexer)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"StringArrayPrefix");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957661);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    char prefix = lexer.GetChar(pos);
                    pass = prefix == 'u' || prefix == 'w' || prefix == 'b';
                    if (pass) return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<char>(prefix)));
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"StringArrayPrefix");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"StringArrayPrefix");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ConversionConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ConversionConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957662);
            System.Lex.Span span = System.Lex.Span();
            intermediate.TypeRef tref = intermediate.TypeRef();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.Value> from;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                                if (match.hit)
                                {
                                    tref = typeRef->value;
                                    span = lexer.GetSpan(pos);
                                    auto result = context->GetTypes()->ResolveType(tref, span);
                                    if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                if (*lexer == CONV)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == LPAREN)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch6 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Constant(lexer, context, null);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        from.Reset(cast<intermediate.Value*>(match.value));
                        *parentMatch7 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch8 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch9 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == RPAREN)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConversionConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->MakeConversionValue(span, tref.GetType(), from.Release())));
                        }
                        *parentMatch9 = match;
                    }
                    *parentMatch8 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ConversionConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ConversionConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> SymbolConstant(LexerT& lexer, Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"SymbolConstant");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957663);
            System.Lex.Span span = System.Lex.Span();
            intermediate.TypeRef tref = intermediate.TypeRef();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.Value> symbolValue;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                    if (matchResult.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                    }
                    System.Parsing.Match match = matchResult.Value();
                    typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                    if (match.hit)
                    {
                        tref = typeRef->value;
                        auto result = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                        if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch2 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.SymbolValue(lexer, context, tref.GetType());
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        symbolValue.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SymbolConstant");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, symbolValue.Release()));
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch2 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SymbolConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"SymbolConstant");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Value(LexerT& lexer, Context* context, Type* type)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Value");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957664);
            System.UniquePtr<intermediate.Value> regValue;
            System.UniquePtr<intermediate.Value> symbolValue;
            System.UniquePtr<intermediate.Value> literalValue;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case DOLLAR:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.RegValue(lexer, context, type);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        regValue.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Value");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, regValue.Release()));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case AT:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.SymbolValue(lexer, context, type);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        symbolValue.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Value");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, symbolValue.Release()));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case FALSE:
                case ID:
                case NULL_TOKEN:
                case NUMBER:
                case TRUE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.LiteralValue(lexer, context, type);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        literalValue.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Value");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, literalValue.Release()));
                        }
                        *parentMatch3 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Value");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Value");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> RegValue(LexerT& lexer, Context* context, Type* type)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"RegValue");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957665);
            System.Lex.Span span = System.Lex.Span();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Parsing.Match match(false);
                    if (*lexer == DOLLAR)
                    {
                        auto incResult0 = ++lexer;
                        if (incResult0.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                        }
                        match.hit = true;
                    }
                    if (match.hit)
                    {
                        span = lexer.GetSpan(pos);
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch2 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"RegValue");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            span.Union(lexer.GetSpan(pos));
                            Result<int> regResult = lexer.GetInt(pos);
                            if (regResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(regResult.GetErrorId()));
                            int reg = regResult.Value();
                            Result<intermediate.RegValue*> result = context->CurrentFunction()->GetRegRef(span, type, reg);
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, result.Value()));
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch2 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"RegValue");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"RegValue");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ResultRegValue(LexerT& lexer, Context* context, Type* type)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ResultRegValue");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957666);
            System.Lex.Span span = System.Lex.Span();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Parsing.Match match(false);
                    if (*lexer == DOLLAR)
                    {
                        auto incResult0 = ++lexer;
                        if (incResult0.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                        }
                        match.hit = true;
                    }
                    if (match.hit)
                    {
                        span = lexer.GetSpan(pos);
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch2 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ResultRegValue");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            span.Union(lexer.GetSpan(pos));
                            Result<int> regResult = lexer.GetInt(pos);
                            if (regResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(regResult.GetErrorId()));
                            int reg = regResult.Value();
                            Result<intermediate.RegValue*> regValueResult = context->CurrentFunction()->MakeRegValue(span, type, reg);
                            if (regValueResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(regValueResult.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, regValueResult.Value()));
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch2 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ResultRegValue");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ResultRegValue");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> SymbolValue(LexerT& lexer, Context* context, Type* type)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"SymbolValue");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957667);
            System.Lex.Span span = System.Lex.Span();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Parsing.Match match(false);
                    if (*lexer == AT)
                    {
                        auto incResult0 = ++lexer;
                        if (incResult0.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                        }
                        match.hit = true;
                    }
                    if (match.hit)
                    {
                        span = lexer.GetSpan(pos);
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch2 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == ID)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SymbolValue");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<string> symbolResult = ToUtf8(lexer.GetToken(pos).ToString());
                            if (symbolResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(symbolResult.GetErrorId()));
                            string symbol = Rvalue(symbolResult.Value());
                            span.Union(lexer.GetSpan(pos));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->MakeSymbolValue(span, type, symbol)));
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch2 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SymbolValue");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"SymbolValue");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> LiteralValue(LexerT& lexer, Context* context, Type* type)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"LiteralValue");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957668);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case TRUE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == TRUE)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LiteralValue");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetBoolValue(true)));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case FALSE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == FALSE)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LiteralValue");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetBoolValue(false)));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case NULL_TOKEN:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NULL_TOKEN)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LiteralValue");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetData()->GetNullValue(lexer.GetSpan(pos), type)));
                        }
                        *parentMatch3 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case NUMBER:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch4 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult3 = ++lexer;
                            if (incResult3.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LiteralValue");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<string> strResult = ToUtf8(lexer.GetMatch(pos));
                            if (strResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(strResult.GetErrorId()));
                            string str = Rvalue(strResult.Value());
                            Result<intermediate.Value*> result = context->GetData()->MakeNumericLiteral(lexer.GetSpan(pos), type, str);
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, result.Value()));
                        }
                        *parentMatch4 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case ID:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == ID)
                        {
                            auto incResult4 = ++lexer;
                            if (incResult4.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LiteralValue");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<string> idResult = ToUtf8(lexer.GetToken(pos).ToString());
                            if (idResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(idResult.GetErrorId()));
                            string id = Rvalue(idResult.Value());
                            Result<intermediate.Value*> addressValueResult = context->GetData()->MakeAddressValue(lexer.GetSpan(pos), type, id, true);
                            if (addressValueResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(addressValueResult.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, addressValueResult.Value()));
                        }
                        *parentMatch5 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LiteralValue");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"LiteralValue");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Functions(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Functions");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957669);
            System.UniquePtr<System.Parsing.Value<bool>> declaration;
            System.Parsing.Match match(true);
            System.Parsing.Match* parentMatch0 = &match;
            {
                while (true)
                {
                    long save = lexer.GetPos();
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch1 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch2 = &match;
                            {
                                long save = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.FunctionDeclaration(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                declaration.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                *parentMatch2 = match;
                                if (!match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch3 = &match;
                                    lexer.SetPos(save);
                                    {
                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.FunctionDefinition(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        *parentMatch3 = match;
                                    }
                                    *parentMatch2 = match;
                                }
                            }
                            *parentMatch1 = match;
                        }
                        if (match.hit)
                        {
                            *parentMatch0 = match;
                        }
                        else
                        {
                            lexer.SetPos(save);
                            break;
                        }
                    }
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Functions");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Functions");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> FunctionDeclaration(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"FunctionDeclaration");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957670);
            intermediate.TypeRef functionTypeRef = intermediate.TypeRef();
            Span span = Span();
            string functionId = string();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == EXTERN)
                                    {
                                        auto incResult0 = ++lexer;
                                        if (incResult0.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        span = lexer.GetSpan(pos);
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == FUNCTION)
                                    {
                                        auto incResult1 = ++lexer;
                                        if (incResult1.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch8 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                                    if (match.hit)
                                    {
                                        functionTypeRef = typeRef->value;
                                        auto result = context->GetTypes()->ResolveType(functionTypeRef, lexer.GetSpan(pos));
                                        if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                    }
                                    *parentMatch8 = match;
                                }
                                *parentMatch7 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch9 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch10 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == ID)
                                {
                                    auto incResult2 = ++lexer;
                                    if (incResult2.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    Result<string> functionIdResult = ToUtf8(lexer.GetToken(pos).ToString());
                                    if (functionIdResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(functionIdResult.GetErrorId()));
                                    functionId = Rvalue(functionIdResult.Value());
                                }
                                *parentMatch10 = match;
                            }
                            *parentMatch9 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FunctionDeclaration");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    context->GetCode()->AddFunctionDeclaration(span, functionTypeRef.GetType(), functionId);
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<bool>(true)));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FunctionDeclaration");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"FunctionDeclaration");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> FunctionDefinition(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"FunctionDefinition");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957671);
            intermediate.Function* function = null;
            System.UniquePtr<intermediate.Function> header;
            System.UniquePtr<System.Parsing.Value<bool>> basicBlock;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.FunctionHeader(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            header.Reset(cast<intermediate.Function*>(match.value));
                            if (match.hit)
                            {
                                function = header.Release();
                                context->SetCurrentFunction(function);
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == LBRACE)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        System.Parsing.Match match(true);
                        System.Parsing.Match* parentMatch6 = &match;
                        {
                            while (true)
                            {
                                long save = lexer.GetPos();
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.BasicBlock(lexer, context, function);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    basicBlock.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                    if (match.hit)
                                    {
                                        *parentMatch6 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                        break;
                                    }
                                }
                            }
                        }
                        *parentMatch5 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch7 = &match;
                {
                    System.Parsing.Match match(false);
                    if (*lexer == RBRACE)
                    {
                        auto incResult1 = ++lexer;
                        if (incResult1.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                        }
                        match.hit = true;
                    }
                    *parentMatch7 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FunctionDefinition");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"FunctionDefinition");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> FunctionHeader(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"FunctionHeader");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957672);
            intermediate.TypeRef functionTypeRef = intermediate.TypeRef();
            System.Lex.Span span = System.Lex.Span();
            string functionId = string();
            bool inline_ = bool();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.MetadataRef> mdRef;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(true);
                long save = lexer.GetPos();
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == INLINE)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                inline_ = true;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch1 = match;
                    }
                    else
                    {
                        lexer.SetPos(save);
                    }
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch4 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch8 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch9 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch10 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == FUNCTION)
                                            {
                                                auto incResult1 = ++lexer;
                                                if (incResult1.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch10 = match;
                                        }
                                        *parentMatch9 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch11 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch12 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                                                if (match.hit)
                                                {
                                                    functionTypeRef = typeRef->value;
                                                    auto result = context->GetTypes()->ResolveType(functionTypeRef, lexer.GetSpan(pos));
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                                }
                                                *parentMatch12 = match;
                                            }
                                            *parentMatch11 = match;
                                        }
                                        *parentMatch9 = match;
                                    }
                                    *parentMatch8 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch13 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch14 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == ID)
                                            {
                                                auto incResult2 = ++lexer;
                                                if (incResult2.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                Result<string> functionIdResult = ToUtf8(lexer.GetToken(pos).ToString());
                                                if (functionIdResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(functionIdResult.GetErrorId()));
                                                functionId = Rvalue(functionIdResult.Value());
                                            }
                                            *parentMatch14 = match;
                                        }
                                        *parentMatch13 = match;
                                    }
                                    *parentMatch8 = match;
                                }
                                *parentMatch7 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch15 = &match;
                                {
                                    System.Parsing.Match match(true);
                                    long save = lexer.GetPos();
                                    System.Parsing.Match* parentMatch16 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.MetadataRef(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        mdRef.Reset(cast<intermediate.MetadataRef*>(match.value));
                                        if (match.hit)
                                        {
                                            *parentMatch16 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                        }
                                    }
                                    *parentMatch15 = match;
                                }
                                *parentMatch7 = match;
                            }
                            *parentMatch6 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FunctionHeader");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<intermediate.Function*> functionResult = context->GetCode()->AddFunctionDefinition(span, functionTypeRef.GetType(), functionId, inline_, mdRef.Release());
                            if (functionResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(functionResult.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, functionResult.Value()));
                        }
                        *parentMatch5 = match;
                    }
                    *parentMatch4 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FunctionHeader");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"FunctionHeader");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> BasicBlock(LexerT& lexer, intermediate.Context* context, intermediate.Function* function)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"BasicBlock");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957673);
            intermediate.BasicBlock* basicBlock = null;
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<System.Parsing.Value<int>> id;
            System.UniquePtr<System.Parsing.Value<bool>> instructions;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Label(lexer);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            id.Reset(cast<System.Parsing.Value<int>*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                                Result<intermediate.BasicBlock*> basicBlockResult = function->AddBasicBlock(span, id->value);
                                if (basicBlockResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(basicBlockResult.GetErrorId()));
                                basicBlock = basicBlockResult.Value();
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Instructions(lexer, context, basicBlock);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            instructions.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BasicBlock");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<bool>(true)));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BasicBlock");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"BasicBlock");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Label(LexerT& lexer)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Label");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957674);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == AT)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Label");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<int> labelResult = lexer.GetInt(pos);
                            if (labelResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(labelResult.GetErrorId()));
                            int label = labelResult.Value();
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<int>(label)));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Label");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Label");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Operand(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Operand");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957675);
            intermediate.TypeRef tref = intermediate.TypeRef();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.Value> value;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                    if (matchResult.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                    }
                    System.Parsing.Match match = matchResult.Value();
                    typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                    if (match.hit)
                    {
                        tref = typeRef->value;
                        auto result = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                        if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch2 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Value(lexer, context, tref.GetType());
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        value.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Operand");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, value.Release()));
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch2 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Operand");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Operand");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Instructions(LexerT& lexer, intermediate.Context* context, intermediate.BasicBlock* basicBlock)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Instructions");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957676);
            System.UniquePtr<intermediate.Instruction> instruction;
            System.UniquePtr<intermediate.Instruction> next;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Instruction(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            instruction.Reset(cast<intermediate.Instruction*>(match.value));
                            if (match.hit)
                            {
                                basicBlock->AddInstruction(instruction.Release());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Instruction(lexer, context);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                next.Reset(cast<intermediate.Instruction*>(match.value));
                                                if (match.hit)
                                                {
                                                    basicBlock->AddInstruction(next.Release());
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Instructions");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<bool>(true)));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Instructions");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Instructions");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Instruction(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Instruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957677);
            System.UniquePtr<intermediate.Instruction> store;
            System.UniquePtr<intermediate.Instruction> arg;
            System.UniquePtr<intermediate.Instruction> jmp;
            System.UniquePtr<intermediate.Instruction> branch;
            System.UniquePtr<intermediate.Instruction> procedureCall;
            System.UniquePtr<intermediate.Instruction> ret;
            System.UniquePtr<intermediate.Instruction> switch_;
            System.UniquePtr<intermediate.Instruction> valueInst;
            System.UniquePtr<intermediate.Instruction> nopInst;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case STORE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.StoreInstruction(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        store.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Instruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, store.Release()));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case ARG:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.ArgInstruction(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        arg.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Instruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, arg.Release()));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case JMP:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.JmpInstruction(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        jmp.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Instruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, jmp.Release()));
                        }
                        *parentMatch3 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case BRANCH:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch4 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.BranchInstruction(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        branch.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Instruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, branch.Release()));
                        }
                        *parentMatch4 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case CALL:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.ProcedureCallInstruction(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        procedureCall.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Instruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, procedureCall.Release()));
                        }
                        *parentMatch5 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case RET:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch6 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.RetInstruction(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        ret.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Instruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, ret.Release()));
                        }
                        *parentMatch6 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case SWITCH:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.SwitchInstruction(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        switch_.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Instruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, switch_.Release()));
                        }
                        *parentMatch7 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case BOOL:
                case BYTE:
                case DOUBLE:
                case FLOAT:
                case INT:
                case LONG:
                case SBYTE:
                case SHORT:
                case TYPEID:
                case UINT:
                case ULONG:
                case USHORT:
                case VOID:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch8 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.ValueInstruction(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        valueInst.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Instruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, valueInst.Release()));
                        }
                        *parentMatch8 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case NOP:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch9 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.NoOperationInstruction(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        nopInst.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Instruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, nopInst.Release()));
                        }
                        *parentMatch9 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Instruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Instruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> StoreInstruction(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"StoreInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957678);
            System.Lex.Span span = System.Lex.Span();
            intermediate.TypeRef tref = intermediate.TypeRef();
            intermediate.TypeRef ptref = intermediate.TypeRef();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.Value> value;
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> ptrTypeRef;
            System.UniquePtr<intermediate.Value> ptr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == STORE)
                                    {
                                        auto incResult0 = ++lexer;
                                        if (incResult0.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        span = lexer.GetSpan(pos);
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                                        if (match.hit)
                                        {
                                            tref = typeRef->value;
                                            auto result = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch8 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Value(lexer, context, tref.GetType());
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                value.Reset(cast<intermediate.Value*>(match.value));
                                *parentMatch8 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch9 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == COMMA)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch9 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch10 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch11 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            ptrTypeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                            if (match.hit)
                            {
                                ptref = ptrTypeRef->value;
                                auto result = context->GetTypes()->ResolveType(ptref, lexer.GetSpan(pos));
                                if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            }
                            *parentMatch11 = match;
                        }
                        *parentMatch10 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch12 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch13 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Value(lexer, context, ptref.GetType());
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        ptr.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"StoreInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.StoreInstruction(span, value.Release(), ptr.Release())));
                        }
                        *parentMatch13 = match;
                    }
                    *parentMatch12 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"StoreInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"StoreInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ArgInstruction(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ArgInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957679);
            System.Lex.Span span = System.Lex.Span();
            intermediate.TypeRef tref = intermediate.TypeRef();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.Value> arg;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == ARG)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            span = lexer.GetSpan(pos);
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                            if (match.hit)
                            {
                                tref = typeRef->value;
                                auto result = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                                if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch5 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch6 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Value(lexer, context, tref.GetType());
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        arg.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ArgInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.ArgInstruction(span, arg.Release())));
                        }
                        *parentMatch6 = match;
                    }
                    *parentMatch5 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ArgInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ArgInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> JmpInstruction(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"JmpInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957680);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<System.Parsing.Value<int>> target;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Parsing.Match match(false);
                    if (*lexer == JMP)
                    {
                        auto incResult0 = ++lexer;
                        if (incResult0.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                        }
                        match.hit = true;
                    }
                    if (match.hit)
                    {
                        span = lexer.GetSpan(pos);
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch2 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Label(lexer);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        target.Reset(cast<System.Parsing.Value<int>*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"JmpInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.JmpInstruction(span, target->value)));
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch2 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"JmpInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"JmpInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> BranchInstruction(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"BranchInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957681);
            System.Lex.Span span = System.Lex.Span();
            intermediate.TypeRef tref = intermediate.TypeRef();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.Value> cond;
            System.UniquePtr<System.Parsing.Value<int>> trueTarget;
            System.UniquePtr<System.Parsing.Value<int>> falseTarget;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        if (*lexer == BRANCH)
                                        {
                                            auto incResult0 = ++lexer;
                                            if (incResult0.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        if (match.hit)
                                        {
                                            span = lexer.GetSpan(pos);
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                                            if (match.hit)
                                            {
                                                tref = typeRef->value;
                                                auto result = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                                                if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch9 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Value(lexer, context, tref.GetType());
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    cond.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch9 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch10 = &match;
                            {
                                System.Parsing.Match match(false);
                                if (*lexer == COMMA)
                                {
                                    auto incResult1 = ++lexer;
                                    if (incResult1.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                *parentMatch10 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch11 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Label(lexer);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            trueTarget.Reset(cast<System.Parsing.Value<int>*>(match.value));
                            *parentMatch11 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch12 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == COMMA)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch12 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch13 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch14 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Label(lexer);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        falseTarget.Reset(cast<System.Parsing.Value<int>*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BranchInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.BranchInstruction(span, cond.Release(), trueTarget->value, falseTarget->value)));
                        }
                        *parentMatch14 = match;
                    }
                    *parentMatch13 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BranchInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"BranchInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ProcedureCallInstruction(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ProcedureCallInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957682);
            System.Lex.Span span = System.Lex.Span();
            intermediate.TypeRef tref = intermediate.TypeRef();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.Value> callee;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == CALL)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            span = lexer.GetSpan(pos);
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                            if (match.hit)
                            {
                                tref = typeRef->value;
                                auto result = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                                if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch5 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch6 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Value(lexer, context, tref.GetType());
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        callee.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ProcedureCallInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.ProcedureCallInstruction(span, callee.Release())));
                        }
                        *parentMatch6 = match;
                    }
                    *parentMatch5 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ProcedureCallInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ProcedureCallInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> RetInstruction(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"RetInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957683);
            System.Lex.Span span = System.Lex.Span();
            intermediate.TypeRef tref = intermediate.TypeRef();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.Value> returnValue;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Parsing.Match match(false);
                    if (*lexer == RET)
                    {
                        auto incResult0 = ++lexer;
                        if (incResult0.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                        }
                        match.hit = true;
                    }
                    if (match.hit)
                    {
                        span = lexer.GetSpan(pos);
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch2 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            long save = lexer.GetPos();
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == VOID)
                                        {
                                            auto incResult1 = ++lexer;
                                            if (incResult1.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            long tmp = lexer.GetPos();
                                            lexer.SetPos(save);
                                            save = tmp;
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch9 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch10 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == VOID)
                                                    {
                                                        auto incResult2 = ++lexer;
                                                        if (incResult2.Error())
                                                        {
                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    *parentMatch10 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch11 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == AST)
                                                        {
                                                            auto incResult3 = ++lexer;
                                                            if (incResult3.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch11 = match;
                                                    }
                                                    *parentMatch10 = match;
                                                }
                                                *parentMatch9 = match;
                                            }
                                            *parentMatch8 = match;
                                        }
                                        if (!match.hit)
                                        {
                                            lexer.SetPos(save);
                                        }
                                        *parentMatch7 = System.Parsing.Match(!match.hit, match.value);
                                    }
                                    *parentMatch6 = match;
                                }
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"RetInstruction");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.RetInstruction(span, null)));
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch4 = match;
                            if (!match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch12 = &match;
                                lexer.SetPos(save);
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch13 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch14 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                                            if (match.hit)
                                            {
                                                tref = typeRef->value;
                                                auto result = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                                                if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                            }
                                            *parentMatch14 = match;
                                        }
                                        *parentMatch13 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch15 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch16 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Value(lexer, context, tref.GetType());
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                returnValue.Reset(cast<intermediate.Value*>(match.value));
                                                if (match.hit)
                                                {
                                                    #if (DEBUG)
                                                        if (parser_debug_write_to_log)
                                                        {
                                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"RetInstruction");
                                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                                        }
                                                    #endif
                                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.RetInstruction(span, returnValue.Release())));
                                                }
                                                *parentMatch16 = match;
                                            }
                                            *parentMatch15 = match;
                                        }
                                        *parentMatch13 = match;
                                    }
                                    *parentMatch12 = match;
                                }
                                *parentMatch4 = match;
                            }
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch2 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"RetInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"RetInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Case(LexerT& lexer, intermediate.Context* context, intermediate.SwitchInstruction* inst)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Case");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957684);
            intermediate.TypeRef caseTref = intermediate.TypeRef();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> caseTypeRef;
            System.UniquePtr<intermediate.Value> caseValue;
            System.UniquePtr<System.Parsing.Value<int>> caseTarget;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            caseTypeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                            if (match.hit)
                            {
                                caseTref = caseTypeRef->value;
                                auto result = context->GetTypes()->ResolveType(caseTref, lexer.GetSpan(pos));
                                if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Value(lexer, context, caseTref.GetType());
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            caseValue.Reset(cast<intermediate.Value*>(match.value));
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == COMMA)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch5 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch6 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Label(lexer);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        caseTarget.Reset(cast<System.Parsing.Value<int>*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Case");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            inst->AddCaseTarget(intermediate.CaseTarget(caseValue.Release(), caseTarget->value));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<bool>(true)));
                        }
                        *parentMatch7 = match;
                    }
                    *parentMatch6 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Case");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Case");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> SwitchInstruction(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"SwitchInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957685);
            System.Lex.Span span = System.Lex.Span();
            intermediate.TypeRef tref = intermediate.TypeRef();
            intermediate.SwitchInstruction* inst = null;
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.Value> cond;
            System.UniquePtr<System.Parsing.Value<int>> defaultTarget;
            System.UniquePtr<System.Parsing.Value<bool>> first;
            System.UniquePtr<System.Parsing.Value<bool>> next;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == SWITCH)
                                            {
                                                auto incResult0 = ++lexer;
                                                if (incResult0.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch9 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                                                if (matchResult.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                }
                                                System.Parsing.Match match = matchResult.Value();
                                                typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                                                if (match.hit)
                                                {
                                                    tref = typeRef->value;
                                                    auto result = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                                }
                                                *parentMatch9 = match;
                                            }
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch10 = &match;
                                    {
                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Value(lexer, context, tref.GetType());
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        cond.Reset(cast<intermediate.Value*>(match.value));
                                        *parentMatch10 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch11 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch12 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Label(lexer);
                                        if (matchResult.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        defaultTarget.Reset(cast<System.Parsing.Value<int>*>(match.value));
                                        if (match.hit)
                                        {
                                            inst = new intermediate.SwitchInstruction(span, cond.Release(), defaultTarget->value);
                                        }
                                        *parentMatch12 = match;
                                    }
                                    *parentMatch11 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch13 = &match;
                            {
                                System.Parsing.Match match(false);
                                if (*lexer == COMMA)
                                {
                                    auto incResult1 = ++lexer;
                                    if (incResult1.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                *parentMatch13 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch14 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == LBRACKET)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch14 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch15 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch16 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch17 = &match;
                            {
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Case(lexer, context, inst);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                first.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                *parentMatch17 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch18 = &match;
                                {
                                    System.Parsing.Match match(true);
                                    System.Parsing.Match* parentMatch19 = &match;
                                    {
                                        while (true)
                                        {
                                            long save = lexer.GetPos();
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch20 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch21 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == COLON)
                                                        {
                                                            auto incResult3 = ++lexer;
                                                            if (incResult3.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch21 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch22 = &match;
                                                        {
                                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Case(lexer, context, inst);
                                                            if (matchResult.Error())
                                                            {
                                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                            }
                                                            System.Parsing.Match match = matchResult.Value();
                                                            next.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                                            *parentMatch22 = match;
                                                        }
                                                        *parentMatch21 = match;
                                                    }
                                                    *parentMatch20 = match;
                                                }
                                                if (match.hit)
                                                {
                                                    *parentMatch19 = match;
                                                }
                                                else
                                                {
                                                    lexer.SetPos(save);
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    *parentMatch18 = match;
                                }
                                *parentMatch17 = match;
                            }
                            *parentMatch16 = match;
                        }
                        *parentMatch15 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch23 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch24 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == RBRACKET)
                        {
                            auto incResult4 = ++lexer;
                            if (incResult4.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SwitchInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, inst));
                        }
                        *parentMatch24 = match;
                    }
                    *parentMatch23 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"SwitchInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"SwitchInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ValueInstruction(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ValueInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957686);
            System.Lex.Span span = System.Lex.Span();
            intermediate.TypeRef tref = intermediate.TypeRef();
            intermediate.RegValue* rslt = null;
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.RegValue> res;
            System.UniquePtr<intermediate.Instruction> inst;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                            if (match.hit)
                            {
                                tref = typeRef->value;
                                auto result = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                                if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.ResultRegValue(lexer, context, tref.GetType());
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                res.Reset(cast<intermediate.RegValue*>(match.value));
                                if (match.hit)
                                {
                                    rslt = res.Release();
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch6 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == ASSIGN)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch6 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch7 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch8 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operation(lexer, context, rslt);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        inst.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ValueInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, inst.Release()));
                        }
                        *parentMatch8 = match;
                    }
                    *parentMatch7 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ValueInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ValueInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Operation(LexerT& lexer, intermediate.Context* context, intermediate.RegValue* result)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Operation");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957687);
            System.UniquePtr<intermediate.Instruction> unaryInst;
            System.UniquePtr<intermediate.Instruction> binaryInst;
            System.UniquePtr<intermediate.Instruction> paramInst;
            System.UniquePtr<intermediate.Instruction> localInst;
            System.UniquePtr<intermediate.Instruction> loadInst;
            System.UniquePtr<intermediate.Instruction> elemAddrInst;
            System.UniquePtr<intermediate.Instruction> ptrOffsetInst;
            System.UniquePtr<intermediate.Instruction> ptrDifftInst;
            System.UniquePtr<intermediate.Instruction> functionCallInst;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case BITCAST:
                case FLOATTOINT:
                case FPEXTEND:
                case INTTOFLOAT:
                case INTTOPTR:
                case NEG:
                case NOT:
                case PTRTOINT:
                case SIGNEXTEND:
                case TRUNCATE:
                case ZEROEXTEND:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.UnaryInstruction(lexer, context, result);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        unaryInst.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Operation");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, unaryInst.Release()));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case ADD:
                case AND:
                case DIV:
                case EQUAL:
                case LESS:
                case MOD:
                case MUL:
                case OR:
                case SHL:
                case SHR:
                case SUB:
                case XOR:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.BinaryInstruction(lexer, context, result);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        binaryInst.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Operation");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, binaryInst.Release()));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case PARAM:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.ParamInstruction(lexer, context, result);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        paramInst.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Operation");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, paramInst.Release()));
                        }
                        *parentMatch3 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case LOCAL:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch4 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.LocalInstruction(lexer, context, result);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        localInst.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Operation");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, localInst.Release()));
                        }
                        *parentMatch4 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case LOAD:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.LoadInstruction(lexer, context, result);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        loadInst.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Operation");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, loadInst.Release()));
                        }
                        *parentMatch5 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case ELEMADDR:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch6 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.ElemAddrInstruction(lexer, context, result);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        elemAddrInst.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Operation");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, elemAddrInst.Release()));
                        }
                        *parentMatch6 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case PTROFFSET:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.PtrOffsetInstruction(lexer, context, result);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        ptrOffsetInst.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Operation");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, ptrOffsetInst.Release()));
                        }
                        *parentMatch7 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case PTRDIFF:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch8 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.PtrDifftInstruction(lexer, context, result);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        ptrDifftInst.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Operation");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, ptrDifftInst.Release()));
                        }
                        *parentMatch8 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case CALL:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch9 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.FunctionCallInstruction(lexer, context, result);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        functionCallInst.Reset(cast<intermediate.Instruction*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Operation");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, functionCallInst.Release()));
                        }
                        *parentMatch9 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Operation");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Operation");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> UnaryInstruction(LexerT& lexer, intermediate.Context* context, intermediate.RegValue* result)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"UnaryInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957688);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<intermediate.Value> notOp;
            System.UniquePtr<intermediate.Value> negOp;
            System.UniquePtr<intermediate.Value> sextOp;
            System.UniquePtr<intermediate.Value> zextOp;
            System.UniquePtr<intermediate.Value> fpextOp;
            System.UniquePtr<intermediate.Value> truncOp;
            System.UniquePtr<intermediate.Value> bcOp;
            System.UniquePtr<intermediate.Value> ifOp;
            System.UniquePtr<intermediate.Value> fiOp;
            System.UniquePtr<intermediate.Value> ipOp;
            System.UniquePtr<intermediate.Value> piOp;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case NOT:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch2 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == NOT)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch2 = match;
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                notOp.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnaryInstruction");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.NotInstruction(span, result, notOp.Release())));
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case NEG:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == NEG)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch6 = match;
                        }
                        *parentMatch5 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch7 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch8 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                negOp.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnaryInstruction");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.NegInstruction(span, result, negOp.Release())));
                                }
                                *parentMatch8 = match;
                            }
                            *parentMatch7 = match;
                        }
                        *parentMatch5 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case SIGNEXTEND:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch9 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch10 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == SIGNEXTEND)
                            {
                                auto incResult2 = ++lexer;
                                if (incResult2.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch10 = match;
                        }
                        *parentMatch9 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch11 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch12 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                sextOp.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnaryInstruction");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.SignExtendInstruction(span, result, sextOp.Release())));
                                }
                                *parentMatch12 = match;
                            }
                            *parentMatch11 = match;
                        }
                        *parentMatch9 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case ZEROEXTEND:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch13 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch14 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == ZEROEXTEND)
                            {
                                auto incResult3 = ++lexer;
                                if (incResult3.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch14 = match;
                        }
                        *parentMatch13 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch15 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch16 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                zextOp.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnaryInstruction");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.ZeroExtendInstruction(span, result, zextOp.Release())));
                                }
                                *parentMatch16 = match;
                            }
                            *parentMatch15 = match;
                        }
                        *parentMatch13 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case FPEXTEND:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch17 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch18 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == FPEXTEND)
                            {
                                auto incResult4 = ++lexer;
                                if (incResult4.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch18 = match;
                        }
                        *parentMatch17 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch19 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch20 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                fpextOp.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnaryInstruction");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.FloatingPointExtendInstruction(span, result, fpextOp.Release())));
                                }
                                *parentMatch20 = match;
                            }
                            *parentMatch19 = match;
                        }
                        *parentMatch17 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case TRUNCATE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch21 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch22 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == TRUNCATE)
                            {
                                auto incResult5 = ++lexer;
                                if (incResult5.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult5.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch22 = match;
                        }
                        *parentMatch21 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch23 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch24 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                truncOp.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnaryInstruction");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.TruncateInstruction(span, result, truncOp.Release())));
                                }
                                *parentMatch24 = match;
                            }
                            *parentMatch23 = match;
                        }
                        *parentMatch21 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case BITCAST:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch25 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch26 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == BITCAST)
                            {
                                auto incResult6 = ++lexer;
                                if (incResult6.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult6.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch26 = match;
                        }
                        *parentMatch25 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch27 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch28 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                bcOp.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnaryInstruction");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.BitcastInstruction(span, result, bcOp.Release())));
                                }
                                *parentMatch28 = match;
                            }
                            *parentMatch27 = match;
                        }
                        *parentMatch25 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case INTTOFLOAT:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch29 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch30 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == INTTOFLOAT)
                            {
                                auto incResult7 = ++lexer;
                                if (incResult7.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult7.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch30 = match;
                        }
                        *parentMatch29 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch31 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch32 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                ifOp.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnaryInstruction");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.IntToFloatInstruction(span, result, ifOp.Release())));
                                }
                                *parentMatch32 = match;
                            }
                            *parentMatch31 = match;
                        }
                        *parentMatch29 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case FLOATTOINT:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch33 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch34 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == FLOATTOINT)
                            {
                                auto incResult8 = ++lexer;
                                if (incResult8.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult8.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch34 = match;
                        }
                        *parentMatch33 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch35 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch36 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                fiOp.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnaryInstruction");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.FloatToIntInstruction(span, result, fiOp.Release())));
                                }
                                *parentMatch36 = match;
                            }
                            *parentMatch35 = match;
                        }
                        *parentMatch33 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case INTTOPTR:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch37 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch38 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == INTTOPTR)
                            {
                                auto incResult9 = ++lexer;
                                if (incResult9.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult9.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch38 = match;
                        }
                        *parentMatch37 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch39 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch40 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                ipOp.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnaryInstruction");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.IntToPtrInstruction(span, result, ipOp.Release())));
                                }
                                *parentMatch40 = match;
                            }
                            *parentMatch39 = match;
                        }
                        *parentMatch37 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case PTRTOINT:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch41 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch42 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == PTRTOINT)
                            {
                                auto incResult10 = ++lexer;
                                if (incResult10.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult10.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch42 = match;
                        }
                        *parentMatch41 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch43 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch44 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                piOp.Reset(cast<intermediate.Value*>(match.value));
                                if (match.hit)
                                {
                                    #if (DEBUG)
                                        if (parser_debug_write_to_log)
                                        {
                                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnaryInstruction");
                                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                        }
                                    #endif
                                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.PtrToIntInstruction(span, result, piOp.Release())));
                                }
                                *parentMatch44 = match;
                            }
                            *parentMatch43 = match;
                        }
                        *parentMatch41 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"UnaryInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"UnaryInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> BinaryInstruction(LexerT& lexer, intermediate.Context* context, intermediate.RegValue* result)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"BinaryInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957689);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<intermediate.Value> leftAdd;
            System.UniquePtr<intermediate.Value> rightAdd;
            System.UniquePtr<intermediate.Value> leftSub;
            System.UniquePtr<intermediate.Value> rightSub;
            System.UniquePtr<intermediate.Value> leftMul;
            System.UniquePtr<intermediate.Value> rightMul;
            System.UniquePtr<intermediate.Value> leftDiv;
            System.UniquePtr<intermediate.Value> rightDiv;
            System.UniquePtr<intermediate.Value> leftMod;
            System.UniquePtr<intermediate.Value> rightMod;
            System.UniquePtr<intermediate.Value> leftAnd;
            System.UniquePtr<intermediate.Value> rightAnd;
            System.UniquePtr<intermediate.Value> leftOr;
            System.UniquePtr<intermediate.Value> rightOr;
            System.UniquePtr<intermediate.Value> leftXor;
            System.UniquePtr<intermediate.Value> rightXor;
            System.UniquePtr<intermediate.Value> leftShl;
            System.UniquePtr<intermediate.Value> rightShl;
            System.UniquePtr<intermediate.Value> leftShr;
            System.UniquePtr<intermediate.Value> rightShr;
            System.UniquePtr<intermediate.Value> leftEqual;
            System.UniquePtr<intermediate.Value> rightEqual;
            System.UniquePtr<intermediate.Value> leftLess;
            System.UniquePtr<intermediate.Value> rightLess;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case ADD:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch2 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch3 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch4 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch5 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == ADD)
                                            {
                                                auto incResult0 = ++lexer;
                                                if (incResult0.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch6 = match;
                                        }
                                        *parentMatch5 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            leftAdd.Reset(cast<intermediate.Value*>(match.value));
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch5 = match;
                                    }
                                    *parentMatch4 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch8 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult1 = ++lexer;
                                            if (incResult1.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch8 = match;
                                    }
                                    *parentMatch4 = match;
                                }
                                *parentMatch3 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch9 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    rightAdd.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch9 = match;
                                }
                                *parentMatch3 = match;
                            }
                            *parentMatch2 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.AddInstruction(span, result, leftAdd.Release(), rightAdd.Release())));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case SUB:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch10 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch11 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch12 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch13 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch14 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch15 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == SUB)
                                            {
                                                auto incResult2 = ++lexer;
                                                if (incResult2.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch15 = match;
                                        }
                                        *parentMatch14 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch16 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            leftSub.Reset(cast<intermediate.Value*>(match.value));
                                            *parentMatch16 = match;
                                        }
                                        *parentMatch14 = match;
                                    }
                                    *parentMatch13 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch17 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult3 = ++lexer;
                                            if (incResult3.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch17 = match;
                                    }
                                    *parentMatch13 = match;
                                }
                                *parentMatch12 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch18 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    rightSub.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch18 = match;
                                }
                                *parentMatch12 = match;
                            }
                            *parentMatch11 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.SubInstruction(span, result, leftSub.Release(), rightSub.Release())));
                        }
                        *parentMatch10 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case MUL:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch19 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch20 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch21 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch22 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch23 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch24 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == MUL)
                                            {
                                                auto incResult4 = ++lexer;
                                                if (incResult4.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch24 = match;
                                        }
                                        *parentMatch23 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch25 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            leftMul.Reset(cast<intermediate.Value*>(match.value));
                                            *parentMatch25 = match;
                                        }
                                        *parentMatch23 = match;
                                    }
                                    *parentMatch22 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch26 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult5 = ++lexer;
                                            if (incResult5.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult5.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch26 = match;
                                    }
                                    *parentMatch22 = match;
                                }
                                *parentMatch21 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch27 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    rightMul.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch27 = match;
                                }
                                *parentMatch21 = match;
                            }
                            *parentMatch20 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.MulInstruction(span, result, leftMul.Release(), rightMul.Release())));
                        }
                        *parentMatch19 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case DIV:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch28 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch29 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch30 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch31 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch32 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch33 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == DIV)
                                            {
                                                auto incResult6 = ++lexer;
                                                if (incResult6.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult6.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch33 = match;
                                        }
                                        *parentMatch32 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch34 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            leftDiv.Reset(cast<intermediate.Value*>(match.value));
                                            *parentMatch34 = match;
                                        }
                                        *parentMatch32 = match;
                                    }
                                    *parentMatch31 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch35 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult7 = ++lexer;
                                            if (incResult7.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult7.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch35 = match;
                                    }
                                    *parentMatch31 = match;
                                }
                                *parentMatch30 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch36 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    rightDiv.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch36 = match;
                                }
                                *parentMatch30 = match;
                            }
                            *parentMatch29 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.DivInstruction(span, result, leftDiv.Release(), rightDiv.Release())));
                        }
                        *parentMatch28 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case MOD:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch37 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch38 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch39 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch40 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch41 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch42 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == MOD)
                                            {
                                                auto incResult8 = ++lexer;
                                                if (incResult8.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult8.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch42 = match;
                                        }
                                        *parentMatch41 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch43 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            leftMod.Reset(cast<intermediate.Value*>(match.value));
                                            *parentMatch43 = match;
                                        }
                                        *parentMatch41 = match;
                                    }
                                    *parentMatch40 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch44 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult9 = ++lexer;
                                            if (incResult9.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult9.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch44 = match;
                                    }
                                    *parentMatch40 = match;
                                }
                                *parentMatch39 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch45 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    rightMod.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch45 = match;
                                }
                                *parentMatch39 = match;
                            }
                            *parentMatch38 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.ModInstruction(span, result, leftMod.Release(), rightMod.Release())));
                        }
                        *parentMatch37 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case AND:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch46 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch47 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch48 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch49 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch50 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch51 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == AND)
                                            {
                                                auto incResult10 = ++lexer;
                                                if (incResult10.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult10.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch51 = match;
                                        }
                                        *parentMatch50 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch52 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            leftAnd.Reset(cast<intermediate.Value*>(match.value));
                                            *parentMatch52 = match;
                                        }
                                        *parentMatch50 = match;
                                    }
                                    *parentMatch49 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch53 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult11 = ++lexer;
                                            if (incResult11.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult11.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch53 = match;
                                    }
                                    *parentMatch49 = match;
                                }
                                *parentMatch48 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch54 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    rightAnd.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch54 = match;
                                }
                                *parentMatch48 = match;
                            }
                            *parentMatch47 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.AndInstruction(span, result, leftAnd.Release(), rightAnd.Release())));
                        }
                        *parentMatch46 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case OR:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch55 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch56 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch57 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch58 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch59 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch60 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == OR)
                                            {
                                                auto incResult12 = ++lexer;
                                                if (incResult12.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult12.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch60 = match;
                                        }
                                        *parentMatch59 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch61 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            leftOr.Reset(cast<intermediate.Value*>(match.value));
                                            *parentMatch61 = match;
                                        }
                                        *parentMatch59 = match;
                                    }
                                    *parentMatch58 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch62 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult13 = ++lexer;
                                            if (incResult13.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult13.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch62 = match;
                                    }
                                    *parentMatch58 = match;
                                }
                                *parentMatch57 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch63 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    rightOr.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch63 = match;
                                }
                                *parentMatch57 = match;
                            }
                            *parentMatch56 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.OrInstruction(span, result, leftOr.Release(), rightOr.Release())));
                        }
                        *parentMatch55 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case XOR:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch64 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch65 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch66 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch67 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch68 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch69 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == XOR)
                                            {
                                                auto incResult14 = ++lexer;
                                                if (incResult14.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult14.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch69 = match;
                                        }
                                        *parentMatch68 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch70 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            leftXor.Reset(cast<intermediate.Value*>(match.value));
                                            *parentMatch70 = match;
                                        }
                                        *parentMatch68 = match;
                                    }
                                    *parentMatch67 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch71 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult15 = ++lexer;
                                            if (incResult15.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult15.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch71 = match;
                                    }
                                    *parentMatch67 = match;
                                }
                                *parentMatch66 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch72 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    rightXor.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch72 = match;
                                }
                                *parentMatch66 = match;
                            }
                            *parentMatch65 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.XorInstruction(span, result, leftXor.Release(), rightXor.Release())));
                        }
                        *parentMatch64 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case SHL:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch73 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch74 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch75 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch76 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch77 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch78 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == SHL)
                                            {
                                                auto incResult16 = ++lexer;
                                                if (incResult16.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult16.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch78 = match;
                                        }
                                        *parentMatch77 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch79 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            leftShl.Reset(cast<intermediate.Value*>(match.value));
                                            *parentMatch79 = match;
                                        }
                                        *parentMatch77 = match;
                                    }
                                    *parentMatch76 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch80 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult17 = ++lexer;
                                            if (incResult17.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult17.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch80 = match;
                                    }
                                    *parentMatch76 = match;
                                }
                                *parentMatch75 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch81 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    rightShl.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch81 = match;
                                }
                                *parentMatch75 = match;
                            }
                            *parentMatch74 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.ShlInstruction(span, result, leftShl.Release(), rightShl.Release())));
                        }
                        *parentMatch73 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case SHR:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch82 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch83 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch84 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch85 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch86 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch87 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == SHR)
                                            {
                                                auto incResult18 = ++lexer;
                                                if (incResult18.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult18.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch87 = match;
                                        }
                                        *parentMatch86 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch88 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            leftShr.Reset(cast<intermediate.Value*>(match.value));
                                            *parentMatch88 = match;
                                        }
                                        *parentMatch86 = match;
                                    }
                                    *parentMatch85 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch89 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult19 = ++lexer;
                                            if (incResult19.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult19.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch89 = match;
                                    }
                                    *parentMatch85 = match;
                                }
                                *parentMatch84 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch90 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    rightShr.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch90 = match;
                                }
                                *parentMatch84 = match;
                            }
                            *parentMatch83 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.ShrInstruction(span, result, leftShr.Release(), rightShr.Release())));
                        }
                        *parentMatch82 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case EQUAL:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch91 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch92 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch93 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch94 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch95 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch96 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == EQUAL)
                                            {
                                                auto incResult20 = ++lexer;
                                                if (incResult20.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult20.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch96 = match;
                                        }
                                        *parentMatch95 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch97 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            leftEqual.Reset(cast<intermediate.Value*>(match.value));
                                            *parentMatch97 = match;
                                        }
                                        *parentMatch95 = match;
                                    }
                                    *parentMatch94 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch98 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult21 = ++lexer;
                                            if (incResult21.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult21.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch98 = match;
                                    }
                                    *parentMatch94 = match;
                                }
                                *parentMatch93 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch99 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    rightEqual.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch99 = match;
                                }
                                *parentMatch93 = match;
                            }
                            *parentMatch92 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.EqualInstruction(span, result, leftEqual.Release(), rightEqual.Release())));
                        }
                        *parentMatch91 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case LESS:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch100 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch101 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch102 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch103 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch104 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch105 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == LESS)
                                            {
                                                auto incResult22 = ++lexer;
                                                if (incResult22.Error())
                                                {
                                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult22.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                span = lexer.GetSpan(pos);
                                            }
                                            *parentMatch105 = match;
                                        }
                                        *parentMatch104 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch106 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            leftLess.Reset(cast<intermediate.Value*>(match.value));
                                            *parentMatch106 = match;
                                        }
                                        *parentMatch104 = match;
                                    }
                                    *parentMatch103 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch107 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == COMMA)
                                        {
                                            auto incResult23 = ++lexer;
                                            if (incResult23.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult23.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch107 = match;
                                    }
                                    *parentMatch103 = match;
                                }
                                *parentMatch102 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch108 = &match;
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    rightLess.Reset(cast<intermediate.Value*>(match.value));
                                    *parentMatch108 = match;
                                }
                                *parentMatch102 = match;
                            }
                            *parentMatch101 = match;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.LessInstruction(span, result, leftLess.Release(), rightLess.Release())));
                        }
                        *parentMatch100 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"BinaryInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"BinaryInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ParamInstruction(LexerT& lexer, intermediate.Context* context, intermediate.RegValue* result)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ParamInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957690);
            System.Lex.Span span = System.Lex.Span();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                if (*lexer == PARAM)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ParamInstruction");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    span = lexer.GetSpan(pos);
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.ParamInstruction(span, result)));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ParamInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ParamInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> LocalInstruction(LexerT& lexer, intermediate.Context* context, intermediate.RegValue* result)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"LocalInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957691);
            System.Lex.Span span = System.Lex.Span();
            intermediate.TypeRef tref = intermediate.TypeRef();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Parsing.Match match(false);
                    if (*lexer == LOCAL)
                    {
                        auto incResult0 = ++lexer;
                        if (incResult0.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                        }
                        match.hit = true;
                    }
                    if (match.hit)
                    {
                        span = lexer.GetSpan(pos);
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch2 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LocalInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            tref = typeRef->value;
                            auto res = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                            if (res.Error()) return System.Result<System.Parsing.Match>(ErrorId(res.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.LocalInstruction(span, result, tref.GetType())));
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch2 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LocalInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"LocalInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> LoadInstruction(LexerT& lexer, intermediate.Context* context, intermediate.RegValue* result)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"LoadInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957692);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<intermediate.Value> ptr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Parsing.Match match(false);
                    if (*lexer == LOAD)
                    {
                        auto incResult0 = ++lexer;
                        if (incResult0.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                        }
                        match.hit = true;
                    }
                    if (match.hit)
                    {
                        span = lexer.GetSpan(pos);
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch2 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        ptr.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LoadInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.LoadInstruction(span, result, ptr.Release())));
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch2 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"LoadInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"LoadInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> ElemAddrInstruction(LexerT& lexer, intermediate.Context* context, intermediate.RegValue* result)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"ElemAddrInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957693);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<intermediate.Value> ptr;
            System.UniquePtr<intermediate.Value> index;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == ELEMADDR)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            ptr.Reset(cast<intermediate.Value*>(match.value));
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == COMMA)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch5 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch6 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        index.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ElemAddrInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.ElemAddrInstruction(span, result, ptr.Release(), index.Release())));
                        }
                        *parentMatch7 = match;
                    }
                    *parentMatch6 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"ElemAddrInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"ElemAddrInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> PtrOffsetInstruction(LexerT& lexer, intermediate.Context* context, intermediate.RegValue* result)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"PtrOffsetInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957694);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<intermediate.Value> ptr;
            System.UniquePtr<intermediate.Value> offset;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == PTROFFSET)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            ptr.Reset(cast<intermediate.Value*>(match.value));
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == COMMA)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch5 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch6 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        offset.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PtrOffsetInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.PtrOffsetInstruction(span, result, ptr.Release(), offset.Release())));
                        }
                        *parentMatch7 = match;
                    }
                    *parentMatch6 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PtrOffsetInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"PtrOffsetInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> PtrDifftInstruction(LexerT& lexer, intermediate.Context* context, intermediate.RegValue* result)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"PtrDifftInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957695);
            System.Lex.Span span = System.Lex.Span();
            System.UniquePtr<intermediate.Value> leftPtr;
            System.UniquePtr<intermediate.Value> rightPtr;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == PTRDIFF)
                            {
                                auto incResult0 = ++lexer;
                                if (incResult0.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            leftPtr.Reset(cast<intermediate.Value*>(match.value));
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch5 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == COMMA)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch5 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch6 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Operand(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        rightPtr.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PtrDifftInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.PtrDiffInstruction(span, result, leftPtr.Release(), rightPtr.Release())));
                        }
                        *parentMatch7 = match;
                    }
                    *parentMatch6 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"PtrDifftInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"PtrDifftInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> FunctionCallInstruction(LexerT& lexer, intermediate.Context* context, intermediate.RegValue* result)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"FunctionCallInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957696);
            System.Lex.Span span = System.Lex.Span();
            intermediate.TypeRef tref = intermediate.TypeRef();
            System.UniquePtr<System.Parsing.Value<intermediate.TypeRef>> typeRef;
            System.UniquePtr<intermediate.Value> callee;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == CALL)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            span = lexer.GetSpan(pos);
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.TypeRef(lexer);
                            if (matchResult.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            typeRef.Reset(cast<System.Parsing.Value<intermediate.TypeRef>*>(match.value));
                            if (match.hit)
                            {
                                tref = typeRef->value;
                                auto res = context->GetTypes()->ResolveType(tref, lexer.GetSpan(pos));
                                if (res.Error()) return System.Result<System.Parsing.Match>(ErrorId(res.GetErrorId()));
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch5 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch6 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.Value(lexer, context, tref.GetType());
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        callee.Reset(cast<intermediate.Value*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FunctionCallInstruction");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.FunctionCallInstruction(span, result, callee.Release())));
                        }
                        *parentMatch6 = match;
                    }
                    *parentMatch5 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"FunctionCallInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"FunctionCallInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> NoOperationInstruction(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"NoOperationInstruction");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957697);
            System.Lex.Span span = System.Lex.Span();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                if (*lexer == NOP)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"NoOperationInstruction");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    span = lexer.GetSpan(pos);
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new intermediate.NoOperationInstruction(span)));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"NoOperationInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"NoOperationInstruction");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> Metadata(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"Metadata");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957698);
            System.UniquePtr<System.Parsing.Value<bool>> mds;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == METADATA)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == LBRACE)
                            {
                                auto incResult1 = ++lexer;
                                if (incResult1.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch4 = &match;
                    {
                        System.Parsing.Match match(true);
                        System.Parsing.Match* parentMatch5 = &match;
                        {
                            while (true)
                            {
                                long save = lexer.GetPos();
                                {
                                    System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.MetadataStruct(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    mds.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                    if (match.hit)
                                    {
                                        *parentMatch5 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                        break;
                                    }
                                }
                            }
                        }
                        *parentMatch4 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch6 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch7 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == RBRACE)
                        {
                            auto incResult2 = ++lexer;
                            if (incResult2.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Metadata");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<bool> result = context->GetMetadata()->ResolveReferences();
                            if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<bool>(true)));
                        }
                        *parentMatch7 = match;
                    }
                    *parentMatch6 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"Metadata");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"Metadata");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> MetadataStruct(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"MetadataStruct");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957699);
            intermediate.MetadataStruct* value = null;
            System.UniquePtr<System.Parsing.Value<bool>> first;
            System.UniquePtr<System.Parsing.Value<bool>> next;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == EXCLAMATION)
                                        {
                                            auto incResult0 = ++lexer;
                                            if (incResult0.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch7 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch8 = &match;
                                            {
                                                long pos = lexer.GetPos();
                                                System.Parsing.Match match(false);
                                                if (*lexer == NUMBER)
                                                {
                                                    auto incResult1 = ++lexer;
                                                    if (incResult1.Error())
                                                    {
                                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                if (match.hit)
                                                {
                                                    Result<int> nodeIdResult = lexer.GetInt(pos);
                                                    if (nodeIdResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(nodeIdResult.GetErrorId()));
                                                    int nodeId = nodeIdResult.Value();
                                                    Result<intermediate.MetadataStruct*> result = context->GetMetadata()->AddMetadataStruct(lexer.GetSpan(pos), nodeId);
                                                    if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                                                    value = result.Value();
                                                }
                                                *parentMatch8 = match;
                                            }
                                            *parentMatch7 = match;
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch9 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == ASSIGN)
                                        {
                                            auto incResult2 = ++lexer;
                                            if (incResult2.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult2.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch9 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch10 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == LBRACE)
                                    {
                                        auto incResult3 = ++lexer;
                                        if (incResult3.Error())
                                        {
                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult3.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch10 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch11 = &match;
                            {
                                System.Parsing.Match match(true);
                                long save = lexer.GetPos();
                                System.Parsing.Match* parentMatch12 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch13 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch14 = &match;
                                        {
                                            System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.MetadataField(lexer, context, value);
                                            if (matchResult.Error())
                                            {
                                                return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            first.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                            *parentMatch14 = match;
                                        }
                                        if (match.hit)
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch15 = &match;
                                            {
                                                System.Parsing.Match match(true);
                                                System.Parsing.Match* parentMatch16 = &match;
                                                {
                                                    while (true)
                                                    {
                                                        long save = lexer.GetPos();
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch17 = &match;
                                                            {
                                                                System.Parsing.Match match(false);
                                                                System.Parsing.Match* parentMatch18 = &match;
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    if (*lexer == COMMA)
                                                                    {
                                                                        auto incResult4 = ++lexer;
                                                                        if (incResult4.Error())
                                                                        {
                                                                            return System.Result<System.Parsing.Match>(System.ErrorId(incResult4.GetErrorId()));
                                                                        }
                                                                        match.hit = true;
                                                                    }
                                                                    *parentMatch18 = match;
                                                                }
                                                                if (match.hit)
                                                                {
                                                                    System.Parsing.Match match(false);
                                                                    System.Parsing.Match* parentMatch19 = &match;
                                                                    {
                                                                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.MetadataField(lexer, context, value);
                                                                        if (matchResult.Error())
                                                                        {
                                                                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                                                        }
                                                                        System.Parsing.Match match = matchResult.Value();
                                                                        next.Reset(cast<System.Parsing.Value<bool>*>(match.value));
                                                                        *parentMatch19 = match;
                                                                    }
                                                                    *parentMatch18 = match;
                                                                }
                                                                *parentMatch17 = match;
                                                            }
                                                            if (match.hit)
                                                            {
                                                                *parentMatch16 = match;
                                                            }
                                                            else
                                                            {
                                                                lexer.SetPos(save);
                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                                *parentMatch15 = match;
                                            }
                                            *parentMatch14 = match;
                                        }
                                        *parentMatch13 = match;
                                    }
                                    if (match.hit)
                                    {
                                        *parentMatch12 = match;
                                    }
                                    else
                                    {
                                        lexer.SetPos(save);
                                    }
                                }
                                *parentMatch11 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch20 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == RBRACE)
                            {
                                auto incResult5 = ++lexer;
                                if (incResult5.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(incResult5.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch20 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataStruct");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<bool>(true)));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataStruct");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"MetadataStruct");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> MetadataField(LexerT& lexer, intermediate.Context* context, intermediate.MetadataStruct* parent)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"MetadataField");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957700);
            string fieldName = string();
            System.UniquePtr<intermediate.MetadataItem> item;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Parsing.Match match(false);
                                if (*lexer == ID)
                                {
                                    auto incResult0 = ++lexer;
                                    if (incResult0.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                if (match.hit)
                                {
                                    Result<string> fieldNameResult = ToUtf8(lexer.GetMatch(pos));
                                    if (fieldNameResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(fieldNameResult.GetErrorId()));
                                    fieldName = Rvalue(fieldNameResult.Value());
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                if (*lexer == COLON)
                                {
                                    auto incResult1 = ++lexer;
                                    if (incResult1.Error())
                                    {
                                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                                    }
                                    match.hit = true;
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                long pos = lexer.GetPos();
                                System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.MetadataItem(lexer, context);
                                if (matchResult.Error())
                                {
                                    return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                                }
                                System.Parsing.Match match = matchResult.Value();
                                item.Reset(cast<intermediate.MetadataItem*>(match.value));
                                if (match.hit)
                                {
                                    parent->AddItem(fieldName, item.Release());
                                }
                                *parentMatch7 = match;
                            }
                            *parentMatch6 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataField");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<bool>(true)));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataField");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"MetadataField");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> MetadataItem(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"MetadataItem");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957701);
            System.UniquePtr<intermediate.MetadataItem> mdBool;
            System.UniquePtr<intermediate.MetadataItem> mdLong;
            System.UniquePtr<intermediate.MetadataItem> mdString;
            System.UniquePtr<intermediate.MetadataRef> mdRef;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case FALSE:
                case TRUE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.MetadataBool(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        mdBool.Reset(cast<intermediate.MetadataItem*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataItem");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, mdBool.Release()));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case NUMBER:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.MetadataLong(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        mdLong.Reset(cast<intermediate.MetadataItem*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataItem");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, mdLong.Release()));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case STRING:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.MetadataString(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        mdString.Reset(cast<intermediate.MetadataItem*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataItem");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, mdString.Release()));
                        }
                        *parentMatch3 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case EXCLAMATION:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch4 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Result<System.Parsing.Match> matchResult = intermediate.parser.intermediate_parser<LexerT>.MetadataRef(lexer, context);
                        if (matchResult.Error())
                        {
                            return System.Result<System.Parsing.Match>(System.ErrorId(matchResult.GetErrorId()));
                        }
                        System.Parsing.Match match = matchResult.Value();
                        mdRef.Reset(cast<intermediate.MetadataRef*>(match.value));
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataItem");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, mdRef.Release()));
                        }
                        *parentMatch4 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataItem");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"MetadataItem");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> MetadataBool(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"MetadataBool");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957702);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            switch (*lexer)
            {
                case TRUE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch1 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == TRUE)
                        {
                            auto incResult0 = ++lexer;
                            if (incResult0.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataBool");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetMetadata()->CreateMetadataBool(true)));
                        }
                        *parentMatch1 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
                case FALSE:
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == FALSE)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataBool");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetMetadata()->CreateMetadataBool(false)));
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        *parentMatch0 = match;
                    }
                    break;
                }
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataBool");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"MetadataBool");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> MetadataLong(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"MetadataLong");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957703);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                if (*lexer == NUMBER)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataLong");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    Result<long> result = intermediate.GetLong(lexer.GetMatch(pos));
                    if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                    long value = result.Value();
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetMetadata()->CreateMetadataLong(value)));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataLong");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"MetadataLong");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> MetadataString(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"MetadataString");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957704);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                if (*lexer == STRING)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    #if (DEBUG)
                        if (parser_debug_write_to_log)
                        {
                            auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataString");
                            if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                        }
                    #endif
                    Result<string> result = intermediate.GetString(lexer.GetMatch(pos));
                    if (result.Error()) return System.Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                    string value = Rvalue(result.Value());
                    return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetMetadata()->CreateMetadataString(value, true)));
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataString");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"MetadataString");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
        public static System.Result<System.Parsing.Match> MetadataRef(LexerT& lexer, intermediate.Context* context)
        {
            #if (DEBUG)
            long parser_debug_match_pos = 0;
            bool parser_debug_write_to_log = lexer.Log() != null;
            if (parser_debug_write_to_log)
            {
                parser_debug_match_pos = lexer.GetPos();
                auto result = System.Lex.WriteBeginRuleToLog(lexer, u"MetadataRef");
                if (result.Error())
                {
                    return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                }
            }
            #endif
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 250696132965957705);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                if (*lexer == EXCLAMATION)
                {
                    auto incResult0 = ++lexer;
                    if (incResult0.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        if (*lexer == NUMBER)
                        {
                            auto incResult1 = ++lexer;
                            if (incResult1.Error())
                            {
                                return System.Result<System.Parsing.Match>(System.ErrorId(incResult1.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        if (match.hit)
                        {
                            #if (DEBUG)
                                if (parser_debug_write_to_log)
                                {
                                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataRef");
                                    if (result.Error()) return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                                }
                            #endif
                            Result<int> nodeIdResult = lexer.GetInt(pos);
                            if (nodeIdResult.Error()) return System.Result<System.Parsing.Match>(ErrorId(nodeIdResult.GetErrorId()));
                            int nodeId = nodeIdResult.Value();
                            return System.Result<System.Parsing.Match>(System.Parsing.Match(true, context->GetMetadata()->CreateMetadataRef(lexer.GetSpan(pos), nodeId)));
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            #if (DEBUG)
            if (parser_debug_write_to_log)
            {
                if (match.hit) 
                {
                    auto result = System.Lex.WriteSuccessToLog(lexer, parser_debug_match_pos, u"MetadataRef");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
                else
                {
                    auto result = System.Lex.WriteFailureToLog(lexer, u"MetadataRef");
                    if (result.Error())
                    {
                        return System.Result<System.Parsing.Match>(System.ErrorId(result.GetErrorId()));
                    }
                }
            }
            #endif
            if (!match.hit)
            {
                match.value = null;
            }
            return System.Result<System.Parsing.Match>(match);
        }
    }
}

new class intermediate.parser.intermediate_parser<intermediate_lexer>;

