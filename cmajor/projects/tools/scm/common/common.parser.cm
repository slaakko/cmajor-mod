// this file has been automatically generated from 'C:/work/cmajor-mod/cmajor/projects/tools/scm/common/common.parser' using soul parser generator spg version 5.0.0

using System;
using System.Lex;
using System.Parsing;
using cm.token;
using scm.token;
using punctuation.token;

namespace scm.common.parser
{
    static class CommonParser<LexerT>
    {
        static Result<System.Parsing.Match> QualifiedId(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479425);
            ustring str = ustring();
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            System.Parsing.Match match(false);
                            if (*lexer == ID)
                            {
                                auto incResult0 = ++lexer; 
                                if (incResult0.Error())
                                {
                                    return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            if (match.hit)
                            {
                                str.Append(lexer.GetToken(pos).ToString());
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                while (true)
                                {
                                    long save = lexer.GetPos();
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch6 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch7 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                if (*lexer == DOT)
                                                {
                                                    auto incResult1 = ++lexer; 
                                                    if (incResult1.Error())
                                                    {
                                                        return Result<System.Parsing.Match>(ErrorId(incResult1.GetErrorId()));
                                                    }
                                                    match.hit = true;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch8 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch9 = &match;
                                                    {
                                                        long pos = lexer.GetPos();
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == ID)
                                                        {
                                                            auto incResult2 = ++lexer; 
                                                            if (incResult2.Error())
                                                            {
                                                                return Result<System.Parsing.Match>(ErrorId(incResult2.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        if (match.hit)
                                                        {
                                                            str.Append('.').Append(lexer.GetToken(pos).ToString());
                                                        }
                                                        *parentMatch9 = match;
                                                    }
                                                    *parentMatch8 = match;
                                                }
                                                *parentMatch7 = match;
                                            }
                                            *parentMatch6 = match;
                                        }
                                        if (match.hit)
                                        {
                                            *parentMatch5 = match;
                                        }
                                        else
                                        {
                                            lexer.SetPos(save);
                                            break;
                                        }
                                    }
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<ustring>(str)));
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> Import(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479426);
            UniquePtr<scm.common.Import> imp = UniquePtr<scm.common.Import>();
            UniquePtr<System.Parsing.Value<ustring>> moduleName;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            Result<System.Parsing.Match> matchResult = CommonParser<LexerT>.ImportKeyword(lexer);
                            if (matchResult.Error())
                            {
                                return Result<System.Parsing.Match>(ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    Result<System.Parsing.Match> matchResult = CommonParser<LexerT>.QualifiedId(lexer);
                                    if (matchResult.Error())
                                    {
                                        return Result<System.Parsing.Match>(ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    moduleName.Reset(cast<System.Parsing.Value<ustring>*>(match.value));
                                    if (match.hit)
                                    {
                                        imp.Reset(new scm.common.Import(moduleName->value));
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch6 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult0 = ++lexer; 
                                if (incResult0.Error())
                                {
                                    return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch6 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    return Result<System.Parsing.Match>(System.Parsing.Match(true, imp.Release()));
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> ExprString(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479427);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                if (*lexer == STRING_LITERAL)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    auto result = scm.common.MakeExprStringValue(lexer.FileName(), lexer.GetToken(pos));
                    if (result.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                    }
                    return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<ustring>(result.Value())));
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> FilePath(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479428);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                if (*lexer == FILEPATH)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    auto result = scm.common.MakeFilePath(lexer.FileName(), lexer.GetToken(pos));
                    if (result.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(result.GetErrorId()));
                    }
                    return Result<System.Parsing.Match>(System.Parsing.Match(true, new System.Parsing.Value<string>(result.Value())));
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> ExportKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479429);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"export";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> ModuleKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479430);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"module";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> ImportKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479431);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"import";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> ParserKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479432);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"parser";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> LexerKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479433);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"lexer";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> TokensKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479434);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"tokens";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> KeywordsKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479435);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"keywords";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> ExpressionsKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479436);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"expressions";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> RulesKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479437);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"rules";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> VariablesKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479438);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"variables";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> ActionsKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479439);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"actions";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> MainKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479440);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"main";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> StartKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479441);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"start";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> EmptyKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479442);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"empty";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> AnyKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479443);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"any";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> VarKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479444);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"var";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        static Result<System.Parsing.Match> ProjectKeyword(LexerT& lexer)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 2028434430229479445);
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                bool pass = true;
                System.Parsing.Match match(false);
                if (*lexer == ID)
                {
                    auto incResult0 = ++lexer; 
                    if (incResult0.Error())
                    {
                        return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                    }
                    match.hit = true;
                }
                if (match.hit)
                {
                    pass = lexer.GetToken(pos).ToString() == u"project";
                }
                if (match.hit && !pass)
                {
                    match = System.Parsing.Match(false);
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
    }

    new class CommonParser<ScmlgLexer>;
    new class CommonParser<ScmpgLexer>;

} // namespace scm.common.parser
