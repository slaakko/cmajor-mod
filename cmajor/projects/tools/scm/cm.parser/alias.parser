// =================================
// Copyright (c) 2024 Seppo Laakko
// Distributed under the MIT license
// =================================

export module cm.parser;

import cm.ast;
import cm.token;

parser AliasParser
{
    lexer CmajorLexer;

    using SpecifierParser.Specifiers;
    using IdentifierParser.Identifier;
    using TypeExprParser.TypeExpr;

    UsingAlias(cm.parser.Context* context, var System.Lex.Span span) : cm.ast.Node*
        ::= 
        (
            Specifiers:specifiers{ span = lexer.GetSpan(pos); }
            USING
            Identifier:id
            ASSIGN
            TypeExpr(context):typeExpr
            SEMICOLON
        )
        {
            return new cm.ast.AliasNode(span, specifiers, id, typeExpr);
        }
        ;

    Typedef(cm.parser.Context* context, var System.Lex.Span span) : cm.ast.Node*
        ::= 
        (
            Specifiers:specifiers{ span = lexer.GetSpan(pos); }
            TYPEDEF
            TypeExpr(context):typeExpr
            Identifier:id
            SEMICOLON
        )
        {
            return new cm.ast.TypedefNode(span, specifiers, typeExpr, id);
        }
        ;
}
