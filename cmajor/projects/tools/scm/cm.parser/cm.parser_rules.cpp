module cm.parser.rules;

namespace cm.parser.rules {

std::mutex ruleMtx;

std::map<int64_t, std::string>* GetRuleNameMapPtr()
{
    std::lock_guard<std::mutex> lock(ruleMtx);
    static std::map<int64_t, std::string> ruleNameMap = {
        { 6190807448622727169, "AliasParser.UsingAlias" },
        { 6190807448622727170, "AliasParser.Typedef" },
        { 9159366711927898113, "AttributeParser.Attributes" },
        { 9159366711927898114, "AttributeParser.Attribute" },
        { 6062887121931206657, "ClassParser.Class" },
        { 6062887121931206658, "ClassParser.InheritanceAndInterfaces" },
        { 6062887121931206659, "ClassParser.BaseClassOrInterface" },
        { 6062887121931206660, "ClassParser.ClassContent" },
        { 6062887121931206661, "ClassParser.ClassMember" },
        { 6062887121931206662, "ClassParser.StaticConstructor" },
        { 6062887121931206663, "ClassParser.Constructor" },
        { 6062887121931206664, "ClassParser.Destructor" },
        { 6062887121931206665, "ClassParser.Initializer" },
        { 6062887121931206666, "ClassParser.MemberFunction" },
        { 6062887121931206667, "ClassParser.ConversionFunction" },
        { 6062887121931206668, "ClassParser.MemberVariable" },
        { 2218785959154024449, "ConceptParser.Concept" },
        { 2218785959154024450, "ConceptParser.Refinement" },
        { 2218785959154024451, "ConceptParser.ConceptBody" },
        { 2218785959154024452, "ConceptParser.ConceptBodyConstraint" },
        { 2218785959154024453, "ConceptParser.TypeNameConstraint" },
        { 2218785959154024454, "ConceptParser.SignatureConstraint" },
        { 2218785959154024455, "ConceptParser.ConstructorConstraint" },
        { 2218785959154024456, "ConceptParser.DestructorConstraint" },
        { 2218785959154024457, "ConceptParser.MemberFunctionConstraint" },
        { 2218785959154024458, "ConceptParser.FunctionConstraint" },
        { 2218785959154024459, "ConceptParser.EmbeddedConstraint" },
        { 2218785959154024460, "ConceptParser.WhereConstraint" },
        { 2218785959154024461, "ConceptParser.ConstraintExpr" },
        { 2218785959154024462, "ConceptParser.DisjunctiveConstraintExpr" },
        { 2218785959154024463, "ConceptParser.ConjunctiveConstraintExpr" },
        { 2218785959154024464, "ConceptParser.PrimaryConstraintExpr" },
        { 2218785959154024465, "ConceptParser.AtomicConstraintExpr" },
        { 2218785959154024466, "ConceptParser.PredicateConstraint" },
        { 2218785959154024467, "ConceptParser.IsConstraint" },
        { 2218785959154024468, "ConceptParser.ConceptOrTypeName" },
        { 2218785959154024469, "ConceptParser.MultiParamConstraint" },
        { 2218785959154024470, "ConceptParser.Axiom" },
        { 2218785959154024471, "ConceptParser.AxiomBody" },
        { 2218785959154024472, "ConceptParser.AxiomStatement" },
        { 6144467603357171713, "ConstantParser.Constant" },
        { 4805340046490075137, "DelegateParser.Delegate" },
        { 4805340046490075138, "DelegateParser.ClassDelegate" },
        { 3399273135097249793, "EnumerationParser.EnumType" },
        { 3399273135097249794, "EnumerationParser.UnderlyingType" },
        { 3399273135097249795, "EnumerationParser.EnumConstants" },
        { 3399273135097249796, "EnumerationParser.EnumConstant" },
        { 1106159468351062017, "ExpressionParser.Expression" },
        { 1106159468351062018, "ExpressionParser.Equivalence" },
        { 1106159468351062019, "ExpressionParser.Implication" },
        { 1106159468351062020, "ExpressionParser.Disjunction" },
        { 1106159468351062021, "ExpressionParser.Conjunction" },
        { 1106159468351062022, "ExpressionParser.BitOr" },
        { 1106159468351062023, "ExpressionParser.BitXor" },
        { 1106159468351062024, "ExpressionParser.BitAnd" },
        { 1106159468351062025, "ExpressionParser.Equality" },
        { 1106159468351062026, "ExpressionParser.EqualityOp" },
        { 1106159468351062027, "ExpressionParser.Relational" },
        { 1106159468351062028, "ExpressionParser.RelationalOp" },
        { 1106159468351062029, "ExpressionParser.Shift" },
        { 1106159468351062030, "ExpressionParser.ShiftOp" },
        { 1106159468351062031, "ExpressionParser.Additive" },
        { 1106159468351062032, "ExpressionParser.AdditiveOp" },
        { 1106159468351062033, "ExpressionParser.Multiplicative" },
        { 1106159468351062034, "ExpressionParser.MultiplicativeOp" },
        { 1106159468351062035, "ExpressionParser.Prefix" },
        { 1106159468351062036, "ExpressionParser.PrefixOp" },
        { 1106159468351062037, "ExpressionParser.Postfix" },
        { 1106159468351062038, "ExpressionParser.Primary" },
        { 1106159468351062039, "ExpressionParser.ArgumentList" },
        { 1106159468351062040, "ExpressionParser.ExpressionList" },
        { 1106159468351062041, "ExpressionParser.SizeOfExpr" },
        { 1106159468351062042, "ExpressionParser.TypeNameExpr" },
        { 1106159468351062043, "ExpressionParser.TypeIdExpr" },
        { 1106159468351062044, "ExpressionParser.CastExpr" },
        { 1106159468351062045, "ExpressionParser.ConstructExpr" },
        { 1106159468351062046, "ExpressionParser.NewExpr" },
        { 1106159468351062047, "ExpressionParser.InvokeExpr" },
        { 6925491583475253249, "FunctionParser.Function" },
        { 6925491583475253250, "FunctionParser.FunctionGroupId" },
        { 6925491583475253251, "FunctionParser.OperatorFunctionGroupId" },
        { 6112958198560325633, "FundamentalTypeParser.FundamentalType" },
        { 5477013540776706049, "GlobalVariableParser.GlobalVariable" },
        { 9148055026495651841, "IdentifierParser.Identifier" },
        { 9148055026495651842, "IdentifierParser.QualifiedId" },
        { 1582658563396861953, "InterfaceParser.Interface" },
        { 1582658563396861954, "InterfaceParser.InterfaceContent" },
        { 1582658563396861955, "InterfaceParser.InterfaceMemberFunction" },
        { 1582658563396861956, "InterfaceParser.InterfaceFunctionGroupId" },
        { 1060778478829305857, "LiteralParser.Literal" },
        { 1060778478829305858, "LiteralParser.SimpleLiteral" },
        { 1060778478829305859, "LiteralParser.ComplexLiteral" },
        { 1060778478829305860, "LiteralParser.ArrayLiteral" },
        { 1060778478829305861, "LiteralParser.StructuredLiteral" },
        { 5654279880603336705, "ParameterParser.ParameterList" },
        { 5654279880603336706, "ParameterParser.Parameter" },
        { 8559150220632391681, "SpecifierParser.Specifiers" },
        { 8559150220632391682, "SpecifierParser.Specifier" },
        { 686527724579192833, "SourceFileParser.SourceFile" },
        { 686527724579192834, "SourceFileParser.NamespaceContent" },
        { 686527724579192835, "SourceFileParser.UsingDirectives" },
        { 686527724579192836, "SourceFileParser.Definitions" },
        { 686527724579192837, "SourceFileParser.Definition" },
        { 686527724579192838, "SourceFileParser.Namespace" },
        { 8886062459526316033, "StatementParser.Statement" },
        { 8886062459526316034, "StatementParser.Label" },
        { 8886062459526316035, "StatementParser.LabeledStatement" },
        { 8886062459526316036, "StatementParser.ControlStatement" },
        { 8886062459526316037, "StatementParser.CompoundStatement" },
        { 8886062459526316038, "StatementParser.ReturnStatement" },
        { 8886062459526316039, "StatementParser.IfStatement" },
        { 8886062459526316040, "StatementParser.WhileStatement" },
        { 8886062459526316041, "StatementParser.DoStatement" },
        { 8886062459526316042, "StatementParser.RangeForStatement" },
        { 8886062459526316043, "StatementParser.ForStatement" },
        { 8886062459526316044, "StatementParser.ForInitStatement" },
        { 8886062459526316045, "StatementParser.ForLoopStatementExpr" },
        { 8886062459526316046, "StatementParser.BreakStatement" },
        { 8886062459526316047, "StatementParser.ContinueStatement" },
        { 8886062459526316048, "StatementParser.GotoStatement" },
        { 8886062459526316049, "StatementParser.SwitchStatement" },
        { 8886062459526316050, "StatementParser.CaseStatement" },
        { 8886062459526316051, "StatementParser.DefaultStatement" },
        { 8886062459526316052, "StatementParser.GotoCaseStatement" },
        { 8886062459526316053, "StatementParser.GotoDefaultStatement" },
        { 8886062459526316054, "StatementParser.ExpressionStatement" },
        { 8886062459526316055, "StatementParser.AssignmentStatement" },
        { 8886062459526316056, "StatementParser.AssignmentStatementExpr" },
        { 8886062459526316057, "StatementParser.ConstructionStatement" },
        { 8886062459526316058, "StatementParser.DeleteStatement" },
        { 8886062459526316059, "StatementParser.DestroyStatement" },
        { 8886062459526316060, "StatementParser.EmptyStatement" },
        { 8886062459526316061, "StatementParser.ThrowStatement" },
        { 8886062459526316062, "StatementParser.TryStatement" },
        { 8886062459526316063, "StatementParser.Catch" },
        { 8886062459526316064, "StatementParser.AssertStatement" },
        { 8886062459526316065, "StatementParser.ConditionalCompilationStatement" },
        { 8886062459526316066, "StatementParser.ConditionalCompilationExpression" },
        { 8886062459526316067, "StatementParser.ConditionalCompilationDisjunction" },
        { 8886062459526316068, "StatementParser.ConditionalCompilationConjunction" },
        { 8886062459526316069, "StatementParser.ConditionalCompilationPrefix" },
        { 8886062459526316070, "StatementParser.ConditionalCompilationPrimary" },
        { 8781986653095854081, "TemplateParser.TemplateId" },
        { 8781986653095854082, "TemplateParser.TemplateParameterList" },
        { 8781986653095854083, "TemplateParser.TemplateParameter" },
        { 8781986653095854084, "TemplateParser.InstantiationRequest" },
        { 6032173986891169793, "TypeExprParser.TypeExpr" },
        { 6032173986891169794, "TypeExprParser.PrefixTypeExpr" },
        { 6032173986891169795, "TypeExprParser.PostfixTypeExpr" },
        { 6032173986891169796, "TypeExprParser.PrimaryTypeExpr" }
    };
    return &ruleNameMap;
}

} // cm.parser.rules
