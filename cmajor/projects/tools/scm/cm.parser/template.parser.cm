// this file has been automatically generated from 'C:/work/cmajor-mod/cmajor/projects/tools/scm/cm.parser/template.parser' using soul parser generator spg version 5.0.0

using System;
using System.Lex;
using System.Parsing;
using cm.ast;
using cm.token;

namespace cm.parser
{
    public static class TemplateParser<LexerT>
    {
        public static Result<System.Parsing.Match> TemplateId(LexerT& lexer, cm.parser.Context* context)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8781986653095854081);
            UniquePtr<cm.ast.TemplateIdNode> templateId = UniquePtr<cm.ast.TemplateIdNode>();
            UniquePtr<cm.ast.IdentifierNode> primary;
            UniquePtr<cm.ast.Node> templateArg;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    long pos = lexer.GetPos();
                    System.Parsing.Match match(true);
                    if (match.hit)
                    {
                        context->BeginParsingTemplateId();
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (match.hit)
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch2 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch3 = &match;
                    {
                        long pos = lexer.GetPos();
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        Result<System.Parsing.Match> matchResult = IdentifierParser<LexerT>.QualifiedId(lexer);
                                        if (matchResult.Error())
                                        {
                                            return Result<System.Parsing.Match>(ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        primary.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                                        if (match.hit)
                                        {
                                            templateId.Reset(new cm.ast.TemplateIdNode(lexer.GetSpan(pos), primary.Release()));
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch8 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch9 = &match;
                                        {
                                            long pos = lexer.GetPos();
                                            System.Parsing.Match match(false);
                                            if (*lexer == LANGLE)
                                            {
                                                auto incResult0 = ++lexer; 
                                                if (incResult0.Error())
                                                {
                                                    return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                                                }
                                                match.hit = true;
                                            }
                                            if (match.hit)
                                            {
                                                ++lexer.vars.leftAngleCount;
                                            }
                                            *parentMatch9 = match;
                                        }
                                        *parentMatch8 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch5 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch10 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch11 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch12 = &match;
                                        {
                                            System.Parsing.Match match(false);
                                            System.Parsing.Match* parentMatch13 = &match;
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch14 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch15 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch16 = &match;
                                                        {
                                                            long pos = lexer.GetPos();
                                                            Result<System.Parsing.Match> matchResult = TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                                            if (matchResult.Error())
                                                            {
                                                                return Result<System.Parsing.Match>(ErrorId(matchResult.GetErrorId()));
                                                            }
                                                            System.Parsing.Match match = matchResult.Value();
                                                            templateArg.Reset(cast<cm.ast.Node*>(match.value));
                                                            if (match.hit)
                                                            {
                                                                templateId->AddTemplateArgument(templateArg.Release());
                                                            }
                                                            *parentMatch16 = match;
                                                        }
                                                        *parentMatch15 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch17 = &match;
                                                        {
                                                            System.Parsing.Match match(true);
                                                            System.Parsing.Match* parentMatch18 = &match;
                                                            {
                                                                while (true)
                                                                {
                                                                    long save = lexer.GetPos();
                                                                    {
                                                                        System.Parsing.Match match(false);
                                                                        System.Parsing.Match* parentMatch19 = &match;
                                                                        {
                                                                            System.Parsing.Match match(false);
                                                                            if (*lexer == COMMA)
                                                                            {
                                                                                auto incResult1 = ++lexer; 
                                                                                if (incResult1.Error())
                                                                                {
                                                                                    return Result<System.Parsing.Match>(ErrorId(incResult1.GetErrorId()));
                                                                                }
                                                                                match.hit = true;
                                                                            }
                                                                            *parentMatch19 = match;
                                                                        }
                                                                        if (match.hit)
                                                                        {
                                                                            System.Parsing.Match match(false);
                                                                            System.Parsing.Match* parentMatch20 = &match;
                                                                            {
                                                                                System.Parsing.Match match(false);
                                                                                System.Parsing.Match* parentMatch21 = &match;
                                                                                {
                                                                                    long pos = lexer.GetPos();
                                                                                    Result<System.Parsing.Match> matchResult = TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                                                                    if (matchResult.Error())
                                                                                    {
                                                                                        return Result<System.Parsing.Match>(ErrorId(matchResult.GetErrorId()));
                                                                                    }
                                                                                    System.Parsing.Match match = matchResult.Value();
                                                                                    templateArg.Reset(cast<cm.ast.Node*>(match.value));
                                                                                    if (match.hit)
                                                                                    {
                                                                                        templateId->AddTemplateArgument(templateArg.Release());
                                                                                    }
                                                                                    *parentMatch21 = match;
                                                                                }
                                                                                *parentMatch20 = match;
                                                                            }
                                                                            *parentMatch19 = match;
                                                                        }
                                                                        if (match.hit)
                                                                        {
                                                                            *parentMatch18 = match;
                                                                        }
                                                                        else
                                                                        {
                                                                            lexer.SetPos(save);
                                                                            break;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            *parentMatch17 = match;
                                                        }
                                                        *parentMatch15 = match;
                                                    }
                                                    *parentMatch14 = match;
                                                }
                                                *parentMatch13 = match;
                                            }
                                            if (match.hit)
                                            {
                                                System.Parsing.Match match(false);
                                                System.Parsing.Match* parentMatch22 = &match;
                                                {
                                                    System.Parsing.Match match(false);
                                                    if (*lexer == RANGLE)
                                                    {
                                                        auto incResult2 = ++lexer; 
                                                        if (incResult2.Error())
                                                        {
                                                            return Result<System.Parsing.Match>(ErrorId(incResult2.GetErrorId()));
                                                        }
                                                        match.hit = true;
                                                    }
                                                    *parentMatch22 = match;
                                                }
                                                *parentMatch13 = match;
                                            }
                                            *parentMatch12 = match;
                                        }
                                        if (match.hit)
                                        {
                                            --lexer.vars.leftAngleCount;
                                        }
                                        else
                                        {
                                            --lexer.vars.leftAngleCount;
                                        }
                                        *parentMatch11 = match;
                                    }
                                    *parentMatch10 = match;
                                }
                                *parentMatch5 = match;
                            }
                            *parentMatch4 = match;
                        }
                        if (match.hit)
                        {
                            context->EndParsingTemplateId();
                            return Result<System.Parsing.Match>(System.Parsing.Match(true, templateId.Release()));
                        }
                        else
                        {
                            context->EndParsingTemplateId();
                        }
                        *parentMatch3 = match;
                    }
                    *parentMatch2 = match;
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        public static Result<System.Parsing.Match> TemplateParameterList(LexerT& lexer, cm.parser.Context* context, cm.ast.Node* owner)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8781986653095854082);
            UniquePtr<cm.ast.TemplateParameterNode> tp;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == LANGLE)
                        {
                            auto incResult0 = ++lexer; 
                            if (incResult0.Error())
                            {
                                return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch6 = &match;
                                    {
                                        long pos = lexer.GetPos();
                                        Result<System.Parsing.Match> matchResult = TemplateParser<LexerT>.TemplateParameter(lexer, context);
                                        if (matchResult.Error())
                                        {
                                            return Result<System.Parsing.Match>(ErrorId(matchResult.GetErrorId()));
                                        }
                                        System.Parsing.Match match = matchResult.Value();
                                        tp.Reset(cast<cm.ast.TemplateParameterNode*>(match.value));
                                        if (match.hit)
                                        {
                                            owner->AddTemplateParameter(tp.Release());
                                        }
                                        *parentMatch6 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                if (match.hit)
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(true);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            while (true)
                                            {
                                                long save = lexer.GetPos();
                                                {
                                                    System.Parsing.Match match(false);
                                                    System.Parsing.Match* parentMatch9 = &match;
                                                    {
                                                        System.Parsing.Match match(false);
                                                        if (*lexer == COMMA)
                                                        {
                                                            auto incResult1 = ++lexer; 
                                                            if (incResult1.Error())
                                                            {
                                                                return Result<System.Parsing.Match>(ErrorId(incResult1.GetErrorId()));
                                                            }
                                                            match.hit = true;
                                                        }
                                                        *parentMatch9 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        System.Parsing.Match match(false);
                                                        System.Parsing.Match* parentMatch10 = &match;
                                                        {
                                                            System.Parsing.Match match(false);
                                                            System.Parsing.Match* parentMatch11 = &match;
                                                            {
                                                                long pos = lexer.GetPos();
                                                                Result<System.Parsing.Match> matchResult = TemplateParser<LexerT>.TemplateParameter(lexer, context);
                                                                if (matchResult.Error())
                                                                {
                                                                    return Result<System.Parsing.Match>(ErrorId(matchResult.GetErrorId()));
                                                                }
                                                                System.Parsing.Match match = matchResult.Value();
                                                                tp.Reset(cast<cm.ast.TemplateParameterNode*>(match.value));
                                                                if (match.hit)
                                                                {
                                                                    owner->AddTemplateParameter(tp.Release());
                                                                }
                                                                *parentMatch11 = match;
                                                            }
                                                            *parentMatch10 = match;
                                                        }
                                                        *parentMatch9 = match;
                                                    }
                                                    if (match.hit)
                                                    {
                                                        *parentMatch8 = match;
                                                    }
                                                    else
                                                    {
                                                        lexer.SetPos(save);
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch12 = &match;
                    {
                        System.Parsing.Match match(false);
                        if (*lexer == RANGLE)
                        {
                            auto incResult2 = ++lexer; 
                            if (incResult2.Error())
                            {
                                return Result<System.Parsing.Match>(ErrorId(incResult2.GetErrorId()));
                            }
                            match.hit = true;
                        }
                        *parentMatch12 = match;
                    }
                    *parentMatch1 = match;
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        public static Result<System.Parsing.Match> TemplateParameter(LexerT& lexer, cm.parser.Context* context)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8781986653095854083);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.IdentifierNode> id;
            UniquePtr<cm.ast.Node> type;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            long pos = lexer.GetPos();
                            Result<System.Parsing.Match> matchResult = IdentifierParser<LexerT>.Identifier(lexer);
                            if (matchResult.Error())
                            {
                                return Result<System.Parsing.Match>(ErrorId(matchResult.GetErrorId()));
                            }
                            System.Parsing.Match match = matchResult.Value();
                            id.Reset(cast<cm.ast.IdentifierNode*>(match.value));
                            if (match.hit)
                            {
                                span = lexer.GetSpan(pos);
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch4 = &match;
                        {
                            System.Parsing.Match match(true);
                            long save = lexer.GetPos();
                            System.Parsing.Match* parentMatch5 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    System.Parsing.Match* parentMatch7 = &match;
                                    {
                                        System.Parsing.Match match(false);
                                        if (*lexer == ASSIGN)
                                        {
                                            auto incResult0 = ++lexer; 
                                            if (incResult0.Error())
                                            {
                                                return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                                            }
                                            match.hit = true;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    if (match.hit)
                                    {
                                        System.Parsing.Match match(false);
                                        System.Parsing.Match* parentMatch8 = &match;
                                        {
                                            Result<System.Parsing.Match> matchResult = TypeExprParser<LexerT>.TypeExpr(lexer, context);
                                            if (matchResult.Error())
                                            {
                                                return Result<System.Parsing.Match>(ErrorId(matchResult.GetErrorId()));
                                            }
                                            System.Parsing.Match match = matchResult.Value();
                                            type.Reset(cast<cm.ast.Node*>(match.value));
                                            *parentMatch8 = match;
                                        }
                                        *parentMatch7 = match;
                                    }
                                    *parentMatch6 = match;
                                }
                                if (match.hit)
                                {
                                    *parentMatch5 = match;
                                }
                                else
                                {
                                    lexer.SetPos(save);
                                }
                            }
                            *parentMatch4 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    return Result<System.Parsing.Match>(System.Parsing.Match(true, new cm.ast.TemplateParameterNode(span, id.Release(), type.Release())));
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
        public static Result<System.Parsing.Match> InstantiationRequest(LexerT& lexer, cm.parser.Context* context)
        {
            System.Lex.RuleGuard<LexerT> ruleGuard(lexer, 8781986653095854084);
            System.Lex.Span span = System.Lex.Span();
            UniquePtr<cm.ast.FullInstantiationRequestNode> requestNode = UniquePtr<cm.ast.FullInstantiationRequestNode>();
            UniquePtr<cm.ast.TemplateIdNode> templateId;
            System.Parsing.Match match(false);
            System.Parsing.Match* parentMatch0 = &match;
            {
                long pos = lexer.GetPos();
                System.Parsing.Match match(false);
                System.Parsing.Match* parentMatch1 = &match;
                {
                    System.Parsing.Match match(false);
                    System.Parsing.Match* parentMatch2 = &match;
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch3 = &match;
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch4 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch5 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    System.Parsing.Match match(false);
                                    if (*lexer == NEW)
                                    {
                                        auto incResult0 = ++lexer; 
                                        if (incResult0.Error())
                                        {
                                            return Result<System.Parsing.Match>(ErrorId(incResult0.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    if (match.hit)
                                    {
                                        span = lexer.GetSpan(pos);
                                    }
                                    *parentMatch5 = match;
                                }
                                *parentMatch4 = match;
                            }
                            if (match.hit)
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch6 = &match;
                                {
                                    System.Parsing.Match match(false);
                                    if (*lexer == CLASS)
                                    {
                                        auto incResult1 = ++lexer; 
                                        if (incResult1.Error())
                                        {
                                            return Result<System.Parsing.Match>(ErrorId(incResult1.GetErrorId()));
                                        }
                                        match.hit = true;
                                    }
                                    *parentMatch6 = match;
                                }
                                *parentMatch4 = match;
                            }
                            *parentMatch3 = match;
                        }
                        if (match.hit)
                        {
                            System.Parsing.Match match(false);
                            System.Parsing.Match* parentMatch7 = &match;
                            {
                                System.Parsing.Match match(false);
                                System.Parsing.Match* parentMatch8 = &match;
                                {
                                    long pos = lexer.GetPos();
                                    Result<System.Parsing.Match> matchResult = TemplateParser<LexerT>.TemplateId(lexer, context);
                                    if (matchResult.Error())
                                    {
                                        return Result<System.Parsing.Match>(ErrorId(matchResult.GetErrorId()));
                                    }
                                    System.Parsing.Match match = matchResult.Value();
                                    templateId.Reset(cast<cm.ast.TemplateIdNode*>(match.value));
                                    if (match.hit)
                                    {
                                        requestNode.Reset(new cm.ast.FullInstantiationRequestNode(span, templateId.Release()));
                                    }
                                    *parentMatch8 = match;
                                }
                                *parentMatch7 = match;
                            }
                            *parentMatch3 = match;
                        }
                        *parentMatch2 = match;
                    }
                    if (match.hit)
                    {
                        System.Parsing.Match match(false);
                        System.Parsing.Match* parentMatch9 = &match;
                        {
                            System.Parsing.Match match(false);
                            if (*lexer == SEMICOLON)
                            {
                                auto incResult2 = ++lexer; 
                                if (incResult2.Error())
                                {
                                    return Result<System.Parsing.Match>(ErrorId(incResult2.GetErrorId()));
                                }
                                match.hit = true;
                            }
                            *parentMatch9 = match;
                        }
                        *parentMatch2 = match;
                    }
                    *parentMatch1 = match;
                }
                if (match.hit)
                {
                    return Result<System.Parsing.Match>(System.Parsing.Match(true, requestNode.Release()));
                }
                *parentMatch0 = match;
            }
            if (!match.hit)
            {
                match.value = null;
            }
            return Result<System.Parsing.Match>(match);
        }
    }

    new class TemplateParser<CmajorLexer>;

} // namespace cm.parser
