// =================================
// Copyright (c) 2024 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using System.Windows;

namespace spring
{
    abstract class ClickTool : Tool
    {
        public ClickTool(ToolKind kind_) : base(kind_)
        {
        }
        public override bool IsClickTool() const
        {
            return true;
        }
    }

    class ClassTool : ClickTool
    {
        public ClassTool() : base(ToolKind.classTool)
        {
        }
        [nodiscard]
        public override Result<bool> Initialize(Diagram* diagram)
        {
            auto result = diagram->ResetSelection();
            if (result.Error()) return result;
            diagram->ResetOperation();
            return Result<bool>(true);
        }
        [nodiscard]
        public override Result<bool> MouseNormalLeftClick(MouseArgs& args)
        {
            Diagram* diagram = GetDiagram();
            auto result = diagram->ResetSelection();
            if (result.Error()) return result;
            UniquePtr<ClassElement> classElement(new ClassElement());
            classElement->SetName("Class");
            classElement->SetLocation(args.location);
            UniquePtr<AddElementsCommand> addElementsCommand(new AddElementsCommand(diagram));
            addElementsCommand->AddIndex(diagram->NextIndex());
            result = diagram->AddElement(classElement.Release());
            if (result.Error()) return result;
            result = diagram->SetChanged();
            if (result.Error()) return result;
            result = diagram->Invalidate();
            if (result.Error()) return result;
            result = diagram->GetCommandList().AddCommand(addElementsCommand.Release());
            if (result.Error()) return result;
            result = Tools.Instance().SetCurrent(Tools.Instance().GetSelectTool());
            if (result.Error()) return result;
            return Result<bool>(true);
        }
    }

    class ObjectTool : ClickTool
    {
        public ObjectTool() : base(ToolKind.objectTool)
        {
        }
    }

    class NoteTool : ClickTool
    {
        public NoteTool() : base(ToolKind.noteTool)
        {
        }
    }
}


