using System;
using System.Collections;

namespace System.Dom
{
    public class DocumentFragment : ParentNode
    {
        public suppress DocumentFragment(const DocumentFragment&);
        public suppress DocumentFragment(DocumentFragment&&);
        public DocumentFragment() :
            base(NodeType.documentFragmentNode, u"document_fragment")
        {
        }
        public suppress DocumentFragment& operator=(const DocumentFragment&);
        public suppress DocumentFragment& operator=(DocumentFragment&&);
        public override UniquePtr<Node> CloneNode(bool deep)
        {
            UniquePtr<Node> clonedDocumentFragment(new DocumentFragment());
            if (deep)
            {
                ParentNode* parentNode = cast<ParentNode*>(clonedDocumentFragment.Get());
                CloneChildrenTo(parentNode);
            }
            return clonedDocumentFragment;
        }
    }

} // namespace System.Dom
