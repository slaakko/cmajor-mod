// =================================
// Copyright (c) 2024 Seppo Laakko
// Distributed under the MIT license
// =================================

export module cmajor.msg.code.completion.message;

class CodeCompletionRequest
{
    time_point created;
    time_point received;
}

class CodeCompletionReply
{
    time_point requestCreated;
    time_point requestReceived;
    time_point created;
}

class LoadEditModuleRequest : CodeCompletionRequest
{
    string projectFilePath;
    string backend;
    string config;
}

class LoadEditModuleReply : CodeCompletionReply
{
    string key;
    string result;
    string error;
    time_point startLoading;
    time_point startParsing;
    time_point endParsing;
    time_point endLoading;
}

class ResetEditModuleCacheRequest : CodeCompletionRequest
{
}

class ResetEditModuleCacheReply : CodeCompletionReply
{
    string result;
    string error;
}

class ParseSourceRequest : CodeCompletionRequest
{
    string projectFilePath;
    string backend;
    string config;
    string sourceFilePath;
    ustring sourceCode;
}

class ParseSourceReply : CodeCompletionReply
{
    bool ok;
    string error;
    string[] errors;
    bool synchronized;
    string cursorContainer;
    int[] ruleContext;
    time_point startParsing;
    time_point endParsing;
}

class GetCCListRequest : CodeCompletionRequest
{
    string projectFilePath;
    string backend;
    string config;
    string sourceFilePath;
    ustring ccText;
    int[] ruleContext;
    ustring cursorLine;
}

class GetCCListReply : CodeCompletionReply
{
    bool ok;
    string error;
    string ccList;
    time_point startGetCCList;
    time_point endGetCCList;
}

class GetParamHelpListRequest : CodeCompletionRequest
{
    string projectFilePath;
    string backend;
    string config;
    string sourceFilePath;
    int symbolIndex;
}

class GetParamHelpListReply : CodeCompletionReply
{
    bool ok;
    string error;
    string list;
    time_point startGetParamHelpList;
    time_point endGetParamHelpList;
}

class StopCCRequest : CodeCompletionRequest
{
}

class StopCCReply : CodeCompletionReply
{
}

class KeepAliveCCRequest
{
}

class KeepAliveCCReply
{
}
